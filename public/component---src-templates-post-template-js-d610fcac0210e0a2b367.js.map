{
  "version": 3,
  "file": "component---src-templates-post-template-js-d610fcac0210e0a2b367.js",
  "mappings": "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ACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,KACA,SACA,OACA,OACA,QACA,MACA,OACA,KACA,OACA,OACA,MACA,OACA,YACA,WACA,YACA,WACA,OACA,SACA,MACA,OACA,QACA,OACA,UACA,OACA,MACA,KACA,MACA,OACA,kBACA,MACA,OACA,OACA,UACA,UACA,QACA,QACA,MACA,OACA,MACA,OACA,YACA,aACA,MACA,MACA,SACA,OACA,cACA,SACA,MACA,KACA,MACA,QACA,KACA,MACA,OACA,cACA,cACA,eACA,OACA,UACA,UACA,YACA,MACA,MACA,MACA,MACA,aACA,KACA,UACA,UACA,OACA,SACA,SACA,mBACA,0BACA,UACA,MACA,kBACA,qBACA,MACA,MACA,OACA,WACA,OACA,SACA,OACA,KACA,MACA,eACA,QACA,MACA,OACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,UACA,SACA,QACA,SACA,OACA,SACA,UACA,MACA,UACA,QACA,SACA,MACA,QACA,MACA,OACA,YACA,WACA,QACA,OACA,QACA,MACA,WACA,MACA,QACA,OACA,aACA,OACA,MACA,QACA,MACA,SACA,UACA,MACA,QACA,MACA,YACA,SACA,MACA,SACA,SACA,WACA,cACA,SACA,OACA,UACA,QACA,MACA,SAOEC,GAAc,2IACdC,GAAc,2CAuElB,SAASC,GAAUC,EAAOhV,GAIxB,OAHAgV,EAAQA,EAAM5X,OACd4C,EAAUA,GAAW,GAEd,SAAS+I,EAAK5M,EAAMqO,GACzB,OAAKrO,GAGLqO,EAAMA,EAAIpN,QAAUoN,EACpBwK,EAAQA,EAAMrX,QAAQxB,EAAMqO,GACrBzB,GAJE,IAAIqE,OAAO4H,EAAOhV,EAK7B,CACF,CAGA,IAOIiV,GAAcF,GAAU,2CAAVA,CACG,WAND,sBAKFA,CAEG,gBAND,UAIFA,CAGG,gBAND,UAGFA,GAMdG,GAAcH,GAAU,yCAAVA,CACG,YAdD,6BAaFA,CAEG,aAAcE,GAFjBF,GAKdI,GAAcJ,GAAU,yCAA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",
  "sources": [
    "webpack://root/./src/templates/nodes.js",
    "webpack://root/./node_modules/remarkable/dist/esm/index.browser.js",
    "webpack://root/./node_modules/remarkable-react/lib/remarkable-react.esm.js",
    "webpack://root/./src/templates/postTemplate.js"
  ],
  "sourcesContent": [
    "import React, { useMemo } from 'react';\nimport { Compare,CodeBlock,ApiTable } from 'components/index';\n\nexport const components = {\n  Compare,\n  code: ({ children }) => {\n    return (<CodeBlock code={children} />);\n  },\n  table: ApiTable,\n  section: ({ children }) => {\n    let id = '';\n\n    if (Array.isArray(children)) {\n      if (children[0].props.originalType === 'h2') {\n        id = children[0] ? children[0].props.children : '';\n      }\n    } else {\n      id = children.props.children;\n    }\n\n    return <section className=\"markdown md anchor-section gatsby-section\">{children}</section>;\n  },\n  h1: ({ children }) => {\n    const [id] = children;\n    return (<h1 id={id}>{children}</h1>);\n  },\n  h2: ({ children }) => {\n    const [id] = children;\n    return (<h2 id={id}>{children}</h2>);\n  },\n  h3: ({ children }) => {\n    const [id] = children;\n    return (<h3 id={id}>{children}</h3>);\n  },\n  h4: ({ children }) => {\n    const [id] = children;\n    return (<h4 id={id}>{children}</h4>);\n  },\n  h5: ({ children }) => {\n    const [id] = children;\n    return (<h5 id={id}>{children}</h5>);\n  },\n  h6: ({ children }) => {\n    const [id] = children;\n    return (<h6 id={id}>{children}</h6>);\n  }\n};\n\nexport function useComponents(tabLable =[]) {\n  return useMemo(() => {\n    return 1\n  }, [tabLable]);\n}",
    "var textarea;\n\nfunction decodeEntity(name) {\n  textarea = textarea || document.createElement('textarea');\n  textarea.innerHTML = '&' + name + ';';\n  return textarea.value;\n}\n\n/**\n * Utility functions\n */\n\nfunction typeOf(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return typeOf(obj) === '[object String]';\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return object\n    ? hasOwn.call(object, key)\n    : false;\n}\n\n// Extend objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = [].slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar UNESCAPE_MD_RE = /\\\\([\\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\nvar NAMED_ENTITY_RE   = /&([a-z#][a-z0-9]{1,31});/gi;\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n  var decoded = decodeEntity(name);\n\n  if (name !== decoded) {\n    return decoded;\n  } else if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16)\n    :\n      parseInt(name.slice(1), 10);\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n  return match;\n}\n\nfunction replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n  isString: isString,\n  has: has,\n  assign: assign,\n  unescapeMd: unescapeMd,\n  isValidEntityCode: isValidEntityCode,\n  fromCodePoint: fromCodePoint,\n  replaceEntities: replaceEntities,\n  escapeHtml: escapeHtml\n});\n\n/**\n * Renderer rules cache\n */\n\nvar rules = {};\n\n/**\n * Blockquotes\n */\n\nrules.blockquote_open = function(/* tokens, idx, options, env */) {\n  return '<blockquote>\\n';\n};\n\nrules.blockquote_close = function(tokens, idx /*, options, env */) {\n  return '</blockquote>' + getBreak(tokens, idx);\n};\n\n/**\n * Code\n */\n\nrules.code = function(tokens, idx /*, options, env */) {\n  if (tokens[idx].block) {\n    return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);\n  }\n  return '<code>' + escapeHtml(tokens[idx].content) + '</code>';\n};\n\n/**\n * Fenced code blocks\n */\n\nrules.fence = function(tokens, idx, options, env, instance) {\n  var token = tokens[idx];\n  var langClass = '';\n  var langPrefix = options.langPrefix;\n  var langName = '', fences, fenceName;\n  var highlighted;\n\n  if (token.params) {\n\n    //\n    // ```foo bar\n    //\n    // Try custom renderer \"foo\" first. That will simplify overwrite\n    // for diagrams, latex, and any other fenced block with custom look\n    //\n\n    fences = token.params.split(/\\s+/g);\n    fenceName = fences.join(' ');\n\n    if (has(instance.rules.fence_custom, fences[0])) {\n      return instance.rules.fence_custom[fences[0]](tokens, idx, options, env, instance);\n    }\n\n    langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));\n    langClass = ' class=\"' + langPrefix + langName + '\"';\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight.apply(options.highlight, [ token.content ].concat(fences))\n      || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  return '<pre><code' + langClass + '>'\n        + highlighted\n        + '</code></pre>'\n        + getBreak(tokens, idx);\n};\n\nrules.fence_custom = {};\n\n/**\n * Headings\n */\n\nrules.heading_open = function(tokens, idx /*, options, env */) {\n  return '<h' + tokens[idx].hLevel + '>';\n};\nrules.heading_close = function(tokens, idx /*, options, env */) {\n  return '</h' + tokens[idx].hLevel + '>\\n';\n};\n\n/**\n * Horizontal rules\n */\n\nrules.hr = function(tokens, idx, options /*, env */) {\n  return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);\n};\n\n/**\n * Bullets\n */\n\nrules.bullet_list_open = function(/* tokens, idx, options, env */) {\n  return '<ul>\\n';\n};\nrules.bullet_list_close = function(tokens, idx /*, options, env */) {\n  return '</ul>' + getBreak(tokens, idx);\n};\n\n/**\n * List items\n */\n\nrules.list_item_open = function(/* tokens, idx, options, env */) {\n  return '<li>';\n};\nrules.list_item_close = function(/* tokens, idx, options, env */) {\n  return '</li>\\n';\n};\n\n/**\n * Ordered list items\n */\n\nrules.ordered_list_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  var order = token.order > 1 ? ' start=\"' + token.order + '\"' : '';\n  return '<ol' + order + '>\\n';\n};\nrules.ordered_list_close = function(tokens, idx /*, options, env */) {\n  return '</ol>' + getBreak(tokens, idx);\n};\n\n/**\n * Paragraphs\n */\n\nrules.paragraph_open = function(tokens, idx /*, options, env */) {\n  return tokens[idx].tight ? '' : '<p>';\n};\nrules.paragraph_close = function(tokens, idx /*, options, env */) {\n  var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);\n  return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');\n};\n\n/**\n * Links\n */\n\nrules.link_open = function(tokens, idx, options /* env */) {\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\n  var target = options.linkTarget ? (' target=\"' + options.linkTarget + '\"') : '';\n  return '<a href=\"' + escapeHtml(tokens[idx].href) + '\"' + title + target + '>';\n};\nrules.link_close = function(/* tokens, idx, options, env */) {\n  return '</a>';\n};\n\n/**\n * Images\n */\n\nrules.image = function(tokens, idx, options /*, env */) {\n  var src = ' src=\"' + escapeHtml(tokens[idx].src) + '\"';\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\n  var alt = ' alt=\"' + (tokens[idx].alt ? escapeHtml(replaceEntities(unescapeMd(tokens[idx].alt))) : '') + '\"';\n  var suffix = options.xhtmlOut ? ' /' : '';\n  return '<img' + src + alt + title + suffix + '>';\n};\n\n/**\n * Tables\n */\n\nrules.table_open = function(/* tokens, idx, options, env */) {\n  return '<table>\\n';\n};\nrules.table_close = function(/* tokens, idx, options, env */) {\n  return '</table>\\n';\n};\nrules.thead_open = function(/* tokens, idx, options, env */) {\n  return '<thead>\\n';\n};\nrules.thead_close = function(/* tokens, idx, options, env */) {\n  return '</thead>\\n';\n};\nrules.tbody_open = function(/* tokens, idx, options, env */) {\n  return '<tbody>\\n';\n};\nrules.tbody_close = function(/* tokens, idx, options, env */) {\n  return '</tbody>\\n';\n};\nrules.tr_open = function(/* tokens, idx, options, env */) {\n  return '<tr>';\n};\nrules.tr_close = function(/* tokens, idx, options, env */) {\n  return '</tr>\\n';\n};\nrules.th_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  return '<th'\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\n    + '>';\n};\nrules.th_close = function(/* tokens, idx, options, env */) {\n  return '</th>';\n};\nrules.td_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  return '<td'\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\n    + '>';\n};\nrules.td_close = function(/* tokens, idx, options, env */) {\n  return '</td>';\n};\n\n/**\n * Bold\n */\n\nrules.strong_open = function(/* tokens, idx, options, env */) {\n  return '<strong>';\n};\nrules.strong_close = function(/* tokens, idx, options, env */) {\n  return '</strong>';\n};\n\n/**\n * Italicize\n */\n\nrules.em_open = function(/* tokens, idx, options, env */) {\n  return '<em>';\n};\nrules.em_close = function(/* tokens, idx, options, env */) {\n  return '</em>';\n};\n\n/**\n * Strikethrough\n */\n\nrules.del_open = function(/* tokens, idx, options, env */) {\n  return '<del>';\n};\nrules.del_close = function(/* tokens, idx, options, env */) {\n  return '</del>';\n};\n\n/**\n * Insert\n */\n\nrules.ins_open = function(/* tokens, idx, options, env */) {\n  return '<ins>';\n};\nrules.ins_close = function(/* tokens, idx, options, env */) {\n  return '</ins>';\n};\n\n/**\n * Highlight\n */\n\nrules.mark_open = function(/* tokens, idx, options, env */) {\n  return '<mark>';\n};\nrules.mark_close = function(/* tokens, idx, options, env */) {\n  return '</mark>';\n};\n\n/**\n * Super- and sub-script\n */\n\nrules.sub = function(tokens, idx /*, options, env */) {\n  return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';\n};\nrules.sup = function(tokens, idx /*, options, env */) {\n  return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';\n};\n\n/**\n * Breaks\n */\n\nrules.hardbreak = function(tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\nrules.softbreak = function(tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n/**\n * Text\n */\n\nrules.text = function(tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n/**\n * Content\n */\n\nrules.htmlblock = function(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\nrules.htmltag = function(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n/**\n * Abbreviations, initialism\n */\n\nrules.abbr_open = function(tokens, idx /*, options, env */) {\n  return '<abbr title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\">';\n};\nrules.abbr_close = function(/* tokens, idx, options, env */) {\n  return '</abbr>';\n};\n\n/**\n * Footnotes\n */\n\nrules.footnote_ref = function(tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\n};\nrules.footnote_block_open = function(tokens, idx, options) {\n  var hr = options.xhtmlOut\n    ? '<hr class=\"footnotes-sep\" />\\n'\n    : '<hr class=\"footnotes-sep\">\\n';\n  return hr + '<section class=\"footnotes\">\\n<ol class=\"footnotes-list\">\\n';\n};\nrules.footnote_block_close = function() {\n  return '</ol>\\n</section>\\n';\n};\nrules.footnote_open = function(tokens, idx) {\n  var id = Number(tokens[idx].id + 1).toString();\n  return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\n};\nrules.footnote_close = function() {\n  return '</li>\\n';\n};\nrules.footnote_anchor = function(tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n  return ' <a href=\"#' + id + '\" class=\"footnote-backref\">↩</a>';\n};\n\n/**\n * Definition lists\n */\n\nrules.dl_open = function() {\n  return '<dl>\\n';\n};\nrules.dt_open = function() {\n  return '<dt>';\n};\nrules.dd_open = function() {\n  return '<dd>';\n};\nrules.dl_close = function() {\n  return '</dl>\\n';\n};\nrules.dt_close = function() {\n  return '</dt>\\n';\n};\nrules.dd_close = function() {\n  return '</dd>\\n';\n};\n\n/**\n * Helper functions\n */\n\nfunction nextToken(tokens, idx) {\n  if (++idx >= tokens.length - 2) {\n    return idx;\n  }\n  if ((tokens[idx].type === 'paragraph_open' && tokens[idx].tight) &&\n      (tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0) &&\n      (tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight)) {\n    return nextToken(tokens, idx + 2);\n  }\n  return idx;\n}\n\n/**\n * Check to see if `\\n` is needed before the next token.\n *\n * @param  {Array} `tokens`\n * @param  {Number} `idx`\n * @return {String} Empty string or newline\n * @api private\n */\n\nvar getBreak = rules.getBreak = function getBreak(tokens, idx) {\n  idx = nextToken(tokens, idx);\n  if (idx < tokens.length && tokens[idx].type === 'list_item_close') {\n    return '';\n  }\n  return '\\n';\n};\n\n/**\n * Renderer class. Renders HTML and exposes `rules` to allow\n * local modifications.\n */\n\nfunction Renderer() {\n  this.rules = assign({}, rules);\n\n  // exported helper, for custom rules only\n  this.getBreak = rules.getBreak;\n}\n\n/**\n * Render a string of inline HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = 0;\n  var result = '';\n\n  while (len--) {\n    result += _rules[tokens[i].type](tokens, i++, options, env, this);\n  }\n\n  return result;\n};\n\n/**\n * Render a string of HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = -1;\n  var result = '';\n\n  while (++i < len) {\n    if (tokens[i].type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else {\n      result += _rules[tokens[i].type](tokens, i, options, env, this);\n    }\n  }\n  return result;\n};\n\n/**\n * Ruler is a helper class for building responsibility chains from\n * parse rules. It allows:\n *\n *   - easy stack rules chains\n *   - getting main chain and named chains content (as arrays of functions)\n *\n * Helper methods, should not be used directly.\n * @api private\n */\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // { name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ] }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - digital anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n/**\n * Find the index of a rule by `name`.\n *\n * @param  {String} `name`\n * @return {Number} Index of the given `name`\n * @api private\n */\n\nRuler.prototype.__find__ = function (name) {\n  var len = this.__rules__.length;\n  var i = -1;\n\n  while (len--) {\n    if (this.__rules__[++i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * Build the rules lookup cache\n *\n * @api private\n */\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n/**\n * Ruler public methods\n * ------------------------------------------------\n */\n\n/**\n * Replace rule function\n *\n * @param  {String} `name` Rule name\n * @param  {Function `fn`\n * @param  {Object} `options`\n * @api private\n */\n\nRuler.prototype.at = function (name, fn, options) {\n  var idx = this.__find__(name);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[idx].fn = fn;\n  this.__rules__[idx].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the chain before given the `ruleName`.\n *\n * @param  {String}   `beforeName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var idx = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(idx, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the chain after the given `ruleName`.\n *\n * @param  {String}   `afterName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var idx = this.__find__(afterName);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(idx + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the end of chain.\n *\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @return {String}\n */\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Enable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to enable\n * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.\n * @api private\n */\n\nRuler.prototype.enable = function (list, strict) {\n  list = !Array.isArray(list)\n    ? [ list ]\n    : list;\n\n  // In strict mode disable all existing rules first\n  if (strict) {\n    this.__rules__.forEach(function (rule) {\n      rule.enabled = false;\n    });\n  }\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n  }, this);\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Disable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to disable\n * @api private\n */\n\nRuler.prototype.disable = function (list) {\n  list = !Array.isArray(list)\n    ? [ list ]\n    : list;\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n  }, this);\n\n  this.__cache__ = null;\n};\n\n/**\n * Get a rules list as an array of functions.\n *\n * @param  {String} `chainName`\n * @return {Object}\n * @api private\n */\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n  return this.__cache__[chainName] || [];\n};\n\nfunction block(state) {\n\n  if (state.inlineMode) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.replace(/\\n/g, ' ').trim(),\n      level: 0,\n      lines: [ 0, 1 ],\n      children: []\n    });\n\n  } else {\n    state.block.parse(state.src, state.options, state.env, state.tokens);\n  }\n}\n\n// Inline parser state\n\nfunction StateInline(src, parserInline, options, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.options = options;\n  this.parser = parserInline;\n  this.tokens = outTokens;\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  this.cache = [];        // Stores { start: end } pairs. Useful for backtrack\n                          // optimization of pairs parse (emphasis, strikes).\n\n  // Link parser state vars\n\n  this.isInLabel = false; // Set true when seek link label - we should disable\n                          // \"paired\" rules (emphasis, strikes) to not skip\n                          // tailing `]`\n\n  this.linkLevel = 0;     // Increment for each nesting link. Used to prevent\n                          // nesting in definitions\n\n  this.linkContent = '';  // Temporary storage for link url\n\n  this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels\n                                 // (backtrack optimization)\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  this.tokens.push({\n    type: 'text',\n    content: this.pending,\n    level: this.pendingLevel\n  });\n  this.pending = '';\n};\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (token) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  this.tokens.push(token);\n  this.pendingLevel = this.level;\n};\n\n// Store value to cache.\n// !!! Implementation has parser-specific optimizations\n// !!! keys MUST be integer, >= 0; values MUST be integer, > 0\n//\nStateInline.prototype.cacheSet = function (key, val) {\n  for (var i = this.cache.length; i <= key; i++) {\n    this.cache.push(0);\n  }\n\n  this.cache[key] = val;\n};\n\n// Get cache value\n//\nStateInline.prototype.cacheGet = function (key) {\n  return key < this.cache.length ? this.cache[key] : 0;\n};\n\n/**\n * Parse link labels\n *\n * This function assumes that first character (`[`) already matches;\n * returns the end of the label.\n *\n * @param  {Object} state\n * @param  {Number} start\n * @api private\n */\n\nfunction parseLinkLabel(state, start) {\n  var level, found, marker,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos,\n      oldFlag = state.isInLabel;\n\n  if (state.isInLabel) { return -1; }\n\n  if (state.labelUnmatchedScopes) {\n    state.labelUnmatchedScopes--;\n    return -1;\n  }\n\n  state.pos = start + 1;\n  state.isInLabel = true;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5B /* [ */) {\n      level++;\n    } else if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n    state.labelUnmatchedScopes = 0;\n  } else {\n    state.labelUnmatchedScopes = level - 1;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n  state.isInLabel = oldFlag;\n\n  return labelEnd;\n}\n\n// Parse abbreviation definitions, i.e. `*[abbr]: description`\n\n\nfunction parseAbbr(str, parserInline, options, env) {\n  var state, labelEnd, pos, max, label, title;\n\n  if (str.charCodeAt(0) !== 0x2A/* * */) { return -1; }\n  if (str.charCodeAt(1) !== 0x5B/* [ */) { return -1; }\n\n  if (str.indexOf(']:') === -1) { return -1; }\n\n  state = new StateInline(str, parserInline, options, env, []);\n  labelEnd = parseLinkLabel(state, 1);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\n\n  max = state.posMax;\n\n  // abbr title is always one line, so looking for ending \"\\n\" here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x0A) { break; }\n  }\n\n  label = str.slice(2, labelEnd);\n  title = str.slice(labelEnd + 2, pos).trim();\n  if (title.length === 0) { return -1; }\n  if (!env.abbreviations) { env.abbreviations = {}; }\n  // prepend ':' to avoid conflict with Object.prototype members\n  if (typeof env.abbreviations[':' + label] === 'undefined') {\n    env.abbreviations[':' + label] = title;\n  }\n\n  return pos;\n}\n\nfunction abbr(state) {\n  var tokens = state.tokens, i, l, content, pos;\n\n  if (state.inlineMode) {\n    return;\n  }\n\n  // Parse inlines\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i - 1].type === 'paragraph_open' &&\n        tokens[i].type === 'inline' &&\n        tokens[i + 1].type === 'paragraph_close') {\n\n      content = tokens[i].content;\n      while (content.length) {\n        pos = parseAbbr(content, state.inline, state.options, state.env);\n        if (pos < 0) { break; }\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n}\n\nfunction normalizeLink(url) {\n  var normalized = replaceEntities(url);\n  // We shouldn't care about the result of malformed URIs,\n  // and should not throw an exception.\n  try {\n    normalized = decodeURI(normalized);\n  } catch (err) {}\n  return encodeURI(normalized);\n}\n\n/**\n * Parse link destination\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nfunction parseLinkDestination(state, pos) {\n  var code, level, link,\n      start = pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = state.src.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return false; }\n      if (code === 0x3E /* > */) {\n        link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\n        if (!state.parser.validateLink(link)) { return false; }\n        state.pos = pos + 1;\n        state.linkContent = link;\n        return true;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return false;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control chars\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 1) { break; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      level--;\n      if (level < 0) { break; }\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return false; }\n\n  link = unescapeMd(state.src.slice(start, pos));\n  if (!state.parser.validateLink(link)) { return false; }\n\n  state.linkContent = link;\n  state.pos = pos;\n  return true;\n}\n\n/**\n * Parse link title\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nfunction parseLinkTitle(state, pos) {\n  var code,\n      start = pos,\n      max = state.posMax,\n      marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return false; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n    if (code === marker) {\n      state.pos = pos + 1;\n      state.linkContent = unescapeMd(state.src.slice(start + 1, pos));\n      return true;\n    }\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    pos++;\n  }\n\n  return false;\n}\n\nfunction normalizeReference(str) {\n  // use .toUpperCase() instead of .toLowerCase()\n  // here to avoid a conflict with Object.prototype\n  // members (most notably, `__proto__`)\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n}\n\nfunction parseReference(str, parser, options, env) {\n  var state, labelEnd, pos, max, code, start, href, title, label;\n\n  if (str.charCodeAt(0) !== 0x5B/* [ */) { return -1; }\n\n  if (str.indexOf(']:') === -1) { return -1; }\n\n  state = new StateInline(str, parser, options, env, []);\n  labelEnd = parseLinkLabel(state, 0);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\n\n  max = state.posMax;\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n    if (code !== 0x20 && code !== 0x0A) { break; }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  if (!parseLinkDestination(state, pos)) { return -1; }\n  href = state.linkContent;\n  pos = state.pos;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (pos = pos + 1; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n    if (code !== 0x20 && code !== 0x0A) { break; }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n    title = state.linkContent;\n    pos = state.pos;\n  } else {\n    title = '';\n    pos = start;\n  }\n\n  // ensure that the end of the line is empty\n  while (pos < max && state.src.charCodeAt(pos) === 0x20/* space */) { pos++; }\n  if (pos < max && state.src.charCodeAt(pos) !== 0x0A) { return -1; }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (typeof env.references[label] === 'undefined') {\n    env.references[label] = { title: title, href: href };\n  }\n\n  return pos;\n}\n\n\nfunction references(state) {\n  var tokens = state.tokens, i, l, content, pos;\n\n  state.env.references = state.env.references || {};\n\n  if (state.inlineMode) {\n    return;\n  }\n\n  // Scan definitions in paragraph inlines\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i].type === 'inline' &&\n        tokens[i - 1].type === 'paragraph_open' &&\n        tokens[i + 1].type === 'paragraph_close') {\n\n      content = tokens[i].content;\n      while (content.length) {\n        pos = parseReference(content, state.inline, state.options, state.env);\n        if (pos < 0) { break; }\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n}\n\nfunction inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.inline.parse(tok.content, state.options, state.env, tok.children);\n    }\n  }\n}\n\nfunction footnote_block(state) {\n  var i, l, j, t, lastParagraph, list, tokens, current, currentLabel,\n      level = 0,\n      insideRef = false,\n      refTokens = {};\n\n  if (!state.env.footnotes) { return; }\n\n  state.tokens = state.tokens.filter(function(tok) {\n    if (tok.type === 'footnote_reference_open') {\n      insideRef = true;\n      current = [];\n      currentLabel = tok.label;\n      return false;\n    }\n    if (tok.type === 'footnote_reference_close') {\n      insideRef = false;\n      // prepend ':' to avoid conflict with Object.prototype members\n      refTokens[':' + currentLabel] = current;\n      return false;\n    }\n    if (insideRef) { current.push(tok); }\n    return !insideRef;\n  });\n\n  if (!state.env.footnotes.list) { return; }\n  list = state.env.footnotes.list;\n\n  state.tokens.push({\n    type: 'footnote_block_open',\n    level: level++\n  });\n  for (i = 0, l = list.length; i < l; i++) {\n    state.tokens.push({\n      type: 'footnote_open',\n      id: i,\n      level: level++\n    });\n\n    if (list[i].tokens) {\n      tokens = [];\n      tokens.push({\n        type: 'paragraph_open',\n        tight: false,\n        level: level++\n      });\n      tokens.push({\n        type: 'inline',\n        content: '',\n        level: level,\n        children: list[i].tokens\n      });\n      tokens.push({\n        type: 'paragraph_close',\n        tight: false,\n        level: --level\n      });\n    } else if (list[i].label) {\n      tokens = refTokens[':' + list[i].label];\n    }\n\n    state.tokens = state.tokens.concat(tokens);\n    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n      lastParagraph = state.tokens.pop();\n    } else {\n      lastParagraph = null;\n    }\n\n    t = list[i].count > 0 ? list[i].count : 1;\n    for (j = 0; j < t; j++) {\n      state.tokens.push({\n        type: 'footnote_anchor',\n        id: i,\n        subId: j,\n        level: level\n      });\n    }\n\n    if (lastParagraph) {\n      state.tokens.push(lastParagraph);\n    }\n\n    state.tokens.push({\n      type: 'footnote_close',\n      level: --level\n    });\n  }\n  state.tokens.push({\n    type: 'footnote_block_close',\n    level: --level\n  });\n}\n\n// Enclose abbreviations in <abbr> tags\n//\n\nvar PUNCT_CHARS = ' \\n()[]\\'\".,!?-';\n\n\n// from Google closure library\n// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\nfunction regEscape(s) {\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n}\n\n\nfunction abbr2(state) {\n  var i, j, l, tokens, token, text, nodes, pos, level, reg, m, regText,\n      blockTokens = state.tokens;\n\n  if (!state.env.abbreviations) { return; }\n  if (!state.env.abbrRegExp) {\n    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(regEscape).join('|') + ')'\n            + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\n    state.env.abbrRegExp = new RegExp(regText, 'g');\n  }\n  reg = state.env.abbrRegExp;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') { continue; }\n    tokens = blockTokens[j].children;\n\n    // We scan from the end, to keep position when new tags added.\n    for (i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token.type !== 'text') { continue; }\n\n      pos = 0;\n      text = token.content;\n      reg.lastIndex = 0;\n      level = token.level;\n      nodes = [];\n\n      while ((m = reg.exec(text))) {\n        if (reg.lastIndex > pos) {\n          nodes.push({\n            type: 'text',\n            content: text.slice(pos, m.index + m[1].length),\n            level: level\n          });\n        }\n\n        nodes.push({\n          type: 'abbr_open',\n          title: state.env.abbreviations[':' + m[2]],\n          level: level++\n        });\n        nodes.push({\n          type: 'text',\n          content: m[2],\n          level: level\n        });\n        nodes.push({\n          type: 'abbr_close',\n          level: --level\n        });\n        pos = reg.lastIndex - m[3].length;\n      }\n\n      if (!nodes.length) { continue; }\n\n      if (pos < text.length) {\n        nodes.push({\n          type: 'text',\n          content: text.slice(pos),\n          level: level\n        });\n      }\n\n      // replace current node\n      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n    }\n  }\n}\n\n// Simple typographical replacements\n//\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  'c': '©',\n  'r': '®',\n  'p': '§',\n  'tm': '™'\n};\n\nfunction replaceScopedAbbr(str) {\n  if (str.indexOf('(') < 0) { return str; }\n\n  return str.replace(SCOPED_ABBR_RE, function(match, name) {\n    return SCOPED_ABBR[name.toLowerCase()];\n  });\n}\n\n\nfunction replace(state) {\n  var i, token, text, inlineTokens, blkIdx;\n\n  if (!state.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    inlineTokens = state.tokens[blkIdx].children;\n\n    for (i = inlineTokens.length - 1; i >= 0; i--) {\n      token = inlineTokens[i];\n      if (token.type === 'text') {\n        text = token.content;\n\n        text = replaceScopedAbbr(text);\n\n        if (RARE_RE.test(text)) {\n          text = text\n            .replace(/\\+-/g, '±')\n            // .., ..., ....... -> …\n            // but ?..... & !..... -> ?.. & !..\n            .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n            .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n            // em-dash\n            .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n            // en-dash\n            .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n            .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n        }\n\n        token.content = text;\n      }\n    }\n  }\n}\n\n// Convert straight quotation marks to typographic ones\n//\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar PUNCT_RE = /[-\\s()\\[\\]]/;\nvar APOSTROPHE = '’';\n\n// This function returns true if the character at `pos`\n// could be inside a word.\nfunction isLetter(str, pos) {\n  if (pos < 0 || pos >= str.length) { return false; }\n  return !PUNCT_RE.test(str[pos]);\n}\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\n\nfunction smartquotes(state) {\n  /*eslint max-depth:0*/\n  var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item,\n      canOpen, canClose, j, isSingle, blkIdx, tokens,\n      stack;\n\n  if (!state.options.typographer) { return; }\n\n  stack = [];\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    tokens = state.tokens[blkIdx].children;\n    stack.length = 0;\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n\n      if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) { continue; }\n\n      thisLevel = tokens[i].level;\n\n      for (j = stack.length - 1; j >= 0; j--) {\n        if (stack[j].level <= thisLevel) { break; }\n      }\n      stack.length = j + 1;\n\n      text = token.content;\n      pos = 0;\n      max = text.length;\n\n      /*eslint no-labels:0,block-scoped-var:0*/\n      OUTER:\n      while (pos < max) {\n        QUOTE_RE.lastIndex = pos;\n        t = QUOTE_RE.exec(text);\n        if (!t) { break; }\n\n        lastSpace = !isLetter(text, t.index - 1);\n        pos = t.index + 1;\n        isSingle = (t[0] === \"'\");\n        nextSpace = !isLetter(text, pos);\n\n        if (!nextSpace && !lastSpace) {\n          // middle of word\n          if (isSingle) {\n            token.content = replaceAt(token.content, t.index, APOSTROPHE);\n          }\n          continue;\n        }\n\n        canOpen = !nextSpace;\n        canClose = !lastSpace;\n\n        if (canClose) {\n          // this could be a closing quote, rewind the stack to get a match\n          for (j = stack.length - 1; j >= 0; j--) {\n            item = stack[j];\n            if (stack[j].level < thisLevel) { break; }\n            if (item.single === isSingle && stack[j].level === thisLevel) {\n              item = stack[j];\n              if (isSingle) {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[3]);\n              } else {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[1]);\n              }\n              stack.length = j;\n              continue OUTER;\n            }\n          }\n        }\n\n        if (canOpen) {\n          stack.push({\n            token: i,\n            pos: t.index,\n            single: isSingle,\n            level: thisLevel\n          });\n        } else if (canClose && isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Core parser `rules`\n */\n\nvar _rules = [\n  [ 'block',          block          ],\n  [ 'abbr',           abbr           ],\n  [ 'references',     references     ],\n  [ 'inline',         inline         ],\n  [ 'footnote_tail',  footnote_block  ],\n  [ 'abbr2',          abbr2          ],\n  [ 'replacements',   replace   ],\n  [ 'smartquotes',    smartquotes    ],\n];\n\n/**\n * Class for top level (`core`) parser rules\n *\n * @api private\n */\n\nfunction Core() {\n  this.options = {};\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n/**\n * Process rules with the given `state`\n *\n * @param  {Object} `state`\n * @api private\n */\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\n// Parser state class\n\nfunction StateBlock(src, parser, options, env, tokens) {\n  var ch, s, start, pos, len, indent, indent_found;\n\n  this.src = src;\n\n  // Shortcuts to simplify nested calls\n  this.parser = parser;\n\n  this.options = options;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // indent for each line\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent\n                       // (for example, if we are in list)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.parentType = 'root'; // if `list`, block parser stops on two newlines\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent = 0;\n  indent_found = false;\n\n  for (start = pos = indent = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (ch === 0x20/* space */) {\n        indent++;\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n\n      indent_found = false;\n      indent = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== 0x20/* space */) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, first, last, queue, shift,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  // Opt: don't use push queue for single line;\n  if (line + 1 === end) {\n    first = this.bMarks[line] + Math.min(this.tShift[line], indent);\n    last = keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line];\n    return this.src.slice(first, last);\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    shift = this.tShift[line];\n    if (shift > indent) { shift = indent; }\n    if (shift < 0) { shift = 0; }\n\n    first = this.bMarks[line] + shift;\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    queue[i] = this.src.slice(first, last);\n  }\n\n  return queue.join('');\n};\n\n// Code block (4 spaces padded)\n\nfunction code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last;\n\n  if (state.tShift[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'code',\n    content: state.getLines(startLine, last, 4 + state.blkIndent, true),\n    block: true,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// fences (``` lang, ~~~ lang)\n\nfunction fences(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  params = state.src.slice(pos, max).trim();\n\n  if (params.indexOf('`') >= 0) { return false; }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.tShift[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.tShift[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  state.tokens.push({\n    type: 'fence',\n    params: params,\n    content: state.getLines(startLine + 1, nextLine, len, true),\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// Block quotes\n\nfunction blockquote(state, startLine, endLine, silent) {\n  var nextLine, lastLineEmpty, oldTShift, oldBMarks, oldIndent, oldParentType, lines,\n      terminatorRules,\n      i, l, terminate,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos > max) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  // check if we have an empty blockquote\n  pos = pos < max ? state.skipSpaces(pos) : pos;\n  lastLineEmpty = pos >= max;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.parser.ruler.getRules('blockquote');\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {\n      // This line is inside the blockquote.\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      pos = pos < max ? state.skipSpaces(pos) : pos;\n      lastLineEmpty = pos >= max;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n\n    // A negative number means that this is a paragraph continuation;\n    //\n    // Any negative number will do the job here, but it's better for it\n    // to be large enough to make any bugs obvious.\n    state.tShift[nextLine] = -1337;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  state.tokens.push({\n    type: 'blockquote_open',\n    lines: lines = [ startLine, 0 ],\n    level: state.level++\n  });\n  state.parser.tokenize(state, startLine, nextLine);\n  state.tokens.push({\n    type: 'blockquote_close',\n    level: --state.level\n  });\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n}\n\n// Horizontal rule\n\nfunction hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine];\n\n  pos += state.tShift[startLine];\n\n  if (pos > max) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 one\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && ch !== 0x20/* space */) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n  state.tokens.push({\n    type: 'hr',\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// Lists\n\n// Search `[-+*][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  if (pos >= max) { return -1; }\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20/* space */) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\n\nfunction list(state, startLine, endLine, silent) {\n  var nextLine,\n      indent,\n      oldTShift,\n      oldIndent,\n      oldTight,\n      oldParentType,\n      start,\n      posAfterMarker,\n      max,\n      indentAfterMarker,\n      markerValue,\n      markerCharCode,\n      isOrdered,\n      contentStart,\n      listTokIdx,\n      prevEmptyEnd,\n      listLines,\n      itemLines,\n      tight = true,\n      terminatorRules,\n      i, l, terminate;\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    state.tokens.push({\n      type: 'ordered_list_open',\n      order: markerValue,\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n  } else {\n    state.tokens.push({\n      type: 'bullet_list_open',\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n  }\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.parser.ruler.getRules('list');\n\n  while (nextLine < endLine) {\n    contentStart = state.skipSpaces(posAfterMarker);\n    max = state.eMarks[nextLine];\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = contentStart - posAfterMarker;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // If indent is less than 1, assume that it's one, example:\n    //  \"-\\n  test\"\n    if (indentAfterMarker < 1) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = (posAfterMarker - state.bMarks[nextLine]) + indentAfterMarker;\n\n    // Run subparser & write tokens\n    state.tokens.push({\n      type: 'list_item_open',\n      lines: itemLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldParentType = state.parentType;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.blkIndent = indent;\n    state.tight = true;\n    state.parentType = 'list';\n\n    state.parser.tokenize(state, startLine, endLine, true);\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.tight = oldTight;\n    state.parentType = oldParentType;\n\n    state.tokens.push({\n      type: 'list_item_close',\n      level: --state.level\n    });\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    if (state.isEmpty(nextLine)) {\n      break;\n    }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n}\n\n// Process footnote reference list\n\nfunction footnote(state, startLine, endLine, silent) {\n  var oldBMark, oldTShift, oldParentType, pos, label,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // line should be at least 5 chars - \"[^x]:\"\n  if (start + 4 > max) { return false; }\n\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n  if (silent) { return true; }\n  pos++;\n\n  if (!state.env.footnotes) { state.env.footnotes = {}; }\n  if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n  label = state.src.slice(start + 2, pos - 2);\n  state.env.footnotes.refs[':' + label] = -1;\n\n  state.tokens.push({\n    type: 'footnote_reference_open',\n    label: label,\n    level: state.level++\n  });\n\n  oldBMark = state.bMarks[startLine];\n  oldTShift = state.tShift[startLine];\n  oldParentType = state.parentType;\n  state.tShift[startLine] = state.skipSpaces(pos) - pos;\n  state.bMarks[startLine] = pos;\n  state.blkIndent += 4;\n  state.parentType = 'footnote';\n\n  if (state.tShift[startLine] < state.blkIndent) {\n    state.tShift[startLine] += state.blkIndent;\n    state.bMarks[startLine] -= state.blkIndent;\n  }\n\n  state.parser.tokenize(state, startLine, endLine, true);\n\n  state.parentType = oldParentType;\n  state.blkIndent -= 4;\n  state.tShift[startLine] = oldTShift;\n  state.bMarks[startLine] = oldBMark;\n\n  state.tokens.push({\n    type: 'footnote_reference_close',\n    level: --state.level\n  });\n\n  return true;\n}\n\n// heading (#, ##, ...)\n\nfunction heading(state, startLine, endLine, silent) {\n  var ch, level, tmp,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos >= max) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipCharsBack(max, 0x20, pos); // space\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20/* space */) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  state.tokens.push({ type: 'heading_open',\n    hLevel: level,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  // only if header is not empty\n  if (pos < max) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.slice(pos, max).trim(),\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n  }\n  state.tokens.push({ type: 'heading_close', hLevel: level, level: state.level });\n\n  return true;\n}\n\n// lheading (---, ===)\n\nfunction lheading(state, startLine, endLine/*, silent*/) {\n  var marker, pos, max,\n      next = startLine + 1;\n\n  if (next >= endLine) { return false; }\n  if (state.tShift[next] < state.blkIndent) { return false; }\n\n  // Scan next line\n\n  if (state.tShift[next] - state.blkIndent > 3) { return false; }\n\n  pos = state.bMarks[next] + state.tShift[next];\n  max = state.eMarks[next];\n\n  if (pos >= max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x2D/* - */ && marker !== 0x3D/* = */) { return false; }\n\n  pos = state.skipChars(pos, marker);\n\n  pos = state.skipSpaces(pos);\n\n  if (pos < max) { return false; }\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n\n  state.line = next + 1;\n  state.tokens.push({\n    type: 'heading_open',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n  state.tokens.push({\n    type: 'inline',\n    content: state.src.slice(pos, state.eMarks[startLine]).trim(),\n    level: state.level + 1,\n    lines: [ startLine, state.line - 1 ],\n    children: []\n  });\n  state.tokens.push({\n    type: 'heading_close',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    level: state.level\n  });\n\n  return true;\n}\n\n// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\nvar html_blocks = {};\n\n[\n  'article',\n  'aside',\n  'button',\n  'blockquote',\n  'body',\n  'canvas',\n  'caption',\n  'col',\n  'colgroup',\n  'dd',\n  'div',\n  'dl',\n  'dt',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'iframe',\n  'li',\n  'map',\n  'object',\n  'ol',\n  'output',\n  'p',\n  'pre',\n  'progress',\n  'script',\n  'section',\n  'style',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'tr',\n  'thead',\n  'ul',\n  'video'\n].forEach(function (name) { html_blocks[name] = true; });\n\n// HTML block\n\n\nvar HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\\s\\/>]/;\nvar HTML_TAG_CLOSE_RE = /^<\\/([a-zA-Z]{1,15})[\\s>]/;\n\nfunction isLetter$1(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\nfunction htmlblock(state, startLine, endLine, silent) {\n  var ch, match, nextLine,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine],\n      shift = state.tShift[startLine];\n\n  pos += shift;\n\n  if (!state.options.html) { return false; }\n\n  if (shift > 3 || pos + 2 >= max) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x21/* ! */ || ch === 0x3F/* ? */) {\n    // Directive start / comment start / processing instruction start\n    if (silent) { return true; }\n\n  } else if (ch === 0x2F/* / */ || isLetter$1(ch)) {\n\n    // Probably start or end of tag\n    if (ch === 0x2F/* \\ */) {\n      // closing tag\n      match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);\n      if (!match) { return false; }\n    } else {\n      // opening tag\n      match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);\n      if (!match) { return false; }\n    }\n    // Make sure tag name is valid\n    if (html_blocks[match[1].toLowerCase()] !== true) { return false; }\n    if (silent) { return true; }\n\n  } else {\n    return false;\n  }\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till empty line (block end).\n  nextLine = startLine + 1;\n  while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {\n    nextLine++;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'htmlblock',\n    level: state.level,\n    lines: [ startLine, state.line ],\n    content: state.getLines(startLine, nextLine, 0, true)\n  });\n\n  return true;\n}\n\n// GFM table, non-standard\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, rows, cell,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least three lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\n\n  // first character of the second line should be '|' or '-'\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  lineText = getLine(state, startLine + 1);\n  if (!/^[-:| ]+$/.test(lineText)) { return false; }\n\n  rows = lineText.split('|');\n  if (rows <= 2) { return false; }\n  aligns = [];\n  for (i = 0; i < rows.length; i++) {\n    t = rows[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === rows.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n  if (aligns.length !== rows.length) { return false; }\n  if (silent) { return true; }\n\n  state.tokens.push({\n    type: 'table_open',\n    lines: tableLines = [ startLine, 0 ],\n    level: state.level++\n  });\n  state.tokens.push({\n    type: 'thead_open',\n    lines: [ startLine, startLine + 1 ],\n    level: state.level++\n  });\n\n  state.tokens.push({\n    type: 'tr_open',\n    lines: [ startLine, startLine + 1 ],\n    level: state.level++\n  });\n  for (i = 0; i < rows.length; i++) {\n    state.tokens.push({\n      type: 'th_open',\n      align: aligns[i],\n      lines: [ startLine, startLine + 1 ],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: rows[i].trim(),\n      lines: [ startLine, startLine + 1 ],\n      level: state.level,\n      children: []\n    });\n    state.tokens.push({ type: 'th_close', level: --state.level });\n  }\n  state.tokens.push({ type: 'tr_close', level: --state.level });\n  state.tokens.push({ type: 'thead_close', level: --state.level });\n\n  state.tokens.push({\n    type: 'tbody_open',\n    lines: tbodyLines = [ startLine + 2, 0 ],\n    level: state.level++\n  });\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n\n    state.tokens.push({ type: 'tr_open', level: state.level++ });\n    for (i = 0; i < rows.length; i++) {\n      state.tokens.push({ type: 'td_open', align: aligns[i], level: state.level++ });\n      // 0x7c === '|'\n      cell = rows[i].substring(\n          rows[i].charCodeAt(0) === 0x7c ? 1 : 0,\n          rows[i].charCodeAt(rows[i].length - 1) === 0x7c ? rows[i].length - 1 : rows[i].length\n      ).trim();\n      state.tokens.push({\n        type: 'inline',\n        content: cell,\n        level: state.level,\n        children: []\n      });\n      state.tokens.push({ type: 'td_close', level: --state.level });\n    }\n    state.tokens.push({ type: 'tr_close', level: --state.level });\n  }\n  state.tokens.push({ type: 'tbody_close', level: --state.level });\n  state.tokens.push({ type: 'table_close', level: --state.level });\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n}\n\n// Definition lists\n\n// Search `[:~][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipMarker(state, line) {\n  var pos, marker,\n      start = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  if (start >= max) { return -1; }\n\n  // Check bullet\n  marker = state.src.charCodeAt(start++);\n  if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n  pos = state.skipSpaces(start);\n\n  // require space after \":\"\n  if (start === pos) { return -1; }\n\n  // no empty definitions, e.g. \"  : \"\n  if (pos >= max) { return -1; }\n\n  return pos;\n}\n\nfunction markTightParagraphs$1(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\nfunction deflist(state, startLine, endLine, silent) {\n  var contentStart,\n      ddLine,\n      dtLine,\n      itemLines,\n      listLines,\n      listTokIdx,\n      nextLine,\n      oldIndent,\n      oldDDIndent,\n      oldParentType,\n      oldTShift,\n      oldTight,\n      prevEmptyEnd,\n      tight;\n\n  if (silent) {\n    // quirk: validation mode validates a dd block only, not a whole deflist\n    if (state.ddIndent < 0) { return false; }\n    return skipMarker(state, startLine) >= 0;\n  }\n\n  nextLine = startLine + 1;\n  if (state.isEmpty(nextLine)) {\n    if (++nextLine > endLine) { return false; }\n  }\n\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\n  contentStart = skipMarker(state, nextLine);\n  if (contentStart < 0) { return false; }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  state.tokens.push({\n    type: 'dl_open',\n    lines: listLines = [ startLine, 0 ],\n    level: state.level++\n  });\n\n  //\n  // Iterate list items\n  //\n\n  dtLine = startLine;\n  ddLine = nextLine;\n\n  // One definition list can contain multiple DTs,\n  // and one DT can be followed by multiple DDs.\n  //\n  // Thus, there is two loops here, and label is\n  // needed to break out of the second one\n  //\n  /*eslint no-labels:0,block-scoped-var:0*/\n  OUTER:\n  for (;;) {\n    tight = true;\n    prevEmptyEnd = false;\n\n    state.tokens.push({\n      type: 'dt_open',\n      lines: [ dtLine, dtLine ],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),\n      level: state.level + 1,\n      lines: [ dtLine, dtLine ],\n      children: []\n    });\n    state.tokens.push({\n      type: 'dt_close',\n      level: --state.level\n    });\n\n    for (;;) {\n      state.tokens.push({\n        type: 'dd_open',\n        lines: itemLines = [ nextLine, 0 ],\n        level: state.level++\n      });\n\n      oldTight = state.tight;\n      oldDDIndent = state.ddIndent;\n      oldIndent = state.blkIndent;\n      oldTShift = state.tShift[ddLine];\n      oldParentType = state.parentType;\n      state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;\n      state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n      state.tight = true;\n      state.parentType = 'deflist';\n\n      state.parser.tokenize(state, ddLine, endLine, true);\n\n      // If any of list item is tight, mark list as tight\n      if (!state.tight || prevEmptyEnd) {\n        tight = false;\n      }\n      // Item become loose if finish with empty line,\n      // but we should filter last element, because it means list finish\n      prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n      state.tShift[ddLine] = oldTShift;\n      state.tight = oldTight;\n      state.parentType = oldParentType;\n      state.blkIndent = oldIndent;\n      state.ddIndent = oldDDIndent;\n\n      state.tokens.push({\n        type: 'dd_close',\n        level: --state.level\n      });\n\n      itemLines[1] = nextLine = state.line;\n\n      if (nextLine >= endLine) { break OUTER; }\n\n      if (state.tShift[nextLine] < state.blkIndent) { break OUTER; }\n      contentStart = skipMarker(state, nextLine);\n      if (contentStart < 0) { break; }\n\n      ddLine = nextLine;\n\n      // go to the next loop iteration:\n      // insert DD tag and repeat checking\n    }\n\n    if (nextLine >= endLine) { break; }\n    dtLine = nextLine;\n\n    if (state.isEmpty(dtLine)) { break; }\n    if (state.tShift[dtLine] < state.blkIndent) { break; }\n\n    ddLine = dtLine + 1;\n    if (ddLine >= endLine) { break; }\n    if (state.isEmpty(ddLine)) { ddLine++; }\n    if (ddLine >= endLine) { break; }\n\n    if (state.tShift[ddLine] < state.blkIndent) { break; }\n    contentStart = skipMarker(state, ddLine);\n    if (contentStart < 0) { break; }\n\n    // go to the next loop iteration:\n    // insert DT and DD tags and repeat checking\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: 'dl_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs$1(state, listTokIdx);\n  }\n\n  return true;\n}\n\n// Paragraph\n\nfunction paragraph(state, startLine/*, endLine*/) {\n  var endLine, content, terminate, i, l,\n      nextLine = startLine + 1,\n      terminatorRules;\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  if (nextLine < endLine && !state.isEmpty(nextLine)) {\n    terminatorRules = state.parser.ruler.getRules('paragraph');\n\n    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n      // this would be a code block normally, but after paragraph\n      // it's considered a lazy continuation regardless of what's there\n      if (state.tShift[nextLine] - state.blkIndent > 3) { continue; }\n\n      // Some tags can terminate paragraph without empty line.\n      terminate = false;\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n      if (terminate) { break; }\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n  if (content.length) {\n    state.tokens.push({\n      type: 'paragraph_open',\n      tight: false,\n      lines: [ startLine, state.line ],\n      level: state.level\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: content,\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n    state.tokens.push({\n      type: 'paragraph_close',\n      tight: false,\n      level: state.level\n    });\n  }\n\n  return true;\n}\n\n/**\n * Parser rules\n */\n\nvar _rules$1 = [\n  [ 'code',       code ],\n  [ 'fences',     fences,     [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'blockquote', blockquote, [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'hr',         hr,         [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'list',       list,       [ 'paragraph', 'blockquote' ] ],\n  [ 'footnote',   footnote,   [ 'paragraph' ] ],\n  [ 'heading',    heading,    [ 'paragraph', 'blockquote' ] ],\n  [ 'lheading',   lheading ],\n  [ 'htmlblock',  htmlblock,  [ 'paragraph', 'blockquote' ] ],\n  [ 'table',      table,      [ 'paragraph' ] ],\n  [ 'deflist',    deflist,    [ 'paragraph' ] ],\n  [ 'paragraph',  paragraph ]\n];\n\n/**\n * Block Parser class\n *\n * @api private\n */\n\nfunction ParserBlock() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules$1.length; i++) {\n    this.ruler.push(_rules$1[i][0], _rules$1[i][1], {\n      alt: (_rules$1[i][2] || []).slice()\n    });\n  }\n}\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc\n * @param  {Number} `startLine`\n * @param  {Number} `endLine`\n * @api private\n */\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var line = startLine;\n  var hasEmptyLines = false;\n  var ok, i;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) {\n      break;\n    }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.tShift[line] < state.blkIndent) {\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        break;\n      }\n    }\n\n    // set state.tight iff we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n\n      // two empty lines should stop the parser in list mode\n      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) { break; }\n      state.line = line;\n    }\n  }\n};\n\nvar TABS_SCAN_RE = /[\\n\\t]/g;\nvar NEWLINES_RE  = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\nvar SPACES_RE    = /\\u00a0/g;\n\n/**\n * Tokenize the given `str`.\n *\n * @param  {String} `str` Source string\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserBlock.prototype.parse = function (str, options, env, outTokens) {\n  var state, lineStart = 0, lastTabPos = 0;\n  if (!str) { return []; }\n\n  // Normalize spaces\n  str = str.replace(SPACES_RE, ' ');\n\n  // Normalize newlines\n  str = str.replace(NEWLINES_RE, '\\n');\n\n  // Replace tabs with proper number of spaces (1..4)\n  if (str.indexOf('\\t') >= 0) {\n    str = str.replace(TABS_SCAN_RE, function (match, offset) {\n      var result;\n      if (str.charCodeAt(offset) === 0x0A) {\n        lineStart = offset + 1;\n        lastTabPos = 0;\n        return match;\n      }\n      result = '    '.slice((offset - lineStart - lastTabPos) % 4);\n      lastTabPos = offset - lineStart + 1;\n      return result;\n    });\n  }\n\n  state = new StateBlock(str, this, options, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x5C/* \\ */:\n    case 0x60/* ` */:\n    case 0x2A/* * */:\n    case 0x5F/* _ */:\n    case 0x5E/* ^ */:\n    case 0x5B/* [ */:\n    case 0x5D/* ] */:\n    case 0x21/* ! */:\n    case 0x26/* & */:\n    case 0x3C/* < */:\n    case 0x3E/* > */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x40/* @ */:\n    case 0x7E/* ~ */:\n    case 0x2B/* + */:\n    case 0x3D/* = */:\n    case 0x3A/* : */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n}\n\n// Proceess '\\n'\n\nfunction newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Strip out all trailing spaces on this line.\n        for (var i = pmax - 2; i >= 0; i--) {\n          if (state.pending.charCodeAt(i) !== 0x20) {\n            state.pending = state.pending.substring(0, i + 1);\n            break;\n          }\n        }\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push({\n          type: 'softbreak',\n          level: state.level\n        });\n      }\n\n    } else {\n      state.push({\n        type: 'softbreak',\n        level: state.level\n      });\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  state.pos = pos;\n  return true;\n}\n\n// Proceess escaped chars and hardbreaks\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function(ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nfunction escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n}\n\n// Parse backticks\n\nfunction backticks(state, silent) {\n  var start, max, marker, matchStart, matchEnd,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        state.push({\n          type: 'code',\n          content: state.src.slice(pos, matchStart)\n                              .replace(/[ \\n]+/g, ' ')\n                              .trim(),\n          block: false,\n          level: state.level\n        });\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n}\n\n// Process ~~deleted text~~\n\nfunction del(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x7E/* ~ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x7E/* ~ */) { return false; }\n  if (nextChar === 0x7E/* ~ */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x7E/* ~ */) { pos++; }\n  if (pos > start + 3) {\n    // sequence of 4+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x7E/* ~ */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x7E/* ~ */ && lastChar !== 0x7E/* ~ */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '~~'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '~~'\n            stack++;\n          } // else {\n            //  // standalone ' ~~ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'del_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'del_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process ++inserted text++\n\nfunction ins(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x2B/* + */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x2B/* + */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x2B/* + */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x2B/* + */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x2B/* + */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x2B/* + */ && lastChar !== 0x2B/* + */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '++'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '++'\n            stack++;\n          } // else {\n            //  // standalone ' ++ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'ins_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'ins_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process ==highlighted text==\n\nfunction mark(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x3D/* = */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x3D/* = */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x3D/* = */) { return false; }\n  if (nextChar === 0x3D/* = */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x3D/* = */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x3D/* = */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x3D/* = */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x3D/* = */ && lastChar !== 0x3D/* = */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '=='\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '=='\n            stack++;\n          } // else {\n            //  // standalone ' == ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'mark_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'mark_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process *this* and _that_\n\nfunction isAlphaNum(code) {\n  return (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) ||\n         (code >= 0x41 /* A */ && code <= 0x5A /* Z */) ||\n         (code >= 0x61 /* a */ && code <= 0x7A /* z */);\n}\n\n// parse sequence of emphasis markers,\n// \"start\" should point at a valid marker\nfunction scanDelims(state, start) {\n  var pos = start, lastChar, nextChar, count,\n      can_open = true,\n      can_close = true,\n      max = state.posMax,\n      marker = state.src.charCodeAt(start);\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n\n  while (pos < max && state.src.charCodeAt(pos) === marker) { pos++; }\n  if (pos >= max) { can_open = false; }\n  count = pos - start;\n\n  if (count >= 4) {\n    // sequence of four or more unescaped markers can't start/end an emphasis\n    can_open = can_close = false;\n  } else {\n    nextChar = pos < max ? state.src.charCodeAt(pos) : -1;\n\n    // check whitespace conditions\n    if (nextChar === 0x20 || nextChar === 0x0A) { can_open = false; }\n    if (lastChar === 0x20 || lastChar === 0x0A) { can_close = false; }\n\n    if (marker === 0x5F /* _ */) {\n      // check if we aren't inside the word\n      if (isAlphaNum(lastChar)) { can_open = false; }\n      if (isAlphaNum(nextChar)) { can_close = false; }\n    }\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    delims: count\n  };\n}\n\nfunction emphasis(state, silent) {\n  var startCount,\n      count,\n      found,\n      oldCount,\n      newCount,\n      stack,\n      res,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker !== 0x5F/* _ */ && marker !== 0x2A /* * */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n\n  res = scanDelims(state, start);\n  startCount = res.delims;\n  if (!res.can_open) {\n    state.pos += startCount;\n    if (!silent) { state.pending += state.src.slice(start, state.pos); }\n    return true;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + startCount;\n  stack = [ startCount ];\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === marker) {\n      res = scanDelims(state, state.pos);\n      count = res.delims;\n      if (res.can_close) {\n        oldCount = stack.pop();\n        newCount = count;\n\n        while (oldCount !== newCount) {\n          if (newCount < oldCount) {\n            stack.push(oldCount - newCount);\n            break;\n          }\n\n          // assert(newCount > oldCount)\n          newCount -= oldCount;\n\n          if (stack.length === 0) { break; }\n          state.pos += oldCount;\n          oldCount = stack.pop();\n        }\n\n        if (stack.length === 0) {\n          startCount = oldCount;\n          found = true;\n          break;\n        }\n        state.pos += count;\n        continue;\n      }\n\n      if (res.can_open) { stack.push(count); }\n      state.pos += count;\n      continue;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + startCount;\n\n  if (!silent) {\n    if (startCount === 2 || startCount === 3) {\n      state.push({ type: 'strong_open', level: state.level++ });\n    }\n    if (startCount === 1 || startCount === 3) {\n      state.push({ type: 'em_open', level: state.level++ });\n    }\n\n    state.parser.tokenize(state);\n\n    if (startCount === 1 || startCount === 3) {\n      state.push({ type: 'em_close', level: --state.level });\n    }\n    if (startCount === 2 || startCount === 3) {\n      state.push({ type: 'strong_close', level: --state.level });\n    }\n  }\n\n  state.pos = state.posMax + startCount;\n  state.posMax = max;\n  return true;\n}\n\n// Process ~subscript~\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction sub(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sub',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process ^superscript^\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE$1 = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction sup(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sup',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE$1, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process [links](<to> \"stuff\")\n\n\nfunction links(state, silent) {\n  var labelStart,\n      labelEnd,\n      label,\n      href,\n      title,\n      pos,\n      ref,\n      code,\n      isImage = false,\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker === 0x21/* ! */) {\n    isImage = true;\n    marker = state.src.charCodeAt(++start);\n  }\n\n  if (marker !== 0x5B/* [ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  labelStart = start + 1;\n  labelEnd = parseLinkLabel(state, start);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    if (parseLinkDestination(state, pos)) {\n      href = state.linkContent;\n      pos = state.pos;\n    } else {\n      href = '';\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n      title = state.linkContent;\n      pos = state.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n\n    // do not allow nested reference links\n    if (state.linkLevel > 0) { return false; }\n\n    // [foo]  [bar]\n    //      ^^ optional whitespace (can include newlines)\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = start - 1;\n      }\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) {\n      if (typeof label === 'undefined') {\n        pos = labelEnd + 1;\n      }\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    if (isImage) {\n      state.push({\n        type: 'image',\n        src: href,\n        title: title,\n        alt: state.src.substr(labelStart, labelEnd - labelStart),\n        level: state.level\n      });\n    } else {\n      state.push({\n        type: 'link_open',\n        href: href,\n        title: title,\n        level: state.level++\n      });\n      state.linkLevel++;\n      state.parser.tokenize(state);\n      state.linkLevel--;\n      state.push({ type: 'link_close', level: --state.level });\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n}\n\n// Process inline footnotes (^[...])\n\n\nfunction footnote_inline(state, silent) {\n  var labelStart,\n      labelEnd,\n      footnoteId,\n      oldLength,\n      max = state.posMax,\n      start = state.pos;\n\n  if (start + 2 >= max) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  labelStart = start + 2;\n  labelEnd = parseLinkLabel(state, start + 1);\n\n  // parser failed to find ']', so it's not a valid note\n  if (labelEnd < 0) { return false; }\n\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n    footnoteId = state.env.footnotes.list.length;\n\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      level: state.level\n    });\n    state.linkLevel++;\n    oldLength = state.tokens.length;\n    state.parser.tokenize(state);\n    state.env.footnotes.list[footnoteId] = { tokens: state.tokens.splice(oldLength) };\n    state.linkLevel--;\n  }\n\n  state.pos = labelEnd + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process footnote references ([^...])\n\nfunction footnote_ref(state, silent) {\n  var label,\n      pos,\n      footnoteId,\n      footnoteSubId,\n      max = state.posMax,\n      start = state.pos;\n\n  // should be at least 4 chars - \"[^x]\"\n  if (start + 3 > max) { return false; }\n\n  if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos >= max) { return false; }\n  pos++;\n\n  label = state.src.slice(start + 2, pos - 1);\n  if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n  if (!silent) {\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n    if (state.env.footnotes.refs[':' + label] < 0) {\n      footnoteId = state.env.footnotes.list.length;\n      state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n      state.env.footnotes.refs[':' + label] = footnoteId;\n    } else {\n      footnoteId = state.env.footnotes.refs[':' + label];\n    }\n\n    footnoteSubId = state.env.footnotes.list[footnoteId].count;\n    state.env.footnotes.list[footnoteId].count++;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      subId: footnoteSubId,\n      level: state.level\n    });\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n}\n\n// List of valid url schemas, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#autolinks\n\nvar url_schemas = [\n  'coap',\n  'doi',\n  'javascript',\n  'aaa',\n  'aaas',\n  'about',\n  'acap',\n  'cap',\n  'cid',\n  'crid',\n  'data',\n  'dav',\n  'dict',\n  'dns',\n  'file',\n  'ftp',\n  'geo',\n  'go',\n  'gopher',\n  'h323',\n  'http',\n  'https',\n  'iax',\n  'icap',\n  'im',\n  'imap',\n  'info',\n  'ipp',\n  'iris',\n  'iris.beep',\n  'iris.xpc',\n  'iris.xpcs',\n  'iris.lwz',\n  'ldap',\n  'mailto',\n  'mid',\n  'msrp',\n  'msrps',\n  'mtqp',\n  'mupdate',\n  'news',\n  'nfs',\n  'ni',\n  'nih',\n  'nntp',\n  'opaquelocktoken',\n  'pop',\n  'pres',\n  'rtsp',\n  'service',\n  'session',\n  'shttp',\n  'sieve',\n  'sip',\n  'sips',\n  'sms',\n  'snmp',\n  'soap.beep',\n  'soap.beeps',\n  'tag',\n  'tel',\n  'telnet',\n  'tftp',\n  'thismessage',\n  'tn3270',\n  'tip',\n  'tv',\n  'urn',\n  'vemmi',\n  'ws',\n  'wss',\n  'xcon',\n  'xcon-userid',\n  'xmlrpc.beep',\n  'xmlrpc.beeps',\n  'xmpp',\n  'z39.50r',\n  'z39.50s',\n  'adiumxtra',\n  'afp',\n  'afs',\n  'aim',\n  'apt',\n  'attachment',\n  'aw',\n  'beshare',\n  'bitcoin',\n  'bolo',\n  'callto',\n  'chrome',\n  'chrome-extension',\n  'com-eventbrite-attendee',\n  'content',\n  'cvs',\n  'dlna-playsingle',\n  'dlna-playcontainer',\n  'dtn',\n  'dvb',\n  'ed2k',\n  'facetime',\n  'feed',\n  'finger',\n  'fish',\n  'gg',\n  'git',\n  'gizmoproject',\n  'gtalk',\n  'hcp',\n  'icon',\n  'ipn',\n  'irc',\n  'irc6',\n  'ircs',\n  'itms',\n  'jar',\n  'jms',\n  'keyparc',\n  'lastfm',\n  'ldaps',\n  'magnet',\n  'maps',\n  'market',\n  'message',\n  'mms',\n  'ms-help',\n  'msnim',\n  'mumble',\n  'mvn',\n  'notes',\n  'oid',\n  'palm',\n  'paparazzi',\n  'platform',\n  'proxy',\n  'psyc',\n  'query',\n  'res',\n  'resource',\n  'rmi',\n  'rsync',\n  'rtmp',\n  'secondlife',\n  'sftp',\n  'sgn',\n  'skype',\n  'smb',\n  'soldat',\n  'spotify',\n  'ssh',\n  'steam',\n  'svn',\n  'teamspeak',\n  'things',\n  'udp',\n  'unreal',\n  'ut2004',\n  'ventrilo',\n  'view-source',\n  'webcal',\n  'wtai',\n  'wyciwyg',\n  'xfire',\n  'xri',\n  'ymsgr'\n];\n\n// Process autolinks '<protocol:...>'\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\n\nfunction autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  linkMatch = tail.match(AUTOLINK_RE);\n\n  if (linkMatch) {\n    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) { return false; }\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = normalizeLink(url);\n    if (!state.parser.validateLink(url)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  emailMatch = tail.match(EMAIL_RE);\n\n  if (emailMatch) {\n\n    url = emailMatch[0].slice(1, -1);\n\n    fullUrl = normalizeLink('mailto:' + url);\n    if (!state.parser.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n}\n\n// Regexps to match html elements\n\nfunction replace$1(regex, options) {\n  regex = regex.source;\n  options = options || '';\n\n  return function self(name, val) {\n    if (!name) {\n      return new RegExp(regex, options);\n    }\n    val = val.source || val;\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\n\nvar attr_name     = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;\n\nvar unquoted      = /[^\"'=<>`\\x00-\\x20]+/;\nvar single_quoted = /'[^']*'/;\nvar double_quoted = /\"[^\"]*\"/;\n\n/*eslint no-spaced-func:0*/\nvar attr_value  = replace$1(/(?:unquoted|single_quoted|double_quoted)/)\n                    ('unquoted', unquoted)\n                    ('single_quoted', single_quoted)\n                    ('double_quoted', double_quoted)\n                    ();\n\nvar attribute   = replace$1(/(?:\\s+attr_name(?:\\s*=\\s*attr_value)?)/)\n                    ('attr_name', attr_name)\n                    ('attr_value', attr_value)\n                    ();\n\nvar open_tag    = replace$1(/<[A-Za-z][A-Za-z0-9]*attribute*\\s*\\/?>/)\n                    ('attribute', attribute)\n                    ();\n\nvar close_tag   = /<\\/[A-Za-z][A-Za-z0-9]*\\s*>/;\nvar comment     = /<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->/;\nvar processing  = /<[?].*?[?]>/;\nvar declaration = /<![A-Z]+\\s+[^>]*>/;\nvar cdata       = /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/;\n\nvar HTML_TAG_RE = replace$1(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)\n  ('open_tag', open_tag)\n  ('close_tag', close_tag)\n  ('comment', comment)\n  ('processing', processing)\n  ('declaration', declaration)\n  ('cdata', cdata)\n  ();\n\n// Process html tags\n\n\nfunction isLetter$2(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nfunction htmltag(state, silent) {\n  var ch, match, max, pos = state.pos;\n\n  if (!state.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter$2(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    state.push({\n      type: 'htmltag',\n      content: state.src.slice(pos, pos + match[0].length),\n      level: state.level\n    });\n  }\n  state.pos += match[0].length;\n  return true;\n}\n\n// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nfunction entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        var decoded = decodeEntity(match[1]);\n        if (match[1] !== decoded) {\n          if (!silent) { state.pending += decoded; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n}\n\n/**\n * Inline Parser `rules`\n */\n\nvar _rules$2 = [\n  [ 'text',            text ],\n  [ 'newline',         newline ],\n  [ 'escape',          escape ],\n  [ 'backticks',       backticks ],\n  [ 'del',             del ],\n  [ 'ins',             ins ],\n  [ 'mark',            mark ],\n  [ 'emphasis',        emphasis ],\n  [ 'sub',             sub ],\n  [ 'sup',             sup ],\n  [ 'links',           links ],\n  [ 'footnote_inline', footnote_inline ],\n  [ 'footnote_ref',    footnote_ref ],\n  [ 'autolink',        autolink ],\n  [ 'htmltag',         htmltag ],\n  [ 'entity',          entity ]\n];\n\n/**\n * Inline Parser class. Note that link validation is stricter\n * in Remarkable than what is specified by CommonMark. If you\n * want to change this you can use a custom validator.\n *\n * @api private\n */\n\nfunction ParserInline() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules$2.length; i++) {\n    this.ruler.push(_rules$2[i][0], _rules$2[i][1]);\n  }\n\n  // Can be overridden with a custom validator\n  this.validateLink = validateLink;\n}\n\n/**\n * Skip a single token by running all rules in validation mode.\n * Returns `true` if any rule reports success.\n *\n * @param  {Object} `state`\n * @api privage\n */\n\nParserInline.prototype.skipToken = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var pos = state.pos;\n  var i, cached_pos;\n\n  if ((cached_pos = state.cacheGet(pos)) > 0) {\n    state.pos = cached_pos;\n    return;\n  }\n\n  for (i = 0; i < len; i++) {\n    if (rules[i](state, true)) {\n      state.cacheSet(pos, state.pos);\n      return;\n    }\n  }\n\n  state.pos++;\n  state.cacheSet(pos, state.pos);\n};\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state`\n * @api private\n */\n\nParserInline.prototype.tokenize = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var end = state.posMax;\n  var ok, i;\n\n  while (state.pos < end) {\n\n    // Try all possible rules.\n    // On success, the rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, false);\n\n      if (ok) {\n        break;\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n/**\n * Parse the given input string.\n *\n * @param  {String} `str`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserInline.prototype.parse = function (str, options, env, outTokens) {\n  var state = new StateInline(str, this, options, env, outTokens);\n  this.tokenize(state);\n};\n\n/**\n * Validate the given `url` by checking for bad protocols.\n *\n * @param  {String} `url`\n * @return {Boolean}\n */\n\nfunction validateLink(url) {\n  var BAD_PROTOCOLS = [ 'vbscript', 'javascript', 'file', 'data' ];\n  var str = url.trim().toLowerCase();\n  // Care about digital entities \"javascript&#x3A;alert(1)\"\n  str = replaceEntities(str);\n  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\n    return false;\n  }\n  return true;\n}\n\n// Remarkable default options\n\nvar defaultTheme = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'block',\n        'inline',\n        'references',\n        'replacements',\n        'smartquotes',\n        'references',\n        'abbr2',\n        'footnote_tail'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fences',\n        'footnote',\n        'heading',\n        'hr',\n        'htmlblock',\n        'lheading',\n        'list',\n        'paragraph',\n        'table'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'del',\n        'emphasis',\n        'entity',\n        'escape',\n        'footnote_ref',\n        'htmltag',\n        'links',\n        'newline',\n        'text'\n      ]\n    }\n  }\n};\n\n// Remarkable default options\n\nvar fullConfig = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes:       '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight:     null,\n\n    maxNesting:    20            // Internal protection, recursion limit\n  },\n\n  components: {\n    // Don't restrict core/block/inline rules\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n\n// Commonmark default options\n\nvar commonmarkConfig = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'block',\n        'inline',\n        'references',\n        'abbr2'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fences',\n        'heading',\n        'hr',\n        'htmlblock',\n        'lheading',\n        'list',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'htmltag',\n        'links',\n        'newline',\n        'text'\n      ]\n    }\n  }\n};\n\n/**\n * Preset configs\n */\n\nvar config = {\n  'default': defaultTheme,\n  'full': fullConfig,\n  'commonmark': commonmarkConfig\n};\n\n/**\n * The `StateCore` class manages state.\n *\n * @param {Object} `instance` Remarkable instance\n * @param {String} `str` Markdown string\n * @param {Object} `env`\n */\n\nfunction StateCore(instance, str, env) {\n  this.src = str;\n  this.env = env;\n  this.options = instance.options;\n  this.tokens = [];\n  this.inlineMode = false;\n\n  this.inline = instance.inline;\n  this.block = instance.block;\n  this.renderer = instance.renderer;\n  this.typographer = instance.typographer;\n}\n\n/**\n * The main `Remarkable` class. Create an instance of\n * `Remarkable` with a `preset` and/or `options`.\n *\n * @param {String} `preset` If no preset is given, `default` is used.\n * @param {Object} `options`\n */\n\nfunction Remarkable(preset, options) {\n  if (typeof preset !== 'string') {\n    options = preset;\n    preset = 'default';\n  }\n\n  if (options && options.linkify != null) {\n    console.warn(\n      'linkify option is removed. Use linkify plugin instead:\\n\\n' +\n      'import Remarkable from \\'remarkable\\';\\n' +\n      'import linkify from \\'remarkable/linkify\\';\\n' +\n      'new Remarkable().use(linkify)\\n'\n    );\n  }\n\n  this.inline   = new ParserInline();\n  this.block    = new ParserBlock();\n  this.core     = new Core();\n  this.renderer = new Renderer();\n  this.ruler    = new Ruler();\n\n  this.options  = {};\n  this.configure(config[preset]);\n  this.set(options || {});\n}\n\n/**\n * Set options as an alternative to passing them\n * to the constructor.\n *\n * ```js\n * md.set({typographer: true});\n * ```\n * @param {Object} `options`\n * @api public\n */\n\nRemarkable.prototype.set = function (options) {\n  assign(this.options, options);\n};\n\n/**\n * Batch loader for components rules states, and options\n *\n * @param  {Object} `presets`\n */\n\nRemarkable.prototype.configure = function (presets) {\n  var self = this;\n\n  if (!presets) { throw new Error('Wrong `remarkable` preset, check name/content'); }\n  if (presets.options) { self.set(presets.options); }\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enable(presets.components[name].rules, true);\n      }\n    });\n  }\n};\n\n/**\n * Use a plugin.\n *\n * ```js\n * var md = new Remarkable();\n *\n * md.use(plugin1)\n *   .use(plugin2, opts)\n *   .use(plugin3);\n * ```\n *\n * @param  {Function} `plugin`\n * @param  {Object} `options`\n * @return {Object} `Remarkable` for chaining\n */\n\nRemarkable.prototype.use = function (plugin, options) {\n  plugin(this, options);\n  return this;\n};\n\n\n/**\n * Parse the input `string` and return a tokens array.\n * Modifies `env` with definitions data.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parse = function (str, env) {\n  var state = new StateCore(this, str, env);\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * The main `.render()` method that does all the magic :)\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {String} Rendered HTML.\n */\n\nRemarkable.prototype.render = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(str, env), this.options, env);\n};\n\n/**\n * Parse the given content `string` as a single string.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parseInline = function (str, env) {\n  var state = new StateCore(this, str, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * Render a single content `string`, without wrapping it\n * to paragraphs\n *\n * @param  {String} `str`\n * @param  {Object} `env`\n * @return {String}\n */\n\nRemarkable.prototype.renderInline = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(str, env), this.options, env);\n};\n\nexport { Remarkable, utils };\n",
    "import React from 'react';\n\nvar assign = Object.assign || function (target) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 1; i < args.length; i++) {\n    var source = args[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar defaultChildren = {\n  footnote_anchor: function footnote_anchor() {\n    return '↩';\n  },\n  footnote_ref: function footnote_ref(_ref) {\n    var id = _ref.id;\n    return '[' + (id + 1) + ']';\n  },\n  htmlblock: function htmlblock(_ref2, _ref3) {\n    var content = _ref2.content;\n    var html = _ref3.html;\n    return html ? null : content;\n  }\n};\n\nvar defaultComponents = {\n  a: 'a',\n  blockquote: 'blockquote',\n  br: 'br',\n  code: 'code',\n  del: 'del',\n  em: 'em',\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  hr: 'hr',\n  html: 'div',\n  img: 'img',\n  ins: 'ins',\n  li: 'li',\n  mark: 'mark',\n  ol: 'ol',\n  p: 'p',\n  pre: 'pre',\n  section: 'section',\n  strong: 'strong',\n  sub: 'sub',\n  sup: 'sup',\n  table: 'table',\n  tbody: 'tbody',\n  td: 'td',\n  th: 'th',\n  thead: 'thead',\n  tr: 'tr',\n  ul: 'ul'\n};\n\nvar defaultRemarkableProps = {\n  align: function align(_align) {\n    return _align ? {\n      key: 'style',\n      value: { textAlign: _align }\n    } : false;\n  },\n  alt: true,\n  block: false,\n  content: function content(_content, type) {\n    return type === 'html' && {\n      key: 'dangerouslySetInnerHTML',\n      value: { __html: _content }\n    };\n  },\n  hLevel: false,\n  href: true,\n  id: function id(_id, type, token) {\n    switch (token.type) {\n      case 'footnote_anchor':\n        return {\n          key: 'href',\n          value: '#fn' + _id + ':' + (token.subId || 0)\n        };\n      case 'footnote_open':\n        return { value: 'fn' + _id };\n      case 'footnote_ref':\n        return type === 'a' ? {\n          key: 'href',\n          value: '#fn' + _id\n        } : {\n          value: 'fn' + _id + ':' + (token.subId || 0)\n        };\n    }\n  },\n  level: false,\n  lines: false,\n  linkTarget: function linkTarget(target, type) {\n    return type === 'a' && {\n      key: 'target'\n    };\n  },\n  order: false,\n  params: false,\n  src: true,\n  subId: false,\n  tight: false,\n  title: true,\n  type: false\n};\n\nvar defaultTokens = {\n  blockquote_open: 'blockquote',\n  bullet_list_open: 'ul',\n  code: 'code',\n  del_open: 'del',\n  em_open: 'em',\n  fence: ['pre', 'code'],\n  footnote_anchor: 'a',\n  footnote_block_open: ['section', 'ol'],\n  footnote_open: 'li',\n  footnote_ref: ['sup', 'a'],\n  hardbreak: 'br',\n  heading_open: function heading_open(_ref) {\n    var hLevel = _ref.hLevel;\n    return 'h' + hLevel;\n  },\n  hr: 'hr',\n  htmlblock: function htmlblock(_, _ref2) {\n    var html = _ref2.html;\n    return html && 'html';\n  },\n  image: 'img',\n  ins_open: 'ins',\n  link_open: 'a',\n  list_item_open: 'li',\n  mark_open: 'mark',\n  ordered_list_open: 'ol',\n  paragraph_open: 'p',\n  softbreak: function softbreak(_, _ref3) {\n    var breaks = _ref3.breaks;\n    return breaks ? 'br' : undefined;\n  },\n  strong_open: 'strong',\n  sub: 'sub',\n  sup: 'sup',\n  table_open: 'table',\n  tbody_open: 'tbody',\n  td_open: 'td',\n  th_open: 'th',\n  thead_open: 'thead',\n  tr_open: 'tr'\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar OPEN_IDENTIFIER = '_open';\nvar CLOSE_IDENTIFIER = '_close';\nvar INLINE_TYPE = 'inline';\n\nvar isOpenToken = function isOpenToken(_ref) {\n  var type = _ref.type;\n  return type.includes(OPEN_IDENTIFIER);\n};\nvar isCloseToken = function isCloseToken(_ref2) {\n  var type = _ref2.type;\n  return type.includes(CLOSE_IDENTIFIER);\n};\nvar isInlineToken = function isInlineToken(_ref3) {\n  var type = _ref3.type;\n  return type === INLINE_TYPE;\n};\n\nvar TokenTree = function () {\n  function TokenTree() {\n    var tokens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var options = arguments[1];\n    var rOptions = arguments[2];\n    classCallCheck(this, TokenTree);\n\n    this.i = -1;\n    this.tokens = tokens;\n    this.options = options;\n    this.rOptions = rOptions;\n\n    return this.buildTokenTree();\n  }\n\n  createClass(TokenTree, [{\n    key: 'getType',\n    value: function getType(token) {\n      return typeof this.options.tokens[token.type] === 'function' ? this.options.tokens[token.type](token, this.rOptions) : this.options.tokens[token.type];\n    }\n  }, {\n    key: 'buildToken',\n    value: function buildToken(token) {\n      var _this = this;\n\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getType(token);\n      var children = arguments[2];\n\n      if (Array.isArray(type)) {\n        return type.reduceRight(function (child, typee, index) {\n          return _this.buildToken(token, typee, index < type.length - 1 ? [child] : children);\n        }, null);\n      }\n\n      if (!type) {\n        return token.content || ' ';\n      }\n\n      return {\n        type: type,\n        props: this.buildTokenProps(type, token),\n        children: children || (this.options.children[token.type] ? this.options.children[token.type](token, this.rOptions) : token.content)\n      };\n    }\n  }, {\n    key: 'buildTokenTree',\n    value: function buildTokenTree() {\n      var ts = this.tokens;\n      var collection = [];\n\n      while (++this.i < ts.length) {\n        if (isOpenToken(ts[this.i])) {\n          collection.push(this.buildToken(ts[this.i], this.getType(ts[this.i]), this.buildTokenTree()));\n        } else if (isCloseToken(ts[this.i])) {\n          return collection;\n        } else if (isInlineToken(ts[this.i])) {\n          new this.constructor(ts[this.i].children, this.options, this.rOptions).forEach(function (token) {\n            return collection.push(token);\n          });\n        } else {\n          collection.push(this.buildToken(ts[this.i]));\n        }\n      }\n\n      return collection;\n    }\n  }, {\n    key: 'buildTokenProps',\n    value: function buildTokenProps(type, token) {\n      var _this2 = this;\n\n      var props = typeof this.options.components[type] === 'function' ? _extends({}, token, { options: this.rOptions }) : {};\n\n      [token, this.rOptions].forEach(function (prps) {\n        Object.keys(prps).forEach(function (prop) {\n          var propValue = _this2.resolveProp(token, type, prop, prps[prop]);\n          if (propValue) props[propValue.key] = propValue.value;\n        });\n      });\n\n      return props;\n    }\n  }, {\n    key: 'resolveProp',\n    value: function resolveProp(token, type, prop, propValue) {\n      var component = this.options.components[type];\n      var resolver = this.options.remarkableProps[prop];\n\n      if (!resolver) return;\n\n      if (typeof resolver === 'function') {\n        return this.resolveFunctionProp(type, resolver(propValue, type, token), prop, propValue);\n      }\n\n      if (typeof resolver === 'string') {\n        return this.resolveStringProp(resolver, propValue);\n      }\n\n      if (resolver === true || typeof component === 'function') {\n        return this.resolveTrueProp(prop, propValue);\n      }\n    }\n  }, {\n    key: 'resolveFunctionProp',\n    value: function resolveFunctionProp(type, keyValue, prop, propValue) {\n      if (keyValue) {\n        return {\n          key: keyValue.key || prop,\n          value: keyValue.hasOwnProperty('value') ? keyValue.value : propValue\n        };\n      }\n    }\n  }, {\n    key: 'resolveStringProp',\n    value: function resolveStringProp(resolver, propValue) {\n      return {\n        key: resolver,\n        value: propValue\n      };\n    }\n  }, {\n    key: 'resolveTrueProp',\n    value: function resolveTrueProp(prop, propValue) {\n      return {\n        key: prop,\n        value: propValue\n      };\n    }\n  }]);\n  return TokenTree;\n}();\n\nvar Renderer = function () {\n  function Renderer() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Renderer);\n\n    this.options = assign({\n      keyGen: function keyGen(token, index) {\n        return index;\n      }\n    }, options, {\n      children: assign({}, defaultChildren, options.children),\n      components: assign({}, defaultComponents, options.components),\n      remarkableProps: assign({}, defaultRemarkableProps, options.remarkableProps),\n      tokens: assign({}, defaultTokens, options.tokens)\n    });\n  }\n\n  createClass(Renderer, [{\n    key: 'render',\n    value: function render() {\n      var tokens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var remarkableOptions = arguments[1];\n\n      return this.renderTokenTree(this.buildTokenTree(tokens, remarkableOptions));\n    }\n  }, {\n    key: 'buildTokenTree',\n    value: function buildTokenTree(tokens, remarkableOptions) {\n      return new TokenTree(tokens, this.options, remarkableOptions);\n    }\n  }, {\n    key: 'renderTokenTree',\n    value: function renderTokenTree(token) {\n      var _this = this;\n\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (Array.isArray(token)) return token.map(function (token, indx) {\n        return _this.renderTokenTree(token, indx);\n      });\n      if (!token || !token.type) return token;\n      if (!this.options.components[token.type]) return null;\n\n      return React.createElement(this.options.components[token.type], assign({}, token.props, {\n        key: this.options.keyGen(token, index)\n      }), this.renderTokenTree(token.children));\n    }\n  }]);\n  return Renderer;\n}();\n\nexport { TokenTree };\nexport default Renderer;\n",
    "import React from 'react';\nimport { graphql } from 'gatsby';\nimport get from 'lodash.get';\nimport { components } from './nodes';\nimport { Remarkable } from 'remarkable';\nimport RemarkableReactRenderer from 'remarkable-react';\nimport styled from 'styled-components';\n\n\nconst Box = styled.div`\n  padding: 40px 20px;\n`;\nconst Title = styled.div`\n  font-size: 18px;\n  line-height: 1.33;\n  font-weight: 500;\n  letter-spacing: 0.02em;\n`;\nconst TinyTitle = styled.div`\n  font-size: 40px;\n  line-height: 1.2;\n  font-weight: 600;\n  margin: 16px 0 24px 0;\n`;\n\nconst md = new Remarkable();\nmd.renderer = new RemarkableReactRenderer({ components });\n\nexport default function PostTemplate(args) {\n  const { data } = args;\n  const { current } = data;\n  const category = get(data, 'current.frontmatter.category', '');\n  const title = get(data, 'current.frontmatter.title', '');\n  const name = get(data, 'current.fields.name', '');\n  return (\n    <Box>\n      <Title>{`${category}·${name}`}</Title>\n      <TinyTitle>{title}</TinyTitle>\n      {md.render(current.body)}\n    </Box>\n  );\n}\n\nexport const query = graphql`\n  query($slug: String) {\n    current: mdx(fields: {slug: {eq: $slug}}) {\n      frontmatter {\n        title\n        order\n        brief\n        icon\n        category\n      }\n      fields {\n        type\n        name\n      }\n      tableOfContents\n      body\n    }\n  }\n`;"
  ],
  "names": [
    "components",
    "Compare",
    "code",
    "_ref",
    "children",
    "React",
    "CodeBlock",
    "table",
    "ApiTable",
    "section",
    "_ref2",
    "id",
    "Array",
    "isArray",
    "props",
    "originalType",
    "className",
    "h1",
    "_ref3",
    "h2",
    "_ref4",
    "h3",
    "_ref5",
    "h4",
    "_ref6",
    "h5",
    "_ref7",
    "h6",
    "_ref8",
    "decodeEntity",
    "name",
    "document",
    "createElement",
    "innerHTML",
    "value",
    "hasOwn",
    "Object",
    "prototype",
    "hasOwnProperty",
    "has",
    "object",
    "key",
    "call",
    "obj",
    "slice",
    "arguments",
    "forEach",
    "source",
    "TypeError",
    "keys",
    "UNESCAPE_MD_RE",
    "unescapeMd",
    "str",
    "indexOf",
    "replace",
    "isValidEntityCode",
    "c",
    "fromCodePoint",
    "surrogate1",
    "surrogate2",
    "String",
    "fromCharCode",
    "NAMED_ENTITY_RE",
    "DIGITAL_ENTITY_TEST_RE",
    "replaceEntityPattern",
    "match",
    "decoded",
    "charCodeAt",
    "test",
    "toLowerCase",
    "parseInt",
    "replaceEntities",
    "HTML_ESCAPE_TEST_RE",
    "HTML_ESCAPE_REPLACE_RE",
    "HTML_REPLACEMENTS",
    "replaceUnsafeChar",
    "ch",
    "escapeHtml",
    "rules",
    "nextToken",
    "tokens",
    "idx",
    "length",
    "type",
    "tight",
    "content",
    "blockquote_open",
    "blockquote_close",
    "getBreak",
    "block",
    "fence",
    "options",
    "env",
    "instance",
    "fences",
    "fenceName",
    "token",
    "langClass",
    "langPrefix",
    "params",
    "split",
    "join",
    "fence_custom",
    "highlight",
    "apply",
    "concat",
    "heading_open",
    "hLevel",
    "heading_close",
    "hr",
    "xhtmlOut",
    "bullet_list_open",
    "bullet_list_close",
    "list_item_open",
    "list_item_close",
    "ordered_list_open",
    "order",
    "ordered_list_close",
    "paragraph_open",
    "paragraph_close",
    "addBreak",
    "link_open",
    "title",
    "target",
    "linkTarget",
    "href",
    "link_close",
    "image",
    "src",
    "alt",
    "table_open",
    "table_close",
    "thead_open",
    "thead_close",
    "tbody_open",
    "tbody_close",
    "tr_open",
    "tr_close",
    "th_open",
    "align",
    "th_close",
    "td_open",
    "td_close",
    "strong_open",
    "strong_close",
    "em_open",
    "em_close",
    "del_open",
    "del_close",
    "ins_open",
    "ins_close",
    "mark_open",
    "mark_close",
    "sub",
    "sup",
    "hardbreak",
    "softbreak",
    "breaks",
    "text",
    "htmlblock",
    "htmltag",
    "abbr_open",
    "abbr_close",
    "footnote_ref",
    "n",
    "Number",
    "toString",
    "subId",
    "footnote_block_open",
    "footnote_block_close",
    "footnote_open",
    "footnote_close",
    "footnote_anchor",
    "dl_open",
    "dt_open",
    "dd_open",
    "dl_close",
    "dt_close",
    "dd_close",
    "Renderer",
    "this",
    "Ruler",
    "__rules__",
    "__cache__",
    "StateInline",
    "parserInline",
    "outTokens",
    "parser",
    "pos",
    "posMax",
    "level",
    "pending",
    "pendingLevel",
    "cache",
    "isInLabel",
    "linkLevel",
    "linkContent",
    "labelUnmatchedScopes",
    "parseLinkLabel",
    "state",
    "start",
    "found",
    "marker",
    "labelEnd",
    "max",
    "oldPos",
    "oldFlag",
    "skipToken",
    "parseAbbr",
    "label",
    "trim",
    "abbreviations",
    "normalizeLink",
    "url",
    "normalized",
    "decodeURI",
    "err",
    "encodeURI",
    "parseLinkDestination",
    "link",
    "validateLink",
    "parseLinkTitle",
    "normalizeReference",
    "toUpperCase",
    "parseReference",
    "references",
    "renderInline",
    "_rules",
    "len",
    "i",
    "result",
    "render",
    "__find__",
    "__compile__",
    "self",
    "chains",
    "rule",
    "enabled",
    "altName",
    "push",
    "chain",
    "fn",
    "at",
    "opt",
    "Error",
    "before",
    "beforeName",
    "ruleName",
    "splice",
    "after",
    "afterName",
    "enable",
    "list",
    "strict",
    "disable",
    "getRules",
    "chainName",
    "pushPending",
    "cacheSet",
    "val",
    "cacheGet",
    "PUNCT_CHARS",
    "regEscape",
    "s",
    "RARE_RE",
    "SCOPED_ABBR_RE",
    "SCOPED_ABBR",
    "QUOTE_TEST_RE",
    "QUOTE_RE",
    "PUNCT_RE",
    "APOSTROPHE",
    "isLetter",
    "replaceAt",
    "index",
    "substr",
    "inlineMode",
    "lines",
    "parse",
    "l",
    "inline",
    "tok",
    "j",
    "t",
    "lastParagraph",
    "current",
    "currentLabel",
    "insideRef",
    "refTokens",
    "footnotes",
    "filter",
    "pop",
    "count",
    "nodes",
    "reg",
    "m",
    "regText",
    "blockTokens",
    "abbrRegExp",
    "map",
    "x",
    "sort",
    "a",
    "b",
    "RegExp",
    "lastIndex",
    "exec",
    "inlineTokens",
    "blkIdx",
    "typographer",
    "thisLevel",
    "lastSpace",
    "nextSpace",
    "item",
    "canOpen",
    "canClose",
    "isSingle",
    "stack",
    "OUTER",
    "single",
    "quotes",
    "Core",
    "ruler",
    "StateBlock",
    "indent",
    "indent_found",
    "bMarks",
    "eMarks",
    "tShift",
    "blkIndent",
    "line",
    "lineMax",
    "parentType",
    "ddIndent",
    "skipBulletListMarker",
    "startLine",
    "skipOrderedListMarker",
    "process",
    "isEmpty",
    "skipEmptyLines",
    "from",
    "skipSpaces",
    "skipChars",
    "skipCharsBack",
    "min",
    "getLines",
    "begin",
    "end",
    "keepLastLF",
    "first",
    "last",
    "queue",
    "shift",
    "Math",
    "html_blocks",
    "HTML_TAG_OPEN_RE",
    "HTML_TAG_CLOSE_RE",
    "getLine",
    "skipMarker",
    "_rules$1",
    "endLine",
    "nextLine",
    "silent",
    "mem",
    "haveEndMarker",
    "lastLineEmpty",
    "oldTShift",
    "oldBMarks",
    "oldIndent",
    "oldParentType",
    "terminatorRules",
    "terminate",
    "maxNesting",
    "tokenize",
    "cnt",
    "oldTight",
    "posAfterMarker",
    "indentAfterMarker",
    "markerValue",
    "markerCharCode",
    "isOrdered",
    "contentStart",
    "listTokIdx",
    "prevEmptyEnd",
    "listLines",
    "itemLines",
    "markTightParagraphs",
    "oldBMark",
    "refs",
    "tmp",
    "next",
    "html",
    "lc",
    "isLetter$1",
    "lineText",
    "rows",
    "cell",
    "aligns",
    "tableLines",
    "tbodyLines",
    "substring",
    "ddLine",
    "dtLine",
    "oldDDIndent",
    "markTightParagraphs$1",
    "ParserBlock",
    "hasEmptyLines",
    "TABS_SCAN_RE",
    "NEWLINES_RE",
    "SPACES_RE",
    "isTerminatorChar",
    "lineStart",
    "lastTabPos",
    "offset",
    "ESCAPED",
    "isAlphaNum",
    "scanDelims",
    "lastChar",
    "nextChar",
    "can_open",
    "can_close",
    "delims",
    "UNESCAPE_RE",
    "UNESCAPE_RE$1",
    "url_schemas",
    "EMAIL_RE",
    "AUTOLINK_RE",
    "replace$1",
    "regex",
    "attr_value",
    "attribute",
    "open_tag",
    "HTML_TAG_RE",
    "DIGITAL_RE",
    "NAMED_RE",
    "_rules$2",
    "pmax",
    "matchStart",
    "matchEnd",
    "startCount",
    "oldCount",
    "newCount",
    "res",
    "labelStart",
    "ref",
    "isImage",
    "footnoteId",
    "oldLength",
    "footnoteSubId",
    "tail",
    "linkMatch",
    "emailMatch",
    "fullUrl",
    "isLetter$2",
    "ParserInline",
    "cached_pos",
    "ok",
    "config",
    "core",
    "StateCore",
    "renderer",
    "Remarkable",
    "preset",
    "linkify",
    "console",
    "warn",
    "configure",
    "set",
    "presets",
    "use",
    "plugin",
    "parseInline",
    "assign",
    "_len",
    "args",
    "_key",
    "defaultChildren",
    "defaultComponents",
    "blockquote",
    "br",
    "del",
    "em",
    "img",
    "ins",
    "li",
    "mark",
    "ol",
    "p",
    "pre",
    "strong",
    "tbody",
    "td",
    "th",
    "thead",
    "tr",
    "ul",
    "defaultRemarkableProps",
    "_align",
    "textAlign",
    "_content",
    "__html",
    "_id",
    "defaultTokens",
    "_",
    "undefined",
    "classCallCheck",
    "Constructor",
    "createClass",
    "defineProperties",
    "descriptor",
    "enumerable",
    "configurable",
    "writable",
    "defineProperty",
    "protoProps",
    "staticProps",
    "_extends",
    "TokenTree",
    "rOptions",
    "buildTokenTree",
    "_this",
    "getType",
    "reduceRight",
    "child",
    "typee",
    "buildToken",
    "buildTokenProps",
    "ts",
    "collection",
    "includes",
    "constructor",
    "_this2",
    "prps",
    "prop",
    "propValue",
    "resolveProp",
    "component",
    "resolver",
    "remarkableProps",
    "resolveFunctionProp",
    "resolveStringProp",
    "resolveTrueProp",
    "keyValue",
    "keyGen",
    "remarkableOptions",
    "renderTokenTree",
    "indx",
    "Box",
    "styled",
    "displayName",
    "componentId",
    "Title",
    "TinyTitle",
    "md",
    "PostTemplate",
    "data",
    "category",
    "get",
    "body",
    "RemarkableReactRenderer"
  ],
  "sourceRoot": ""
}