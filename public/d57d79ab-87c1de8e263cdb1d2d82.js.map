{"version":3,"file":"d57d79ab-87c1de8e263cdb1d2d82.js","mappings":"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KACzD,MAAMI,GAA6B,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,GAAI,GAAI,KAAM,GAAI,EAAG,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,MAAO,GAAI,KAAM,EAAG,IAAK,EAAG,KAAM,GAAI,KAAM,KAAM,IAAK,KAAM,KAAM,EAAG,MACvgEC,GAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAA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","sources":["webpack://root/./node_modules/@babel/parser/lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nclass Position {\n  constructor(line, col, index) {\n    this.line = void 0;\n    this.column = void 0;\n    this.index = void 0;\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n}\nfunction createPositionWithColumnOffset(position, columnOffset) {\n  const {\n    line,\n    column,\n    index\n  } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n\nvar ParseErrorCode = {\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n};\nconst reflect = (keys, last = keys.length - 1) => ({\n  get() {\n    return keys.reduce((object, key) => object[key], this);\n  },\n  set(value) {\n    keys.reduce((item, key, i) => i === last ? item[key] = value : item[key], this);\n  }\n});\nconst instantiate = (constructor, properties, descriptors) => Object.keys(descriptors).map(key => [key, descriptors[key]]).filter(([, descriptor]) => !!descriptor).map(([key, descriptor]) => [key, typeof descriptor === \"function\" ? {\n  value: descriptor,\n  enumerable: false\n} : typeof descriptor.reflect === \"string\" ? Object.assign({}, descriptor, reflect(descriptor.reflect.split(\".\"))) : descriptor]).reduce((instance, [key, descriptor]) => Object.defineProperty(instance, key, Object.assign({\n  configurable: true\n}, descriptor)), Object.assign(new constructor(), properties));\n\nvar ModuleErrors = {\n  ImportMetaOutsideModule: {\n    message: `import.meta may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError\n  },\n  ImportOutsideModule: {\n    message: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n    code: ParseErrorCode.SourceTypeModuleError\n  }\n};\n\nconst NodeDescriptions = {\n  ArrayPattern: \"array destructuring pattern\",\n  AssignmentExpression: \"assignment expression\",\n  AssignmentPattern: \"assignment expression\",\n  ArrowFunctionExpression: \"arrow function expression\",\n  ConditionalExpression: \"conditional expression\",\n  CatchClause: \"catch clause\",\n  ForOfStatement: \"for-of statement\",\n  ForInStatement: \"for-in statement\",\n  ForStatement: \"for-loop\",\n  FormalParameters: \"function parameter list\",\n  Identifier: \"identifier\",\n  ImportSpecifier: \"import specifier\",\n  ImportDefaultSpecifier: \"import default specifier\",\n  ImportNamespaceSpecifier: \"import namespace specifier\",\n  ObjectPattern: \"object destructuring pattern\",\n  ParenthesizedExpression: \"parenthesized expression\",\n  RestElement: \"rest element\",\n  UpdateExpression: {\n    true: \"prefix operation\",\n    false: \"postfix operation\"\n  },\n  VariableDeclarator: \"variable declaration\",\n  YieldExpression: \"yield expression\"\n};\nconst toNodeDescription = ({\n  type,\n  prefix\n}) => type === \"UpdateExpression\" ? NodeDescriptions.UpdateExpression[String(prefix)] : NodeDescriptions[type];\n\nvar StandardErrors = {\n  AccessorIsGenerator: ({\n    kind\n  }) => `A ${kind}ter cannot be a generator.`,\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitInUsingBinding: \"'await' is not allowed to be used as a name in 'using' declarations.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accessor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accessor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accessor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: ({\n    kind\n  }) => `Missing initializer in ${kind} declaration.`,\n  DecoratorArgumentsOutsideParentheses: \"Decorator arguments must be moved inside parentheses: use '@(decorator(args))' instead of '@(decorator)(args)'.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. Remove the 'decoratorsBeforeExport: true' option to use the 'export @decorator class {}' syntax.\",\n  DecoratorsBeforeAfterExport: \"Decorators can be placed *either* before or after the 'export' keyword, but not in both locations at the same time.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Decorators must be placed *after* the 'export' keyword. Remove the 'decoratorsBeforeExport: false' option to use the '@decorator export class {}' syntax.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: ({\n    exportName\n  }) => `\\`${exportName}\\` has already been exported. Exported identifiers must be unique.`,\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: ({\n    localName,\n    exportName\n  }) => `A string literal cannot be used as an exported binding without \\`from\\`.\\n- Did you mean \\`export { '${localName}' as '${exportName}' } from 'some-module'\\`?`,\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: ({\n    type\n  }) => `'${type === \"ForInStatement\" ? \"for-in\" : \"for-of\"}' loop variable declaration may not have an initializer.`,\n  ForInUsing: \"For-in loop may not start with 'using' declaration.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: ({\n    type\n  }) => `Unsyntactic ${type === \"BreakStatement\" ? \"break\" : \"continue\"}.`,\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: ({\n    importName\n  }) => `A string literal cannot be used as an imported binding.\\n- Did you mean \\`import { \"${importName}\" as foo }\\`?`,\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: ({\n    maxArgumentCount\n  }) => `\\`import()\\` requires exactly ${maxArgumentCount === 1 ? \"one argument\" : \"one or two arguments\"}.`,\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  ImportJSONBindingNotDefault: \"A JSON module can only be imported with `default`.\",\n  ImportReflectionHasAssertion: \"`import module x` cannot have assertions.\",\n  ImportReflectionNotBinding: 'Only `import module x from \"./module\"` is valid.',\n  IncompatibleRegExpUVFlags: \"The 'u' and 'v' regular expression flags cannot be enabled at the same time.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: ({\n    radix\n  }) => `Expected number in radix ${radix}.`,\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: ({\n    reservedWord\n  }) => `Escape sequence in keyword ${reservedWord}.`,\n  InvalidIdentifier: ({\n    identifierName\n  }) => `Invalid identifier ${identifierName}.`,\n  InvalidLhs: ({\n    ancestor\n  }) => `Invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidLhsBinding: ({\n    ancestor\n  }) => `Binding invalid left-hand side in ${toNodeDescription(ancestor)}.`,\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: ({\n    unexpected\n  }) => `Unexpected character '${unexpected}'.`,\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: ({\n    identifierName\n  }) => `Private name #${identifierName} is not defined.`,\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: ({\n    labelName\n  }) => `Label '${labelName}' is already declared.`,\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingPlugin: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling the parser plugin: ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingOneOfPlugins: ({\n    missingPlugin\n  }) => `This experimental syntax requires enabling one of the following parser plugin(s): ${missingPlugin.map(name => JSON.stringify(name)).join(\", \")}.`,\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: ({\n    key\n  }) => `Duplicate key \"${key}\" is not allowed in module attributes.`,\n  ModuleExportNameHasLoneSurrogate: ({\n    surrogateCharCode\n  }) => `An export name cannot include a lone surrogate, found '\\\\u${surrogateCharCode.toString(16)}'.`,\n  ModuleExportUndefined: ({\n    localName\n  }) => `Export '${localName}' is not defined.`,\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PrivateInExpectedIn: ({\n    identifierName\n  }) => `Private names are only allowed in property accesses (\\`obj.#${identifierName}\\`) or in \\`in\\` expressions (\\`#${identifierName} in obj\\`).`,\n  PrivateNameRedeclaration: ({\n    identifierName\n  }) => `Duplicate private name #${identifierName}.`,\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level or inside a block.\",\n  SloppyFunctionAnnexB: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: ({\n    keyword\n  }) => `Unexpected keyword '${keyword}'.`,\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: ({\n    reservedWord\n  }) => `Unexpected reserved word '${reservedWord}'.`,\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: ({\n    expected,\n    unexpected\n  }) => `Unexpected token${unexpected ? ` '${unexpected}'.` : \"\"}${expected ? `, expected \"${expected}\"` : \"\"}`,\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnexpectedUsingDeclaration: \"Using declaration cannot appear in the top level when source type is `script`.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: ({\n    target,\n    onlyValidPropertyName\n  }) => `The only valid meta property for ${target} is ${target}.${onlyValidPropertyName}.`,\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  UsingDeclarationHasBindingPattern: \"Using declaration cannot have destructuring patterns.\",\n  VarRedeclaration: ({\n    identifierName\n  }) => `Identifier '${identifierName}' has already been declared.`,\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n};\n\nvar StrictModeErrors = {\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: ({\n    referenceName\n  }) => `Assigning to '${referenceName}' in strict mode.`,\n  StrictEvalArgumentsBinding: ({\n    bindingName\n  }) => `Binding '${bindingName}' in strict mode.`,\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\"\n};\n\nconst UnparenthesizedPipeBodyDescriptions = new Set([\"ArrowFunctionExpression\", \"AssignmentExpression\", \"ConditionalExpression\", \"YieldExpression\"]);\nvar PipelineOperatorErrors = {\n  PipeBodyIsTighter: \"Unexpected yield after pipeline body; any yield expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: ({\n    token\n  }) => `Invalid topic token ${token}. In order to use ${token} as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"${token}\" }.`,\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: ({\n    type\n  }) => `Hack-style pipe body cannot be an unparenthesized ${toNodeDescription({\n    type\n  })}; please wrap it in parentheses.`,\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.'\n};\n\nconst _excluded$1 = [\"toMessage\"],\n  _excluded2$1 = [\"message\"];\nfunction toParseErrorConstructor(_ref) {\n  let {\n      toMessage\n    } = _ref,\n    properties = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  return function constructor({\n    loc,\n    details\n  }) {\n    return instantiate(SyntaxError, Object.assign({}, properties, {\n      loc\n    }), {\n      clone(overrides = {}) {\n        const loc = overrides.loc || {};\n        return constructor({\n          loc: new Position(\"line\" in loc ? loc.line : this.loc.line, \"column\" in loc ? loc.column : this.loc.column, \"index\" in loc ? loc.index : this.loc.index),\n          details: Object.assign({}, this.details, overrides.details)\n        });\n      },\n      details: {\n        value: details,\n        enumerable: false\n      },\n      message: {\n        get() {\n          return `${toMessage(this.details)} (${this.loc.line}:${this.loc.column})`;\n        },\n        set(value) {\n          Object.defineProperty(this, \"message\", {\n            value\n          });\n        }\n      },\n      pos: {\n        reflect: \"loc.index\",\n        enumerable: true\n      },\n      missingPlugin: \"missingPlugin\" in details && {\n        reflect: \"details.missingPlugin\",\n        enumerable: true\n      }\n    });\n  };\n}\nfunction ParseErrorEnum(argument, syntaxPlugin) {\n  if (Array.isArray(argument)) {\n    return parseErrorTemplates => ParseErrorEnum(parseErrorTemplates, argument[0]);\n  }\n  const ParseErrorConstructors = {};\n  for (const reasonCode of Object.keys(argument)) {\n    const template = argument[reasonCode];\n    const _ref2 = typeof template === \"string\" ? {\n        message: () => template\n      } : typeof template === \"function\" ? {\n        message: template\n      } : template,\n      {\n        message\n      } = _ref2,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded2$1);\n    const toMessage = typeof message === \"string\" ? () => message : message;\n    ParseErrorConstructors[reasonCode] = toParseErrorConstructor(Object.assign({\n      code: ParseErrorCode.SyntaxError,\n      reasonCode,\n      toMessage\n    }, syntaxPlugin ? {\n      syntaxPlugin\n    } : {}, rest));\n  }\n  return ParseErrorConstructors;\n}\nconst Errors = Object.assign({}, ParseErrorEnum(ModuleErrors), ParseErrorEnum(StandardErrors), ParseErrorEnum(StrictModeErrors), ParseErrorEnum`pipelineOperator`(PipelineOperatorErrors));\n\nconst {\n  defineProperty\n} = Object;\nconst toUnenumerable = (object, key) => defineProperty(object, key, {\n  enumerable: false,\n  value: object[key]\n});\nfunction toESTreeLocation(node) {\n  node.loc.start && toUnenumerable(node.loc.start, \"index\");\n  node.loc.end && toUnenumerable(node.loc.end, \"index\");\n  return node;\n}\nvar estree = (superClass => class ESTreeParserMixin extends superClass {\n  parse() {\n    const file = toESTreeLocation(super.parse());\n    if (this.options.tokens) {\n      file.tokens = file.tokens.map(toESTreeLocation);\n    }\n    return file;\n  }\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n  parseBigIntLiteral(value) {\n    let bigInt;\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n  directiveToStmt(directive) {\n    const expression = directive.value;\n    delete directive.value;\n    expression.type = \"Literal\";\n    expression.raw = expression.extra.raw;\n    expression.value = expression.extra.expressionValue;\n    const stmt = directive;\n    stmt.type = \"ExpressionStatement\";\n    stmt.expression = expression;\n    stmt.directive = expression.extra.rawValue;\n    delete expression.extra;\n    return stmt;\n  }\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    super.parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n    classBody.body.push(method);\n  }\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n    return this.finishNode(node, \"MethodDefinition\");\n  }\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") {\n        node.kind = \"init\";\n      }\n      node.shorthand = false;\n    }\n    return node;\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n    return node;\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return type === \"Property\" ? \"value\" : super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n    return super.isAssignable(node, isBinding);\n  }\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      const {\n        key,\n        value\n      } = node;\n      if (this.isPrivateName(key)) {\n        this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n      }\n      this.toAssignable(value, isLHS);\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(Errors.PatternHasAccessor, {\n        at: prop.key\n      });\n    } else if (prop.method) {\n      this.raise(Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else {\n      super.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n    }\n  }\n  finishCallExpression(unfinished, optional) {\n    const node = super.finishCallExpression(unfinished, optional);\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n      delete node.arguments;\n      delete node.callee;\n    }\n    return node;\n  }\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n    super.toReferencedArguments(node);\n  }\n  parseExport(unfinished, decorators) {\n    const exportStartLoc = this.state.lastTokStartLoc;\n    const node = super.parseExport(unfinished, decorators);\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n      case \"ExportDefaultDeclaration\":\n        {\n          var _declaration$decorato;\n          const {\n            declaration\n          } = node;\n          if ((declaration == null ? void 0 : declaration.type) === \"ClassDeclaration\" && ((_declaration$decorato = declaration.decorators) == null ? void 0 : _declaration$decorato.length) > 0 && declaration.start === node.start) {\n            this.resetStartLocation(node, exportStartLoc);\n          }\n        }\n        break;\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startLoc, noCalls, state);\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n    return node;\n  }\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n    return super.hasPropertyAsPrivateName(node);\n  }\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n  finishNodeAt(node, type, endLoc) {\n    return toESTreeLocation(super.finishNodeAt(node, type, endLoc));\n  }\n  resetStartLocation(node, startLoc) {\n    super.resetStartLocation(node, startLoc);\n    toESTreeLocation(node);\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    super.resetEndLocation(node, endLoc);\n    toESTreeLocation(node);\n  }\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  j_oTag: new TokContext(\"<tag\"),\n  j_cTag: new TokContext(\"</tag\"),\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\n};\n{\n  types.template = new TokContext(\"`\", true);\n}\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n}\nconst keywords$1 = new Map();\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\nlet tokenTypeCounter = -1;\nconst tokenTypes = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  templateTail: createToken(\"...`\", {\n    startsExpr\n  }),\n  templateNonTail: createToken(\"...${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  doubleCaret: createToken(\"^^\", {\n    startsExpr\n  }),\n  doubleAt: createToken(\"@@\", {\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _using: createKeywordLike(\"using\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _satisfies: createKeywordLike(\"satisfies\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 93 && token <= 130;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 92;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 58 && token <= 130;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 58 && token <= 134;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 29 && token <= 33;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 127 && token <= 129;\n}\nfunction tokenIsLoop(token) {\n  return token >= 90 && token <= 92;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 58 && token <= 92;\n}\nfunction tokenIsOperator(token) {\n  return token >= 39 && token <= 59;\n}\nfunction tokenIsPostfix(token) {\n  return token === 34;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 119 && token <= 121;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 122 && token <= 128;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 57;\n}\nfunction tokenIsTemplate(token) {\n  return token >= 24 && token <= 25;\n}\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\n{\n  tokenTypes[8].updateContext = context => {\n    context.pop();\n  };\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\n    context.push(types.brace);\n  };\n  tokenTypes[22].updateContext = context => {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n  tokenTypes[140].updateContext = context => {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next, next2) {\n  return current === 64 && next === 64 && isIdentifierStart(next2);\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n  SCOPE_PROGRAM = 0b000000001,\n  SCOPE_FUNCTION = 0b000000010,\n  SCOPE_ARROW = 0b000000100,\n  SCOPE_SIMPLE_CATCH = 0b000001000,\n  SCOPE_SUPER = 0b000010000,\n  SCOPE_DIRECT_SUPER = 0b000100000,\n  SCOPE_CLASS = 0b001000000,\n  SCOPE_STATIC_BLOCK = 0b010000000,\n  SCOPE_TS_MODULE = 0b100000000,\n  SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_STATIC_BLOCK | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b0000000000001,\n  BIND_KIND_TYPE = 0b0000000000010,\n  BIND_SCOPE_VAR = 0b0000000000100,\n  BIND_SCOPE_LEXICAL = 0b0000000001000,\n  BIND_SCOPE_FUNCTION = 0b0000000010000,\n  BIND_FLAGS_NONE = 0b00000001000000,\n  BIND_FLAGS_CLASS = 0b00000010000000,\n  BIND_FLAGS_TS_ENUM = 0b00000100000000,\n  BIND_FLAGS_TS_CONST_ENUM = 0b00001000000000,\n  BIND_FLAGS_TS_EXPORT_ONLY = 0b00010000000000,\n  BIND_FLAGS_FLOW_DECLARE_FN = 0b00100000000000,\n  BIND_FLAGS_TS_IMPORT = 0b01000000000000,\n  BIND_FLAGS_NO_LET_IN_LEXICAL = 0b10000000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_CATCH_PARAM = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n  BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n  BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n  BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n  BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n  BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM | BIND_FLAGS_NO_LET_IN_LEXICAL,\n  BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n  BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n  BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n  BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_TS_TYPE_IMPORT = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_TS_IMPORT,\n  BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n  CLASS_ELEMENT_KIND_GETTER = 0b010,\n  CLASS_ELEMENT_KIND_SETTER = 0b001,\n  CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n  CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n  CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n  CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n}\nclass ScopeHandler {\n  constructor(parser, inModule) {\n    this.parser = void 0;\n    this.scopeStack = [];\n    this.inModule = void 0;\n    this.undefinedExports = new Map();\n    this.parser = parser;\n    this.inModule = inModule;\n  }\n  get inTopLevel() {\n    return (this.currentScope().flags & SCOPE_PROGRAM) > 0;\n  }\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n  createScope(flags) {\n    return new Scope(flags);\n  }\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n  exit() {\n    const scope = this.scopeStack.pop();\n    return scope.flags;\n  }\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & (SCOPE_FUNCTION | SCOPE_STATIC_BLOCK) || !this.parser.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n  declareName(name, bindingType, loc) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  maybeExportDefined(scope, name) {\n    if (this.parser.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n  checkRedeclarationInScope(scope, name, bindingType, loc) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.parser.raise(Errors.VarRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.loc.start);\n    }\n  }\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n}\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n  declareName(name, bindingType, loc) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, loc);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(scope, name, bindingType)) return true;\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n    return false;\n  }\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n  hasPlugin(pluginConfig) {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n      const actualOptions = this.plugins.get(pluginName);\n      for (const key of Object.keys(pluginOptions)) {\n        if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n  getPluginOption(plugin, name) {\n    var _this$plugins$get;\n    return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\n  }\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n    const {\n      start: nodeStart\n    } = node;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n        break;\n      }\n    }\n  }\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n    this.state.commentStack = [];\n  }\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n}\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n    default:\n      return false;\n  }\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.inDisallowConditionalTypesContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 137;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.firstInvalidTemplateEscapePos = null;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n      state[key] = val;\n    }\n    return state;\n  }\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: new Set([46, 66, 69, 79, 95, 98, 101, 111]),\n  hex: new Set([46, 88, 95, 120])\n};\nconst isAllowedNumericSeparatorSibling = {\n  bin: ch => ch === 48 || ch === 49,\n  oct: ch => ch >= 48 && ch <= 55,\n  dec: ch => ch >= 48 && ch <= 57,\n  hex: ch => ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\n};\nfunction readStringContents(type, input, pos, lineStart, curLine, errors) {\n  const initialPos = pos;\n  const initialLineStart = lineStart;\n  const initialCurLine = curLine;\n  let out = \"\";\n  let firstInvalidLoc = null;\n  let chunkStart = pos;\n  const {\n    length\n  } = input;\n  for (;;) {\n    if (pos >= length) {\n      errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    const ch = input.charCodeAt(pos);\n    if (isStringEnd(type, ch, input, pos)) {\n      out += input.slice(chunkStart, pos);\n      break;\n    }\n    if (ch === 92) {\n      out += input.slice(chunkStart, pos);\n      const res = readEscapedChar(input, pos, lineStart, curLine, type === \"template\", errors);\n      if (res.ch === null && !firstInvalidLoc) {\n        firstInvalidLoc = {\n          pos,\n          lineStart,\n          curLine\n        };\n      } else {\n        out += res.ch;\n      }\n      ({\n        pos,\n        lineStart,\n        curLine\n      } = res);\n      chunkStart = pos;\n    } else if (ch === 8232 || ch === 8233) {\n      ++pos;\n      ++curLine;\n      lineStart = pos;\n    } else if (ch === 10 || ch === 13) {\n      if (type === \"template\") {\n        out += input.slice(chunkStart, pos) + \"\\n\";\n        ++pos;\n        if (ch === 13 && input.charCodeAt(pos) === 10) {\n          ++pos;\n        }\n        ++curLine;\n        chunkStart = lineStart = pos;\n      } else {\n        errors.unterminated(initialPos, initialLineStart, initialCurLine);\n      }\n    } else {\n      ++pos;\n    }\n  }\n  return {\n    pos,\n    str: out,\n    firstInvalidLoc,\n    lineStart,\n    curLine,\n    containsInvalid: !!firstInvalidLoc\n  };\n}\nfunction isStringEnd(type, ch, input, pos) {\n  if (type === \"template\") {\n    return ch === 96 || ch === 36 && input.charCodeAt(pos + 1) === 123;\n  }\n  return ch === (type === \"double\" ? 34 : 39);\n}\nfunction readEscapedChar(input, pos, lineStart, curLine, inTemplate, errors) {\n  const throwOnInvalid = !inTemplate;\n  pos++;\n  const res = ch => ({\n    pos,\n    ch,\n    lineStart,\n    curLine\n  });\n  const ch = input.charCodeAt(pos++);\n  switch (ch) {\n    case 110:\n      return res(\"\\n\");\n    case 114:\n      return res(\"\\r\");\n    case 120:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readHexChar(input, pos, lineStart, curLine, 2, false, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCharCode(code));\n      }\n    case 117:\n      {\n        let code;\n        ({\n          code,\n          pos\n        } = readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors));\n        return res(code === null ? null : String.fromCodePoint(code));\n      }\n    case 116:\n      return res(\"\\t\");\n    case 98:\n      return res(\"\\b\");\n    case 118:\n      return res(\"\\u000b\");\n    case 102:\n      return res(\"\\f\");\n    case 13:\n      if (input.charCodeAt(pos) === 10) {\n        ++pos;\n      }\n    case 10:\n      lineStart = pos;\n      ++curLine;\n    case 8232:\n    case 8233:\n      return res(\"\");\n    case 56:\n    case 57:\n      if (inTemplate) {\n        return res(null);\n      } else {\n        errors.strictNumericEscape(pos - 1, lineStart, curLine);\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        const startPos = pos - 1;\n        const match = input.slice(startPos, pos + 2).match(/^[0-7]+/);\n        let octalStr = match[0];\n        let octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        pos += octalStr.length - 1;\n        const next = input.charCodeAt(pos);\n        if (octalStr !== \"0\" || next === 56 || next === 57) {\n          if (inTemplate) {\n            return res(null);\n          } else {\n            errors.strictNumericEscape(startPos, lineStart, curLine);\n          }\n        }\n        return res(String.fromCharCode(octal));\n      }\n      return res(String.fromCharCode(ch));\n  }\n}\nfunction readHexChar(input, pos, lineStart, curLine, len, forceLen, throwOnInvalid, errors) {\n  const initialPos = pos;\n  let n;\n  ({\n    n,\n    pos\n  } = readInt(input, pos, lineStart, curLine, 16, len, forceLen, false, errors, !throwOnInvalid));\n  if (n === null) {\n    if (throwOnInvalid) {\n      errors.invalidEscapeSequence(initialPos, lineStart, curLine);\n    } else {\n      pos = initialPos - 1;\n    }\n  }\n  return {\n    code: n,\n    pos\n  };\n}\nfunction readInt(input, pos, lineStart, curLine, radix, len, forceLen, allowNumSeparator, errors, bailOnError) {\n  const start = pos;\n  const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n  const isAllowedSibling = radix === 16 ? isAllowedNumericSeparatorSibling.hex : radix === 10 ? isAllowedNumericSeparatorSibling.dec : radix === 8 ? isAllowedNumericSeparatorSibling.oct : isAllowedNumericSeparatorSibling.bin;\n  let invalid = false;\n  let total = 0;\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    const code = input.charCodeAt(pos);\n    let val;\n    if (code === 95 && allowNumSeparator !== \"bail\") {\n      const prev = input.charCodeAt(pos - 1);\n      const next = input.charCodeAt(pos + 1);\n      if (!allowNumSeparator) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.numericSeparatorInEscapeSequence(pos, lineStart, curLine);\n      } else if (Number.isNaN(next) || !isAllowedSibling(next) || forbiddenSiblings.has(prev) || forbiddenSiblings.has(next)) {\n        if (bailOnError) return {\n          n: null,\n          pos\n        };\n        errors.unexpectedNumericSeparator(pos, lineStart, curLine);\n      }\n      ++pos;\n      continue;\n    }\n    if (code >= 97) {\n      val = code - 97 + 10;\n    } else if (code >= 65) {\n      val = code - 65 + 10;\n    } else if (_isDigit(code)) {\n      val = code - 48;\n    } else {\n      val = Infinity;\n    }\n    if (val >= radix) {\n      if (val <= 9 && bailOnError) {\n        return {\n          n: null,\n          pos\n        };\n      } else if (val <= 9 && errors.invalidDigit(pos, lineStart, curLine, radix)) {\n        val = 0;\n      } else if (forceLen) {\n        val = 0;\n        invalid = true;\n      } else {\n        break;\n      }\n    }\n    ++pos;\n    total = total * radix + val;\n  }\n  if (pos === start || len != null && pos - start !== len || invalid) {\n    return {\n      n: null,\n      pos\n    };\n  }\n  return {\n    n: total,\n    pos\n  };\n}\nfunction readCodePoint(input, pos, lineStart, curLine, throwOnInvalid, errors) {\n  const ch = input.charCodeAt(pos);\n  let code;\n  if (ch === 123) {\n    ++pos;\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, input.indexOf(\"}\", pos) - pos, true, throwOnInvalid, errors));\n    ++pos;\n    if (code !== null && code > 0x10ffff) {\n      if (throwOnInvalid) {\n        errors.invalidCodePoint(pos, lineStart, curLine);\n      } else {\n        return {\n          code: null,\n          pos\n        };\n      }\n    }\n  } else {\n    ({\n      code,\n      pos\n    } = readHexChar(input, pos, lineStart, curLine, 4, false, throwOnInvalid, errors));\n  }\n  return {\n    code,\n    pos\n  };\n}\n\nconst _excluded = [\"at\"],\n  _excluded2 = [\"at\"];\nfunction buildPosition(pos, lineStart, curLine) {\n  return new Position(curLine, pos - lineStart, pos);\n}\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100, 118]);\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n}\nclass Tokenizer extends CommentsParser {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.errorHandlers_readInt = {\n      invalidDigit: (pos, lineStart, curLine, radix) => {\n        if (!this.options.errorRecovery) return false;\n        this.raise(Errors.InvalidDigit, {\n          at: buildPosition(pos, lineStart, curLine),\n          radix\n        });\n        return true;\n      },\n      numericSeparatorInEscapeSequence: this.errorBuilder(Errors.NumericSeparatorInEscapeSequence),\n      unexpectedNumericSeparator: this.errorBuilder(Errors.UnexpectedNumericSeparator)\n    };\n    this.errorHandlers_readCodePoint = Object.assign({}, this.errorHandlers_readInt, {\n      invalidEscapeSequence: this.errorBuilder(Errors.InvalidEscapeSequence),\n      invalidCodePoint: this.errorBuilder(Errors.InvalidCodePoint)\n    });\n    this.errorHandlers_readStringContents_string = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: (pos, lineStart, curLine) => {\n        this.recordStrictModeErrors(Errors.StrictNumericEscape, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      },\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedString, {\n          at: buildPosition(pos - 1, lineStart, curLine)\n        });\n      }\n    });\n    this.errorHandlers_readStringContents_template = Object.assign({}, this.errorHandlers_readCodePoint, {\n      strictNumericEscape: this.errorBuilder(Errors.StrictNumericEscape),\n      unterminated: (pos, lineStart, curLine) => {\n        throw this.raise(Errors.UnterminatedTemplate, {\n          at: buildPosition(pos, lineStart, curLine)\n        });\n      }\n    });\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n  next() {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n  match(type) {\n    return this.state.type === type;\n  }\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n      startLoc: state.startLoc,\n      lastTokEndLoc: state.lastTokEndLoc,\n      curLine: state.curLine,\n      lineStart: state.lineStart,\n      curPosition: state.curPosition\n    };\n  }\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n  setStrict(strict) {\n    this.state.strict = strict;\n    if (strict) {\n      this.state.strictErrors.forEach(([toParseError, at]) => this.raise(toParseError, {\n        at\n      }));\n      this.state.strictErrors.clear();\n    }\n  }\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n  nextToken() {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(137);\n      return;\n    }\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n  skipBlockComment(commentEnd) {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(commentEnd, start + 2);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n    this.state.pos = end + commentEnd.length;\n    lineBreakG.lastIndex = start + 2;\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + commentEnd.length,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment(\"*/\");\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n                break;\n              }\n            default:\n              break loop;\n          }\n          break;\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule && this.options.annexB) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule && this.options.annexB) {\n            const pos = this.state.pos;\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n      }\n    }\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const commentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(commentWhitespace);\n    }\n  }\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    this.state.endLoc = this.state.curPosition();\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n    if (!this.isLookahead) {\n      this.updateContext(prevType);\n    }\n  }\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= 48 && next <= 57) {\n      throw this.raise(Errors.UnexpectedDigitAfterHash, {\n        at: this.state.curPosition()\n      });\n    }\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") === \"bar\") {\n        throw this.raise(next === 123 ? Errors.RecordExpressionHashIncorrectStartSyntaxType : Errors.TupleExpressionHashIncorrectStartSyntaxType, {\n          at: this.state.curPosition()\n        });\n      }\n      this.state.pos += 2;\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(136, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(136, this.readWord1());\n    } else {\n      this.finishOp(27, 1);\n    }\n  }\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(31, 2);\n    } else {\n      this.finishOp(56, 1);\n    }\n  }\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(28, value);\n    return true;\n  }\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 55 : 54;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 57;\n    }\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 33 : 30;\n    }\n    this.finishOp(type, width);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(code === 124 ? 41 : 42, 2);\n      }\n      return;\n    }\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(39, 2);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.RecordExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(Errors.TupleExpressionBarIncorrectEndSyntaxType, {\n            at: this.state.curPosition()\n          });\n        }\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n      return;\n    }\n    this.finishOp(code === 124 ? 43 : 45, 1);\n  }\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(32, 2);\n    } else if (next === 94 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"^^\"\n    }])) {\n      this.finishOp(37, 2);\n      const lookaheadCh = this.input.codePointAt(this.state.pos);\n      if (lookaheadCh === 94) {\n        throw this.unexpected();\n      }\n    } else {\n      this.finishOp(44, 1);\n    }\n  }\n  readToken_atSign() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 64 && this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"hack\",\n      topicToken: \"@@\"\n    }])) {\n      this.finishOp(38, 2);\n    } else {\n      this.finishOp(26, 1);\n    }\n  }\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === code) {\n      this.finishOp(34, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(53, 1);\n    }\n  }\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(30, 3);\n        return;\n      }\n      this.finishOp(51, 2);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(47, 1);\n  }\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(30, size + 1);\n        return;\n      }\n      this.finishOp(52, size);\n      return;\n    }\n    if (next === 61) {\n      this.finishOp(49, 2);\n      return;\n    }\n    this.finishOp(48, 1);\n  }\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === 61) {\n      this.finishOp(46, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n    this.finishOp(code === 61 ? 29 : 35, 1);\n  }\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(40, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.TupleExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n        return;\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(Errors.RecordExpressionBarIncorrectStartSyntaxType, {\n              at: this.state.curPosition()\n            });\n          }\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n        return;\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n        return;\n      case 63:\n        this.readToken_question();\n        return;\n      case 96:\n        this.readTemplateToken();\n        return;\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n      case 47:\n        this.readToken_slash();\n        return;\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n      case 94:\n        this.readToken_caret();\n        return;\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n      case 60:\n        this.readToken_lt();\n        return;\n      case 62:\n        this.readToken_gt();\n        return;\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n      case 126:\n        this.finishOp(36, 1);\n        return;\n      case 64:\n        this.readToken_atSign();\n        return;\n      case 35:\n        this.readToken_numberSign();\n        return;\n      case 92:\n        this.readWord();\n        return;\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n    throw this.raise(Errors.InvalidOrUnexpectedToken, {\n      at: this.state.curPosition(),\n      unexpected: String.fromCodePoint(code)\n    });\n  }\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n  readRegexp() {\n    const startLoc = this.state.startLoc;\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(Errors.UnterminatedRegExp, {\n          at: createPositionWithColumnOffset(startLoc, 1)\n        });\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n        escaped = ch === 92;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n    const nextPos = () => createPositionWithColumnOffset(startLoc, pos + 2 - start);\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (cp === 118) {\n          this.expectPlugin(\"regexpUnicodeSets\", nextPos());\n          if (mods.includes(\"u\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        } else if (cp === 117) {\n          if (mods.includes(\"v\")) {\n            this.raise(Errors.IncompatibleRegExpUVFlags, {\n              at: nextPos()\n            });\n          }\n        }\n        if (mods.includes(char)) {\n          this.raise(Errors.DuplicateRegExpFlags, {\n            at: nextPos()\n          });\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(Errors.MalformedRegExpFlags, {\n          at: nextPos()\n        });\n      } else {\n        break;\n      }\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n    this.finishToken(135, {\n      pattern: content,\n      flags: mods\n    });\n  }\n  readInt(radix, len, forceLen = false, allowNumSeparator = true) {\n    const {\n      n,\n      pos\n    } = readInt(this.input, this.state.pos, this.state.lineStart, this.state.curLine, radix, len, forceLen, allowNumSeparator, this.errorHandlers_readInt, false);\n    this.state.pos = pos;\n    return n;\n  }\n  readRadixNumber(radix) {\n    const startLoc = this.state.curPosition();\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(Errors.InvalidDigit, {\n        at: createPositionWithColumnOffset(startLoc, 2),\n        radix\n      });\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(Errors.InvalidDecimal, {\n        at: startLoc\n      });\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n    if (isBigInt) {\n      const str = this.input.slice(startLoc.index, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(133, str);\n      return;\n    }\n    this.finishToken(132, val);\n  }\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    const startLoc = this.state.curPosition();\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(Errors.InvalidNumber, {\n        at: this.state.curPosition()\n      });\n    }\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(Errors.StrictOctalLiteral, {\n        at: startLoc\n      });\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(Errors.ZeroDigitNumericSeparator, {\n            at: createPositionWithColumnOffset(startLoc, underscorePos)\n          });\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(Errors.InvalidOrMissingExponent, {\n          at: startLoc\n        });\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(Errors.InvalidBigIntLiteral, {\n          at: startLoc\n        });\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.curPosition());\n      if (hasExponent || hasLeadingZero) {\n        this.raise(Errors.InvalidDecimal, {\n          at: startLoc\n        });\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(Errors.NumberIdentifier, {\n        at: this.state.curPosition()\n      });\n    }\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n    if (isBigInt) {\n      this.finishToken(133, str);\n      return;\n    }\n    if (isDecimal) {\n      this.finishToken(134, str);\n      return;\n    }\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(132, val);\n  }\n  readCodePoint(throwOnInvalid) {\n    const {\n      code,\n      pos\n    } = readCodePoint(this.input, this.state.pos, this.state.lineStart, this.state.curLine, throwOnInvalid, this.errorHandlers_readCodePoint);\n    this.state.pos = pos;\n    return code;\n  }\n  readString(quote) {\n    const {\n      str,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(quote === 34 ? \"double\" : \"single\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_string);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    this.finishToken(131, str);\n  }\n  readTemplateContinuation() {\n    if (!this.match(8)) {\n      this.unexpected(null, 8);\n    }\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n  readTemplateToken() {\n    const opening = this.input[this.state.pos];\n    const {\n      str,\n      firstInvalidLoc,\n      pos,\n      curLine,\n      lineStart\n    } = readStringContents(\"template\", this.input, this.state.pos + 1, this.state.lineStart, this.state.curLine, this.errorHandlers_readStringContents_template);\n    this.state.pos = pos + 1;\n    this.state.lineStart = lineStart;\n    this.state.curLine = curLine;\n    if (firstInvalidLoc) {\n      this.state.firstInvalidTemplateEscapePos = new Position(firstInvalidLoc.curLine, firstInvalidLoc.pos - firstInvalidLoc.lineStart, firstInvalidLoc.pos);\n    }\n    if (this.input.codePointAt(pos) === 96) {\n      this.finishToken(24, firstInvalidLoc ? null : opening + str + \"`\");\n    } else {\n      this.state.pos++;\n      this.finishToken(25, firstInvalidLoc ? null : opening + str + \"${\");\n    }\n  }\n  recordStrictModeErrors(toParseError, {\n    at\n  }) {\n    const index = at.index;\n    if (this.state.strict && !this.state.strictErrors.has(index)) {\n      this.raise(toParseError, {\n        at\n      });\n    } else {\n      this.state.strictErrors.set(index, [toParseError, at]);\n    }\n  }\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.curPosition();\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(Errors.MissingUnicodeEscape, {\n            at: this.state.curPosition()\n          });\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(Errors.EscapedCharNotAnIdentifier, {\n              at: escStart\n            });\n          }\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(130, word);\n    }\n  }\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.startLoc,\n        reservedWord: tokenLabelName(type)\n      });\n    }\n  }\n  raise(toParseError, raiseProperties) {\n    const {\n        at\n      } = raiseProperties,\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded);\n    const loc = at instanceof Position ? at : at.loc.start;\n    const error = toParseError({\n      loc,\n      details\n    });\n    if (!this.options.errorRecovery) throw error;\n    if (!this.isLookahead) this.state.errors.push(error);\n    return error;\n  }\n  raiseOverwrite(toParseError, raiseProperties) {\n    const {\n        at\n      } = raiseProperties,\n      details = _objectWithoutPropertiesLoose(raiseProperties, _excluded2);\n    const loc = at instanceof Position ? at : at.loc.start;\n    const pos = loc.index;\n    const errors = this.state.errors;\n    for (let i = errors.length - 1; i >= 0; i--) {\n      const error = errors[i];\n      if (error.loc.index === pos) {\n        return errors[i] = toParseError({\n          loc,\n          details\n        });\n      }\n      if (error.loc.index < pos) break;\n    }\n    return this.raise(toParseError, raiseProperties);\n  }\n  updateContext(prevType) {}\n  unexpected(loc, type) {\n    throw this.raise(Errors.UnexpectedToken, {\n      expected: type ? tokenLabelName(type) : null,\n      at: loc != null ? loc : this.state.startLoc\n    });\n  }\n  expectPlugin(pluginName, loc) {\n    if (this.hasPlugin(pluginName)) {\n      return true;\n    }\n    throw this.raise(Errors.MissingPlugin, {\n      at: loc != null ? loc : this.state.startLoc,\n      missingPlugin: [pluginName]\n    });\n  }\n  expectOnePlugin(pluginNames) {\n    if (!pluginNames.some(name => this.hasPlugin(name))) {\n      throw this.raise(Errors.MissingOneOfPlugins, {\n        at: this.state.startLoc,\n        missingPlugin: pluginNames\n      });\n    }\n  }\n  errorBuilder(error) {\n    return (pos, lineStart, curLine) => {\n      this.raise(error, {\n        at: buildPosition(pos, lineStart, curLine)\n      });\n    };\n  }\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n}\nclass ClassScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.parser = parser;\n  }\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name\n        });\n      }\n    }\n  }\n  declarePrivateName(name, elementType, loc) {\n    const {\n      privateNames,\n      loneAccessors,\n      undefinedPrivateNames\n    } = this.current();\n    let redefined = privateNames.has(name);\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name\n      });\n    }\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n  usePrivateName(name, loc) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name\n      });\n    }\n  }\n}\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.declarationErrors = new Map();\n  }\n  recordDeclarationError(ParsingErrorClass, {\n    at\n  }) {\n    const index = at.index;\n    this.declarationErrors.set(index, [ParsingErrorClass, at]);\n  }\n  clearDeclarationError(index) {\n    this.declarationErrors.delete(index);\n  }\n  iterateErrors(iterator) {\n    this.declarationErrors.forEach(iterator);\n  }\n}\nclass ExpressionScopeHandler {\n  constructor(parser) {\n    this.parser = void 0;\n    this.stack = [new ExpressionScope()];\n    this.parser = parser;\n  }\n  enter(scope) {\n    this.stack.push(scope);\n  }\n  exit() {\n    this.stack.pop();\n  }\n  recordParameterInitializerError(toParseError, {\n    at: node\n  }) {\n    const origin = {\n      at: node.loc.start\n    };\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(toParseError, origin);\n      } else {\n        return;\n      }\n      scope = stack[--i];\n    }\n    this.parser.raise(toParseError, origin);\n  }\n  recordArrowParameterBindingError(error, {\n    at: node\n  }) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n    const origin = {\n      at: node.loc.start\n    };\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.parser.raise(error, origin);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(error, origin);\n    } else {\n      return;\n    }\n  }\n  recordAsyncArrowParametersError({\n    at\n  }) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(Errors.AwaitBindingIdentifier, {\n          at\n        });\n      }\n      scope = stack[--i];\n    }\n  }\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors(([toParseError, loc]) => {\n      this.parser.raise(toParseError, {\n        at: loc\n      });\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(loc.index);\n        scope = stack[--i];\n      }\n    });\n  }\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n  PARAM_YIELD = 0b0001,\n  PARAM_AWAIT = 0b0010,\n  PARAM_RETURN = 0b0100,\n  PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n  exit() {\n    this.stacks.pop();\n  }\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, value, enumerable = true) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    if (enumerable) {\n      extra[key] = value;\n    } else {\n      Object.defineProperty(extra, key, {\n        enumerable,\n        value\n      });\n    }\n  }\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n    return false;\n  }\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  expectContextual(token, toParseError) {\n    if (!this.eatContextual(token)) {\n      if (toParseError != null) {\n        throw this.raise(toParseError, {\n          at: this.state.startLoc\n        });\n      }\n      throw this.unexpected(null, token);\n    }\n  }\n  canInsertSemicolon() {\n    return this.match(137) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEndLoc.index, this.state.start));\n  }\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(Errors.MissingSemicolon, {\n      at: this.state.lastTokEndLoc\n    });\n  }\n  expect(type, loc) {\n    this.eat(type) || this.unexpected(loc, type);\n  }\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n      throw error;\n    }\n  }\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssignLoc,\n      doubleProtoLoc,\n      privateKeyLoc,\n      optionalParametersLoc\n    } = refExpressionErrors;\n    const hasErrors = !!shorthandAssignLoc || !!doubleProtoLoc || !!optionalParametersLoc || !!privateKeyLoc;\n    if (!andThrow) {\n      return hasErrors;\n    }\n    if (shorthandAssignLoc != null) {\n      this.raise(Errors.InvalidCoverInitializedName, {\n        at: shorthandAssignLoc\n      });\n    }\n    if (doubleProtoLoc != null) {\n      this.raise(Errors.DuplicateProto, {\n        at: doubleProtoLoc\n      });\n    }\n    if (privateKeyLoc != null) {\n      this.raise(Errors.UnexpectedPrivateField, {\n        at: privateKeyLoc\n      });\n    }\n    if (optionalParametersLoc != null) {\n      this.unexpected(optionalParametersLoc);\n    }\n  }\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this, inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this);\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this);\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n  checkDestructuringPrivate(refExpressionErrors) {\n    const {\n      privateKeyLoc\n    } = refExpressionErrors;\n    if (privateKeyLoc !== null) {\n      this.expectPlugin(\"destructuringPrivate\", privateKeyLoc);\n    }\n  }\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssignLoc = null;\n    this.doubleProtoLoc = null;\n    this.privateKeyLoc = null;\n    this.optionalParametersLoc = null;\n  }\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n}\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node(undefined, this.start, this.loc.start);\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n    return newNode;\n  };\n}\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  if (node.raw !== undefined) {\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n  startNodeAt(loc) {\n    return new Node(this, loc.index, loc);\n  }\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.loc.start);\n  }\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEndLoc);\n  }\n  finishNodeAt(node, type, endLoc) {\n    node.type = type;\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n  resetStartLocation(node, startLoc) {\n    node.start = startLoc.index;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = startLoc.index;\n  }\n  resetEndLocation(node, endLoc = this.state.lastTokEndLoc) {\n    node.end = endLoc.index;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = endLoc.index;\n  }\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.loc.start);\n  }\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = ParseErrorEnum`flow`({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: ({\n    reservedType\n  }) => `Cannot overwrite reserved type ${reservedType}.`,\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: ({\n    memberName,\n    enumName\n  }) => `Boolean enum members need to be initialized. Use either \\`${memberName} = true,\\` or \\`${memberName} = false,\\` in enum \\`${enumName}\\`.`,\n  EnumDuplicateMemberName: ({\n    memberName,\n    enumName\n  }) => `Enum member names need to be unique, but the name \\`${memberName}\\` has already been used before in enum \\`${enumName}\\`.`,\n  EnumInconsistentMemberValues: ({\n    enumName\n  }) => `Enum \\`${enumName}\\` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.`,\n  EnumInvalidExplicitType: ({\n    invalidEnumType,\n    enumName\n  }) => `Enum type \\`${invalidEnumType}\\` is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidExplicitTypeUnknownSupplied: ({\n    enumName\n  }) => `Supplied enum type is not valid. Use one of \\`boolean\\`, \\`number\\`, \\`string\\`, or \\`symbol\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerPrimaryType: ({\n    enumName,\n    memberName,\n    explicitType\n  }) => `Enum \\`${enumName}\\` has type \\`${explicitType}\\`, so the initializer of \\`${memberName}\\` needs to be a ${explicitType} literal.`,\n  EnumInvalidMemberInitializerSymbolType: ({\n    enumName,\n    memberName\n  }) => `Symbol enum members cannot be initialized. Use \\`${memberName},\\` in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberInitializerUnknownType: ({\n    enumName,\n    memberName\n  }) => `The enum member initializer for \\`${memberName}\\` needs to be a literal (either a boolean, number, or string) in enum \\`${enumName}\\`.`,\n  EnumInvalidMemberName: ({\n    enumName,\n    memberName,\n    suggestion\n  }) => `Enum member names cannot start with lowercase 'a' through 'z'. Instead of using \\`${memberName}\\`, consider using \\`${suggestion}\\`, in enum \\`${enumName}\\`.`,\n  EnumNumberMemberNotInitialized: ({\n    enumName,\n    memberName\n  }) => `Number enum members need to be initialized, e.g. \\`${memberName} = 1\\` in enum \\`${enumName}\\`.`,\n  EnumStringMemberInconsistentlyInitailized: ({\n    enumName\n  }) => `String enum members need to consistently either all use initializers, or use no initializers, in enum \\`${enumName}\\`.`,\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` or `typeof` keyword.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: Object.assign({\n    message: \"A binding pattern parameter cannot be optional in an implementation signature.\"\n  }, {\n    reasonCode: \"OptionalBindingPattern\"\n  }),\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: ({\n    reservedType\n  }) => `Unexpected reserved type ${reservedType}.`,\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: ({\n    unsupportedExportKind,\n    suggestion\n  }) => `\\`declare export ${unsupportedExportKind}\\` is not supported. Use \\`${suggestion}\\` instead.`,\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n});\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\nfunction isMaybeDefaultImport(type) {\n  return tokenIsKeywordOrIdentifier(type) && type !== 97;\n}\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class FlowParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n  finishToken(type, val) {\n    if (type !== 131 && type !== 13 && type !== 28) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n    return super.finishToken(type, val);\n  }\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n    return super.addComment(comment);\n  }\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloLoc = this.state.startLoc;\n    this.next();\n    this.expectContextual(108);\n    if (this.state.lastTokStart > moduloLoc.index + 1) {\n      this.raise(FlowErrors.UnexpectedSpaceBetweenModuloChecks, {\n        at: moduloLoc\n      });\n    }\n    if (this.eat(10)) {\n      node.value = super.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n    if (this.match(54)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n      if (this.match(54)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n    return [type, predicate];\n  }\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n    if (this.match(47)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.loc.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n  flowParseDeclare(node, insideModule) {\n    if (this.match(80)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(68)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(74)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(125)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(FlowErrors.NestedDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(128)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(129)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(127)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(82)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.loc.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n    if (this.match(131)) {\n      node.id = super.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n      if (this.match(83)) {\n        this.next();\n        if (!this.isContextual(128) && !this.match(87)) {\n          this.raise(FlowErrors.InvalidNonTypeImportInDeclareModule, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        super.parseImport(bodyNode);\n      } else {\n        this.expectContextual(123, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n      body.push(bodyNode);\n    }\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(FlowErrors.DuplicateDeclareModuleExports, {\n            at: bodyElement\n          });\n        }\n        if (kind === \"ES\") {\n          this.raise(FlowErrors.AmbiguousDeclareModuleKind, {\n            at: bodyElement\n          });\n        }\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(82);\n    if (this.eat(65)) {\n      if (this.match(68) || this.match(80)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(75) || this.isLet() || (this.isContextual(128) || this.isContextual(127)) && !insideModule) {\n        const label = this.state.value;\n        throw this.raise(FlowErrors.UnsupportedDeclareExportKind, {\n          at: this.state.startLoc,\n          unsupportedExportKind: label,\n          suggestion: exportSuggestions[label]\n        });\n      }\n      if (this.match(74) || this.match(68) || this.match(80) || this.isContextual(129)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(55) || this.match(5) || this.isContextual(127) || this.isContextual(128) || this.isContextual(129)) {\n        node = this.parseExport(node, null);\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n    throw this.unexpected();\n  }\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(109);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    const finished = this.flowParseTypeAlias(node);\n    finished.type = \"DeclareTypeAlias\";\n    return finished;\n  }\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    const finished = this.flowParseOpaqueType(node, true);\n    finished.type = \"DeclareOpaqueType\";\n    return finished;\n  }\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n    if (this.isContextual(115)) {\n      this.next();\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n    if (this.isContextual(111)) {\n      this.next();\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(FlowErrors.UnexpectedReservedUnderscore, {\n        at: this.state.startLoc\n      });\n    }\n  }\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, {\n      at: startLoc,\n      reservedType: word\n    });\n  }\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.startLoc, declaration);\n    return this.parseIdentifier(liberal);\n  }\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.right = this.flowParseTypeInitialiser(29);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(128);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.loc.start);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n    node.supertype = null;\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n    node.impltype = null;\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(29);\n    }\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStartLoc = this.state.startLoc;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n    if (this.match(29)) {\n      this.eat(29);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(FlowErrors.MissingTypeParamDefault, {\n          at: nodeStartLoc\n        });\n      }\n    }\n    return this.finishNode(node, \"TypeParameter\");\n  }\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n    if (this.match(47) || this.match(140)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    let defaultRequired = false;\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    } while (!this.match(48));\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n    while (!this.match(48)) {\n      node.params.push(this.flowParseType());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(47);\n    while (!this.match(48)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n      if (!this.match(48)) {\n        this.expect(12);\n      }\n    }\n    this.expect(48);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(127);\n    node.extends = [];\n    if (this.eat(81)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n  flowParseObjectPropertyKey() {\n    return this.match(132) || this.match(131) ? super.parseExprAtom() : this.parseIdentifier(true);\n  }\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n    if (this.match(47) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n    } else {\n      node.method = false;\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n      node.value = this.flowParseTypeInitialiser();\n    }\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    this.expect(10);\n    if (this.match(78)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n    nodeStart.exact = exact;\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStartLoc = null;\n      let inexactStartLoc = null;\n      const node = this.startNode();\n      if (allowProto && this.isContextual(116)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStartLoc = this.state.startLoc;\n          allowStatic = false;\n        }\n      }\n      if (allowStatic && this.isContextual(104)) {\n        const lookahead = this.lookahead();\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n      const variance = this.flowParseVariance();\n      if (this.eat(0)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.loc.start);\n          }\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(47)) {\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n        if (this.isContextual(98) || this.isContextual(103)) {\n          const lookahead = this.lookahead();\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStartLoc = this.state.lastTokStartLoc;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n      this.flowObjectTypeSemicolon();\n      if (inexactStartLoc && !this.match(8) && !this.match(9)) {\n        this.raise(FlowErrors.UnexpectedExplicitInexactInObject, {\n          at: inexactStartLoc\n        });\n      }\n    }\n    this.expect(endDelim);\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n  flowParseObjectTypeProperty(node, isStatic, protoStartLoc, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(FlowErrors.InexactInsideNonObject, {\n            at: this.state.lastTokStartLoc\n          });\n        } else if (!allowInexact) {\n          this.raise(FlowErrors.InexactInsideExact, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        if (variance) {\n          this.raise(FlowErrors.InexactVariance, {\n            at: variance\n          });\n        }\n        return null;\n      }\n      if (!allowSpread) {\n        this.raise(FlowErrors.UnexpectedSpreadType, {\n          at: this.state.lastTokStartLoc\n        });\n      }\n      if (protoStartLoc != null) {\n        this.unexpected(protoStartLoc);\n      }\n      if (variance) {\n        this.raise(FlowErrors.SpreadVariance, {\n          at: variance\n        });\n      }\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStartLoc != null;\n      node.kind = kind;\n      let optional = false;\n      if (this.match(47) || this.match(10)) {\n        node.method = true;\n        if (protoStartLoc != null) {\n          this.unexpected(protoStartLoc);\n        }\n        if (variance) {\n          this.unexpected(variance.loc.start);\n        }\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.loc.start));\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(FlowErrors.ThisParamBannedInConstructor, {\n            at: node.value.this\n          });\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n        if (this.eat(17)) {\n          optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n    if (property.value.this) {\n      this.raise(property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam, {\n        at: property.value.this\n      });\n    }\n    if (length !== paramCount) {\n      this.raise(property.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: property\n      });\n    }\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: property\n      });\n    }\n  }\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n  flowParseQualifiedTypeIdentifier(startLoc, id) {\n    var _startLoc;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n    return node;\n  }\n  flowParseGenericType(startLoc, id) {\n    const node = this.startNodeAt(startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startLoc, id);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(87);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 78;\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node\n        });\n      }\n      name = this.parseIdentifier(isThis);\n      if (this.eat(17)) {\n        optional = true;\n        if (isThis) {\n          this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n            at: node\n          });\n        }\n      }\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n    if (this.match(78)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n  flowIdentToTypeAnnotation(startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startLoc, id);\n    }\n  }\n  flowParsePrimaryType() {\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n      case 47:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 10:\n        this.next();\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      case 131:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n      case 85:\n      case 86:\n        node.value = this.match(85);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n      case 53:\n        if (this.state.value === \"-\") {\n          this.next();\n          if (this.match(132)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n          if (this.match(133)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n          throw this.raise(FlowErrors.UnexpectedSubtractionOperand, {\n            at: this.state.startLoc\n          });\n        }\n        throw this.unexpected();\n      case 132:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n      case 133:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n      case 88:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n      case 84:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n      case 78:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n      case 55:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n      case 87:\n        return this.flowParseTypeofType();\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(127)) {\n            return this.flowParseInterfaceType();\n          }\n          return this.flowIdentToTypeAnnotation(startLoc, node, this.parseIdentifier());\n        }\n    }\n    throw this.unexpected();\n  }\n  flowParsePostfixType() {\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n    return type;\n  }\n  flowParsePrefixType() {\n    const node = this.startNode();\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n    return param;\n  }\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(45);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n    while (this.eat(45)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(43);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n    while (this.eat(43)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 130 && this.state.value === \"_\") {\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n    return ident;\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  flowParseVariance() {\n    let variance = null;\n    if (this.match(53)) {\n      variance = this.startNode();\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n      this.next();\n      return this.finishNode(variance, \"Variance\");\n    }\n    return variance;\n  }\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  parseStatementLike(flags) {\n    if (this.state.strict && this.isContextual(127)) {\n      const lookahead = this.lookahead();\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(124)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    const stmt = super.parseStatementLike(flags);\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n    return stmt;\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(80) || tokenIsIdentifier(this.state.type) || this.match(68) || this.match(74) || this.match(82)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n    return super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 124) {\n      return !this.state.containsEsc;\n    }\n    return super.shouldParseExportDeclaration();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 124) {\n      return this.state.containsEsc;\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(124)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n      if (failed && valid.length > 1) {\n        this.raise(FlowErrors.AmbiguousConditionalArrow, {\n          at: state.startLoc\n        });\n      }\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n    while (stack.length !== 0) {\n      const node = stack.pop();\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n  finishArrowValidation(node) {\n    var _node$extra;\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingCommaLoc, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n    return result;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n    return node;\n  }\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n    super.assertModuleNodeAllowed(node);\n  }\n  parseExport(node, decorators) {\n    const decl = super.parseExport(node, decorators);\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n    return decl;\n  }\n  parseExportDeclaration(node) {\n    if (this.isContextual(128)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        super.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(129)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(127)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(124)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n  eatExportStar(node) {\n    if (super.eatExportStar(node)) return true;\n    if (this.isContextual(128) && this.lookahead().type === 55) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    const {\n      startLoc\n    } = this.state;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(startLoc);\n    }\n    return hasNamespace;\n  }\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n    if (this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n  parseClassMember(classBody, member, state) {\n    const {\n      startLoc\n    } = this.state;\n    if (this.isContextual(123)) {\n      if (super.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      member.declare = true;\n    }\n    super.parseClassMember(classBody, member, state);\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(FlowErrors.DeclareClassElement, {\n          at: startLoc\n        });\n      } else if (member.value) {\n        this.raise(FlowErrors.DeclareClassFieldInitializer, {\n          at: member.value\n        });\n      }\n    }\n  }\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(Errors.InvalidIdentifier, {\n        at: this.state.curPosition(),\n        identifierName: fullWord\n      });\n    }\n    this.finishToken(130, fullWord);\n  }\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 123 && next === 124) {\n      return this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(code === 62 ? 48 : 47, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(18, 2);\n      }\n      return this.finishOp(17, 1);\n    } else if (isIteratorStart(code, next, this.input.charCodeAt(this.state.pos + 2))) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    if (!isLHS && node.type === \"AssignmentExpression\" && node.left.type === \"TypeCastExpression\") {\n      node.left = this.typeCastToParameter(node.left);\n    }\n    super.toAssignable(node, isLHS);\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n      const expr = exprList[i];\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(FlowErrors.TypeCastInPattern, {\n          at: expr.typeAnnotation\n        });\n      }\n    }\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n    return node;\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"TypeCastExpression\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n    return super.parseClassPrivateProperty(node);\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n    if (method.params && isConstructor) {\n      const params = method.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(FlowErrors.ThisParamBannedInConstructor, {\n          at: method\n        });\n      }\n    }\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.loc.start);\n    }\n    delete method.variance;\n    if (this.match(47)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && this.match(47)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n    if (this.isContextual(111)) {\n      this.next();\n      const implemented = node.implements = [];\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n        if (this.match(47)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length > 0) {\n      const param = params[0];\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(FlowErrors.GetterMayNotHaveThisParam, {\n          at: param\n        });\n      } else if (this.isThisParam(param)) {\n        this.raise(FlowErrors.SetterMayNotHaveThisParam, {\n          at: param\n        });\n      }\n    }\n  }\n  parsePropertyNamePrefixOperator(node) {\n    node.variance = this.flowParseVariance();\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.loc.start);\n    }\n    delete prop.variance;\n    let typeParameters;\n    if (this.match(47) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n    const result = super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    if (typeParameters) {\n      (result.value || result).typeParameters = typeParameters;\n    }\n    return result;\n  }\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(FlowErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n      if (this.isThisParam(param)) {\n        this.raise(FlowErrors.ThisParamMayNotBeOptional, {\n          at: param\n        });\n      }\n      param.optional = true;\n    }\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamAnnotationRequired, {\n        at: param\n      });\n    }\n    if (this.match(29) && this.isThisParam(param)) {\n      this.raise(FlowErrors.ThisParamNoDefault, {\n        at: param\n      });\n    }\n    this.resetEndLocation(param);\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(FlowErrors.TypeBeforeInitializer, {\n        at: node.typeAnnotation\n      });\n    }\n    return node;\n  }\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n    return isMaybeDefaultImport(this.state.type);\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(FlowErrors.ImportReflectionHasImportType, {\n        at: node.specifiers[0].loc.start\n      });\n    }\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n    if (this.match(87)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(128)) {\n      kind = \"type\";\n    }\n    if (kind) {\n      const lh = this.lookahead();\n      const {\n        type\n      } = lh;\n      if (kind === \"type\" && type === 55) {\n        this.unexpected(null, lh.type);\n      }\n      if (isMaybeDefaultImport(type) || type === 5 || type === 55) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n    let isBinding = false;\n    if (this.isContextual(93) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(Errors.ImportBindingIsString, {\n            at: specifier,\n            importName: firstIdent.value\n          });\n        }\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n      if (this.eatContextual(93)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(FlowErrors.ImportTypeShorthandOnlyInPureImport, {\n        at: specifier\n      });\n    }\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.loc.start, true);\n    }\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.loc.start, true, true);\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n  parseFunctionParams(node, isConstructor) {\n    const kind = node.kind;\n    if (kind !== \"get\" && kind !== \"set\" && this.match(47)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n    super.parseFunctionParams(node, isConstructor);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n    let state = null;\n    let jsx;\n    if (this.hasPlugin(\"jsx\") && (this.match(140) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n    if ((_jsx = jsx) != null && _jsx.error || this.match(47)) {\n      var _jsx2, _jsx3;\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction, {\n              at: typeParameters\n            });\n          }\n          return arrow.node;\n        }\n        arrowExpression = arrow.node;\n      }\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(FlowErrors.UnexpectedTokenAfterTypeParameter, {\n        at: typeParameters\n      });\n    }\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n    return super.parseArrow(node);\n  }\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(FlowErrors.ThisParamMustBeFirst, {\n          at: node.params[i]\n        });\n      }\n    }\n    return super.checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged);\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startLoc.index) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.arguments = super.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(47)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n      throw arrow.error || result.error;\n    }\n    return super.parseSubscripts(base, startLoc, noCalls);\n  }\n  parseSubscript(base, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n      this.next();\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(47)) {\n      const node = this.startNodeAt(startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = super.parseCallExpressionArguments(11, false);\n        if (subscriptState.optionalChainMember) {\n          node.optional = false;\n        }\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, subscriptState);\n  }\n  parseNewCallee(node) {\n    super.parseNewCallee(node);\n    let targs = null;\n    if (this.shouldParseTypes() && this.match(47)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n    node.typeArguments = targs;\n  }\n  parseAsyncArrowWithTypeParameters(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.parseFunctionParams(node, false);\n    if (!this.parseArrow(node)) return;\n    return super.parseArrowExpression(node, undefined, true);\n  }\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n    super.readToken_mult_modulo(code);\n  }\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n    super.readToken_pipe_amp(code);\n  }\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n    if (this.state.hasFlowComment) {\n      this.raise(FlowErrors.UnterminatedFlowComment, {\n        at: this.state.curPosition()\n      });\n    }\n    return fileNode;\n  }\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        throw this.raise(FlowErrors.NestedFlowComment, {\n          at: this.state.startLoc\n        });\n      }\n      this.hasFlowCommentCompletion();\n      const commentSkip = this.skipFlowComment();\n      if (commentSkip) {\n        this.state.pos += commentSkip;\n        this.state.hasFlowComment = true;\n      }\n      return;\n    }\n    return super.skipBlockComment(this.state.hasFlowComment ? \"*-/\" : \"*/\");\n  }\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n    return false;\n  }\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n    if (end === -1) {\n      throw this.raise(Errors.UnterminatedComment, {\n        at: this.state.curPosition()\n      });\n    }\n  }\n  flowEnumErrorBooleanMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumBooleanMemberNotInitialized, {\n      at: loc,\n      memberName,\n      enumName\n    });\n  }\n  flowEnumErrorInvalidMemberInitializer(loc, enumContext) {\n    return this.raise(!enumContext.explicitType ? FlowErrors.EnumInvalidMemberInitializerUnknownType : enumContext.explicitType === \"symbol\" ? FlowErrors.EnumInvalidMemberInitializerSymbolType : FlowErrors.EnumInvalidMemberInitializerPrimaryType, Object.assign({\n      at: loc\n    }, enumContext));\n  }\n  flowEnumErrorNumberMemberNotInitialized(loc, {\n    enumName,\n    memberName\n  }) {\n    this.raise(FlowErrors.EnumNumberMemberNotInitialized, {\n      at: loc,\n      enumName,\n      memberName\n    });\n  }\n  flowEnumErrorStringMemberInconsistentlyInitailized(node, {\n    enumName\n  }) {\n    this.raise(FlowErrors.EnumStringMemberInconsistentlyInitailized, {\n      at: node,\n      enumName\n    });\n  }\n  flowEnumMemberInit() {\n    const startLoc = this.state.startLoc;\n    const endOfInit = () => this.match(12) || this.match(8);\n    switch (this.state.type) {\n      case 132:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 131:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      case 85:\n      case 86:\n        {\n          const literal = this.parseBooleanLiteral(this.match(85));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              loc: literal.loc.start,\n              value: literal\n            };\n          }\n          return {\n            type: \"invalid\",\n            loc: startLoc\n          };\n        }\n      default:\n        return {\n          type: \"invalid\",\n          loc: startLoc\n        };\n    }\n  }\n  flowEnumMemberRaw() {\n    const loc = this.state.startLoc;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(29) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      loc\n    };\n    return {\n      id,\n      init\n    };\n  }\n  flowEnumCheckExplicitTypeMismatch(loc, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n    if (explicitType === null) {\n      return;\n    }\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(loc, context);\n    }\n  }\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n      if (memberName === \"\") {\n        continue;\n      }\n      if (/^[a-z]/.test(memberName)) {\n        this.raise(FlowErrors.EnumInvalidMemberName, {\n          at: id,\n          memberName,\n          suggestion: memberName[0].toUpperCase() + memberName.slice(1),\n          enumName\n        });\n      }\n      if (seenNames.has(memberName)) {\n        this.raise(FlowErrors.EnumDuplicateMemberName, {\n          at: id,\n          memberName,\n          enumName\n        });\n      }\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.loc, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.loc, context);\n          }\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.loc, context);\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.loc, context);\n                break;\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n          enumName\n        });\n      }\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member, {\n          enumName\n        });\n      }\n      return initializedMembers;\n    }\n  }\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (!this.eatContextual(101)) return null;\n    if (!tokenIsIdentifier(this.state.type)) {\n      throw this.raise(FlowErrors.EnumInvalidExplicitTypeUnknownSupplied, {\n        at: this.state.startLoc,\n        enumName\n      });\n    }\n    const {\n      value\n    } = this.state;\n    this.next();\n    if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n      this.raise(FlowErrors.EnumInvalidExplicitType, {\n        at: this.state.startLoc,\n        enumName,\n        invalidEnumType: value\n      });\n    }\n    return value;\n  }\n  flowEnumBody(node, id) {\n    const enumName = id.name;\n    const nameLoc = id.loc.start;\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.loc.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.raise(FlowErrors.EnumInconsistentMemberValues, {\n              at: nameLoc,\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), id);\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n    return false;\n  }\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n});\n\nconst entities = {\n  __proto__: null,\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst JsxErrors = ParseErrorEnum`jsx`({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: ({\n    openingTagName\n  }) => `Expected corresponding JSX closing tag for <${openingTagName}>.`,\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnexpectedToken: ({\n    unexpected,\n    HTMLEntity\n  }) => `Unexpected token \\`${unexpected}\\`. Did you mean \\`${HTMLEntity}\\` or \\`{'${unexpected}'}\\`?`,\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\nvar jsx = (superClass => class JSXParserMixin extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(JsxErrors.UnterminatedJsxContent, {\n          at: this.state.startLoc\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              return this.finishToken(140);\n            }\n            return super.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(139, out);\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n        case 62:\n        case 125:\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n      }\n    }\n  }\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(Errors.UnterminatedString, {\n          at: this.state.startLoc\n        });\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(131, out);\n  }\n  jsxReadEntity() {\n    const startPos = ++this.state.pos;\n    if (this.codePointAtPos(this.state.pos) === 35) {\n      ++this.state.pos;\n      let radix = 10;\n      if (this.codePointAtPos(this.state.pos) === 120) {\n        radix = 16;\n        ++this.state.pos;\n      }\n      const codePoint = this.readInt(radix, undefined, false, \"bail\");\n      if (codePoint !== null && this.codePointAtPos(this.state.pos) === 59) {\n        ++this.state.pos;\n        return String.fromCodePoint(codePoint);\n      }\n    } else {\n      let count = 0;\n      let semi = false;\n      while (count++ < 10 && this.state.pos < this.length && !(semi = this.codePointAtPos(this.state.pos) == 59)) {\n        ++this.state.pos;\n      }\n      if (semi) {\n        const desc = this.input.slice(startPos, this.state.pos);\n        const entity = entities[desc];\n        ++this.state.pos;\n        if (entity) {\n          return entity;\n        }\n      }\n    }\n    this.state.pos = startPos;\n    return \"&\";\n  }\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n    return this.finishToken(138, this.input.slice(start, this.state.pos));\n  }\n  jsxParseIdentifier() {\n    const node = this.startNode();\n    if (this.match(138)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n  jsxParseNamespacedName() {\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n  jsxParseElementName() {\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n    return node;\n  }\n  jsxParseAttributeValue() {\n    let node;\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.setContext(types.brace);\n        this.next();\n        node = this.jsxParseExpressionContainer(node, types.j_oTag);\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(JsxErrors.AttributeIsEmpty, {\n            at: node\n          });\n        }\n        return node;\n      case 140:\n      case 131:\n        return this.parseExprAtom();\n      default:\n        throw this.raise(JsxErrors.UnsupportedJsxValue, {\n          at: this.state.startLoc\n        });\n    }\n  }\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.startLoc);\n  }\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.setContext(types.j_expr);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n  jsxParseExpressionContainer(node, previousContext) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n    this.setContext(previousContext);\n    this.state.canStartJSXElement = true;\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n  jsxParseAttribute() {\n    const node = this.startNode();\n    if (this.match(5)) {\n      this.setContext(types.brace);\n      this.next();\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.setContext(types.j_oTag);\n      this.state.canStartJSXElement = true;\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n  jsxParseOpeningElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(141)) {\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n    while (!this.match(56) && !this.match(141)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n    node.attributes = attributes;\n    node.selfClosing = this.eat(56);\n    this.expect(141);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n  jsxParseClosingElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    if (this.eat(141)) {\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n    node.name = this.jsxParseElementName();\n    this.expect(141);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n  jsxParseElementAt(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startLoc);\n    let closingElement = null;\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 140:\n            startLoc = this.state.startLoc;\n            this.next();\n            if (this.eat(56)) {\n              closingElement = this.jsxParseClosingElementAt(startLoc);\n              break contents;\n            }\n            children.push(this.jsxParseElementAt(startLoc));\n            break;\n          case 139:\n            children.push(this.parseExprAtom());\n            break;\n          case 5:\n            {\n              const node = this.startNode();\n              this.setContext(types.brace);\n              this.next();\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node, types.j_expr));\n              }\n              break;\n            }\n          default:\n            throw this.unexpected();\n        }\n      }\n      if (isFragment(openingElement) && !isFragment(closingElement) && closingElement !== null) {\n        this.raise(JsxErrors.MissingClosingTagFragment, {\n          at: closingElement\n        });\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(JsxErrors.MissingClosingTagElement, {\n          at: closingElement,\n          openingTagName: getQualifiedJSXName(openingElement.name)\n        });\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(JsxErrors.MissingClosingTagElement, {\n            at: closingElement,\n            openingTagName: getQualifiedJSXName(openingElement.name)\n          });\n        }\n      }\n    }\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n    node.children = children;\n    if (this.match(47)) {\n      throw this.raise(JsxErrors.UnwrappedAdjacentJSXElements, {\n        at: this.state.startLoc\n      });\n    }\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n  jsxParseElement() {\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startLoc);\n  }\n  setContext(newContext) {\n    const {\n      context\n    } = this.state;\n    context[context.length - 1] = newContext;\n  }\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(139)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(140)) {\n      return this.jsxParseElement();\n    } else if (this.match(47) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(140);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n  skipSpace() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) super.skipSpace();\n  }\n  getTokenFromCode(code) {\n    const context = this.curContext();\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(141);\n      }\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(140);\n    }\n    return super.getTokenFromCode(code);\n  }\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n    if (type === 56 && prevType === 140) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 140) {\n      context.push(types.j_oTag);\n    } else if (type === 141) {\n      const out = context[context.length - 1];\n      if (out === types.j_oTag && prevType === 56 || out === types.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n      } else {\n        this.setContext(types.j_expr);\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n}\nclass TypeScriptScopeHandler extends ScopeHandler {\n  constructor(...args) {\n    super(...args);\n    this.importsStack = [];\n  }\n  createScope(flags) {\n    this.importsStack.push(new Set());\n    return new TypeScriptScope(flags);\n  }\n  enter(flags) {\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.push(new Set());\n    }\n    super.enter(flags);\n  }\n  exit() {\n    const flags = super.exit();\n    if (flags == SCOPE_TS_MODULE) {\n      this.importsStack.pop();\n    }\n    return flags;\n  }\n  hasImport(name, allowShadow) {\n    const len = this.importsStack.length;\n    if (this.importsStack[len - 1].has(name)) {\n      return true;\n    }\n    if (!allowShadow && len > 1) {\n      for (let i = 0; i < len - 1; i++) {\n        if (this.importsStack[i].has(name)) return true;\n      }\n    }\n    return false;\n  }\n  declareName(name, bindingType, loc) {\n    if (bindingType & BIND_FLAGS_TS_IMPORT) {\n      if (this.hasImport(name, true)) {\n        this.parser.raise(Errors.VarRedeclaration, {\n          at: loc,\n          identifierName: name\n        });\n      }\n      this.importsStack[this.importsStack.length - 1].add(name);\n      return;\n    }\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n    super.declareName(name, bindingType, loc);\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, loc);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n    return super.isRedeclaredInScope(scope, name, bindingType);\n  }\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    if (this.hasImport(name)) return;\n    const len = this.scopeStack.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const scope = this.scopeStack[i];\n      if (scope.types.has(name) || scope.exportOnlyBindings.has(name)) return;\n    }\n    super.checkLocalExport(id);\n  }\n}\n\nconst getOwn$1 = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\nvar ParseBindingListFlags = {\n  ALLOW_EMPTY: 1,\n  IS_FUNCTION_PARAMS: 2,\n  IS_CONSTRUCTOR_PARAMS: 4\n};\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordArrowParameterBindingError(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(Errors.InvalidParenthesizedAssignment, {\n            at: node\n          });\n        }\n      } else {\n        this.raise(Errors.InvalidParenthesizedAssignment, {\n          at: node\n        });\n      }\n    }\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingCommaLoc) {\n            this.raise(Errors.RestTrailingComma, {\n              at: node.extra.trailingCommaLoc\n            });\n          }\n        }\n        break;\n      case \"ObjectProperty\":\n        {\n          const {\n            key,\n            value\n          } = node;\n          if (this.isPrivateName(key)) {\n            this.classScope.usePrivateName(this.getPrivateNameSV(key), key.loc.start);\n          }\n          this.toAssignable(value, isLHS);\n          break;\n        }\n      case \"SpreadElement\":\n        {\n          throw new Error(\"Internal @babel/parser error (this is a bug, please report it).\" + \" SpreadElement should be converted by .toAssignable's caller.\");\n        }\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingCommaLoc, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(Errors.MissingEqInAssignment, {\n            at: node.left.loc.end\n          });\n        }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n  }\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      this.raise(prop.kind === \"get\" || prop.kind === \"set\" ? Errors.PatternHasAccessor : Errors.PatternHasMethod, {\n        at: prop.key\n      });\n    } else if (prop.type === \"SpreadElement\") {\n      prop.type = \"RestElement\";\n      const arg = prop.argument;\n      this.checkToRestConversion(arg, false);\n      this.toAssignable(arg, isLHS);\n      if (!isLast) {\n        this.raise(Errors.RestTrailingComma, {\n          at: prop\n        });\n      }\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    const end = exprList.length - 1;\n    for (let i = 0; i <= end; i++) {\n      const elt = exprList[i];\n      if (!elt) continue;\n      if (elt.type === \"SpreadElement\") {\n        elt.type = \"RestElement\";\n        const arg = elt.argument;\n        this.checkToRestConversion(arg, true);\n        this.toAssignable(arg, isLHS);\n      } else {\n        this.toAssignable(elt, isLHS);\n      }\n      if (elt.type === \"RestElement\") {\n        if (i < end) {\n          this.raise(Errors.RestTrailingComma, {\n            at: elt\n          });\n        } else if (trailingCommaLoc) {\n          this.raise(Errors.RestTrailingComma, {\n            at: trailingCommaLoc\n          });\n        }\n      }\n    }\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n      default:\n        return false;\n    }\n  }\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n  parseSpread(refExpressionErrors) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, ParseBindingListFlags.ALLOW_EMPTY);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n    return this.parseIdentifier();\n  }\n  parseBindingList(close, closeCharCode, flags) {\n    const allowEmpty = flags & ParseBindingListFlags.ALLOW_EMPTY;\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding(), flags));\n        if (!this.checkCommaAfterRest(closeCharCode)) {\n          this.expect(close);\n          break;\n        }\n      } else {\n        const decorators = [];\n        if (this.match(26) && this.hasPlugin(\"decorators\")) {\n          this.raise(Errors.UnsupportedParameterDecorator, {\n            at: this.state.startLoc\n          });\n        }\n        while (this.match(26)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(flags, decorators));\n      }\n    }\n    return elts;\n  }\n  parseBindingRestProperty(prop) {\n    this.next();\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(125);\n    return this.finishNode(prop, \"RestElement\");\n  }\n  parseBindingProperty() {\n    const prop = this.startNode();\n    const {\n      type,\n      startLoc\n    } = this.state;\n    if (type === 21) {\n      return this.parseBindingRestProperty(prop);\n    } else if (type === 136) {\n      this.expectPlugin(\"destructuringPrivate\", startLoc);\n      this.classScope.usePrivateName(this.state.value, startLoc);\n      prop.key = this.parsePrivateName();\n    } else {\n      this.parsePropertyName(prop);\n    }\n    prop.method = false;\n    return this.parseObjPropValue(prop, startLoc, false, false, true, false);\n  }\n  parseAssignableListItem(flags, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  parseAssignableListItemTypes(param, flags) {\n    return param;\n  }\n  parseMaybeDefault(startLoc, left) {\n    var _startLoc, _left;\n    (_startLoc = startLoc) != null ? _startLoc : startLoc = this.state.startLoc;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(29)) return left;\n    const node = this.startNodeAt(startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn$1({\n      AssignmentPattern: \"left\",\n      RestElement: \"argument\",\n      ObjectProperty: \"value\",\n      ParenthesizedExpression: \"expression\",\n      ArrayPattern: \"elements\",\n      ObjectPattern: \"properties\"\n    }, type);\n  }\n  checkLVal(expression, {\n    in: ancestor,\n    binding = BIND_NONE,\n    checkClashes = false,\n    strictModeChanged = false,\n    hasParenthesizedAncestor = false\n  }) {\n    var _expression$extra;\n    const type = expression.type;\n    if (this.isObjectMethod(expression)) return;\n    if (type === \"MemberExpression\") {\n      if (binding !== BIND_NONE) {\n        this.raise(Errors.InvalidPropertyBindingPattern, {\n          at: expression\n        });\n      }\n      return;\n    }\n    if (type === \"Identifier\") {\n      this.checkIdentifier(expression, binding, strictModeChanged);\n      const {\n        name\n      } = expression;\n      if (checkClashes) {\n        if (checkClashes.has(name)) {\n          this.raise(Errors.ParamDupe, {\n            at: expression\n          });\n        } else {\n          checkClashes.add(name);\n        }\n      }\n      return;\n    }\n    const validity = this.isValidLVal(type, !(hasParenthesizedAncestor || (_expression$extra = expression.extra) != null && _expression$extra.parenthesized) && ancestor.type === \"AssignmentExpression\", binding);\n    if (validity === true) return;\n    if (validity === false) {\n      const ParseErrorClass = binding === BIND_NONE ? Errors.InvalidLhs : Errors.InvalidLhsBinding;\n      this.raise(ParseErrorClass, {\n        at: expression,\n        ancestor\n      });\n      return;\n    }\n    const [key, isParenthesizedExpression] = Array.isArray(validity) ? validity : [validity, type === \"ParenthesizedExpression\"];\n    const nextAncestor = type === \"ArrayPattern\" || type === \"ObjectPattern\" || type === \"ParenthesizedExpression\" ? {\n      type\n    } : ancestor;\n    for (const child of [].concat(expression[key])) {\n      if (child) {\n        this.checkLVal(child, {\n          in: nextAncestor,\n          binding,\n          checkClashes,\n          strictModeChanged,\n          hasParenthesizedAncestor: isParenthesizedExpression\n        });\n      }\n    }\n  }\n  checkIdentifier(at, bindingType, strictModeChanged = false) {\n    if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(at.name, this.inModule) : isStrictBindOnlyReservedWord(at.name))) {\n      if (bindingType === BIND_NONE) {\n        this.raise(Errors.StrictEvalArguments, {\n          at,\n          referenceName: at.name\n        });\n      } else {\n        this.raise(Errors.StrictEvalArgumentsBinding, {\n          at,\n          bindingName: at.name\n        });\n      }\n    }\n    if (bindingType & BIND_FLAGS_NO_LET_IN_LEXICAL && at.name === \"let\") {\n      this.raise(Errors.LetInLexicalBinding, {\n        at\n      });\n    }\n    if (!(bindingType & BIND_NONE)) {\n      this.declareNameFromIdentifier(at, bindingType);\n    }\n  }\n  declareNameFromIdentifier(identifier, binding) {\n    this.scope.declareName(identifier.name, binding, identifier.loc.start);\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.checkToRestConversion(node.expression, allowPattern);\n        break;\n      case \"Identifier\":\n      case \"MemberExpression\":\n        break;\n      case \"ArrayExpression\":\n      case \"ObjectExpression\":\n        if (allowPattern) break;\n      default:\n        this.raise(Errors.InvalidRestAssignmentPattern, {\n          at: node\n        });\n    }\n  }\n  checkCommaAfterRest(close) {\n    if (!this.match(12)) {\n      return false;\n    }\n    this.raise(this.lookaheadCharCode() === close ? Errors.RestTrailingComma : Errors.ElementAfterRest, {\n      at: this.state.startLoc\n    });\n    return true;\n  }\n}\n\nconst getOwn = (object, key) => Object.hasOwnProperty.call(object, key) && object[key];\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\nconst TSErrors = ParseErrorEnum`typescript`({\n  AbstractMethodHasImplementation: ({\n    methodName\n  }) => `Method '${methodName}' cannot have an implementation because it is marked abstract.`,\n  AbstractPropertyHasInitializer: ({\n    propertyName\n  }) => `Property '${propertyName}' cannot have an initializer because it is marked abstract.`,\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  AccessorCannotBeOptional: \"An 'accessor' property cannot be declared optional.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference: \"A 'const' initializer in an ambient context must be a string or numeric literal or literal enum reference.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: ({\n    kind\n  }) => `'declare' is not allowed in ${kind}ters.`,\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: ({\n    modifier\n  }) => `Accessibility modifier already seen.`,\n  DuplicateModifier: ({\n    modifier\n  }) => `Duplicate modifier: '${modifier}'.`,\n  EmptyHeritageClauseType: ({\n    token\n  }) => `'${token}' list cannot be empty.`,\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  ImportReflectionHasImportType: \"An `import module` declaration can not use `type` modifier\",\n  IncompatibleModifiers: ({\n    modifiers\n  }) => `'${modifiers[0]}' modifier cannot be used with '${modifiers[1]}' modifier.`,\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: ({\n    modifier\n  }) => `Index signatures cannot have an accessibility modifier ('${modifier}').`,\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InitializerNotAllowedInAmbientContext: \"Initializers are not allowed in ambient contexts.\",\n  InvalidModifierOnTypeMember: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type member.`,\n  InvalidModifierOnTypeParameter: ({\n    modifier\n  }) => `'${modifier}' modifier cannot appear on a type parameter.`,\n  InvalidModifierOnTypeParameterPositions: ({\n    modifier\n  }) => `'${modifier}' modifier can only appear on a type parameter of a class, interface or type alias.`,\n  InvalidModifiersOrder: ({\n    orderedModifiers\n  }) => `'${orderedModifiers[0]}' modifier must precede '${orderedModifiers[1]}' modifier.`,\n  InvalidPropertyAccessAfterInstantiationExpression: \"Invalid property access after an instantiation expression. \" + \"You can either wrap the instantiation expression in parentheses, or delete the type arguments.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: ({\n    modifier\n  }) => `Private elements cannot have an accessibility modifier ('${modifier}').`,\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  SingleTypeParameterWithoutTrailingComma: ({\n    typeParameterName\n  }) => `Single type parameter ${typeParameterName} should have a trailing comma. Example usage: <${typeParameterName},>.`,\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: ({\n    type\n  }) => `Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got ${type}.`\n});\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\nfunction tsIsVarianceAnnotations(modifier) {\n  return modifier === \"in\" || modifier === \"out\";\n}\nvar typescript = (superClass => class TypeScriptParserMixin extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.tsParseInOutModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\"],\n      disallowedModifiers: [\"const\", \"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n    this.tsParseConstModifier = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"const\"],\n      disallowedModifiers: [\"in\", \"out\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    });\n    this.tsParseInOutConstModifiers = this.tsParseModifiers.bind(this, {\n      allowedModifiers: [\"in\", \"out\", \"const\"],\n      disallowedModifiers: [\"public\", \"private\", \"protected\", \"readonly\", \"declare\", \"abstract\", \"override\"],\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameter\n    });\n  }\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(55) || this.match(21) || this.match(136) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type) && this.state.type !== 58 && this.state.type !== 75) {\n      return undefined;\n    }\n    const modifier = this.state.value;\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n    return undefined;\n  }\n  tsParseModifiers({\n    allowedModifiers,\n    disallowedModifiers,\n    stopOnStartOfClassStaticBlock,\n    errorTemplate = TSErrors.InvalidModifierOnTypeMember\n  }, modified) {\n    const enforceOrder = (loc, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(TSErrors.InvalidModifiersOrder, {\n          at: loc,\n          orderedModifiers: [before, after]\n        });\n      }\n    };\n    const incompatible = (loc, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(TSErrors.IncompatibleModifiers, {\n          at: loc,\n          modifiers: [mod1, mod2]\n        });\n      }\n    };\n    for (;;) {\n      const {\n        startLoc\n      } = this.state;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(TSErrors.DuplicateAccessibilityModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, modifier, \"override\");\n          enforceOrder(startLoc, modifier, modifier, \"static\");\n          enforceOrder(startLoc, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else if (tsIsVarianceAnnotations(modifier)) {\n        if (modified[modifier]) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        }\n        modified[modifier] = true;\n        enforceOrder(startLoc, modifier, \"in\", \"out\");\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(TSErrors.DuplicateModifier, {\n            at: startLoc,\n            modifier\n          });\n        } else {\n          enforceOrder(startLoc, modifier, \"static\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"static\", \"override\");\n          enforceOrder(startLoc, modifier, \"override\", \"readonly\");\n          enforceOrder(startLoc, modifier, \"abstract\", \"override\");\n          incompatible(startLoc, modifier, \"declare\", \"override\");\n          incompatible(startLoc, modifier, \"static\", \"abstract\");\n        }\n        modified[modifier] = true;\n      }\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(errorTemplate, {\n          at: startLoc,\n          modifier\n        });\n      }\n    }\n  }\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n      case \"HeritageClauseElement\":\n        return this.match(5);\n      case \"TupleElementTypes\":\n        return this.match(3);\n      case \"TypeParametersOrArguments\":\n        return this.match(48);\n    }\n    throw new Error(\"Unreachable\");\n  }\n  tsParseList(kind, parseElement) {\n    const result = [];\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n    return result;\n  }\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      trailingCommaPos = -1;\n      const element = parseElement();\n      if (element == null) {\n        return undefined;\n      }\n      result.push(element);\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStart;\n        continue;\n      }\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n      if (expectSuccess) {\n        this.expect(12);\n      }\n      return undefined;\n    }\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n    return result;\n  }\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(47);\n      }\n    }\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(48);\n    }\n    return result;\n  }\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(83);\n    this.expect(10);\n    if (!this.match(131)) {\n      this.raise(TSErrors.UnsupportedImportTypeArgument, {\n        at: this.state.startLoc\n      });\n    }\n    node.argument = super.parseExprAtom();\n    this.expect(11);\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName();\n    }\n    if (this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSImportType\");\n  }\n  tsParseEntityName(allowReservedWords = true) {\n    let entity = this.parseIdentifier(allowReservedWords);\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n    return entity;\n  }\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName();\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(87);\n    if (this.match(83)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName();\n    }\n    if (!this.hasPrecedingLineBreak() && this.match(47)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n  tsParseTypeParameter(parseModifiers) {\n    const node = this.startNode();\n    parseModifiers(node);\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(81);\n    node.default = this.tsEatThenParseType(29);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsTryParseTypeParameters(parseModifiers) {\n    if (this.match(47)) {\n      return this.tsParseTypeParameters(parseModifiers);\n    }\n  }\n  tsParseTypeParameters(parseModifiers) {\n    const node = this.startNode();\n    if (this.match(47) || this.match(140)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this, parseModifiers), false, true, refTrailingCommaPos);\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeParameters, {\n        at: node\n      });\n    }\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    const paramsKey = \"parameters\";\n    const returnTypeKey = \"typeAnnotation\";\n    signature.typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    this.expect(10);\n    signature[paramsKey] = this.tsParseBindingListForSignature();\n    if (returnTokenRequired) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature[returnTypeKey] = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n  tsParseBindingListForSignature() {\n    return super.parseBindingList(11, 41, ParseBindingListFlags.IS_FUNCTION_PARAMS).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(TSErrors.UnsupportedSignatureParameterKind, {\n          at: pattern,\n          type: pattern.type\n        });\n      }\n      return pattern;\n    });\n  }\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n    return false;\n  }\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n    if (this.match(10) || this.match(47)) {\n      if (readonly) {\n        this.raise(TSErrors.ReadonlyForMethodSignature, {\n          at: node\n        });\n      }\n      const method = nodeAny;\n      if (method.kind && this.match(47)) {\n        this.raise(TSErrors.AccesorCannotHaveTypeParameters, {\n          at: this.state.curPosition()\n        });\n      }\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n      const paramsKey = \"parameters\";\n      const returnTypeKey = \"typeAnnotation\";\n      if (method.kind === \"get\") {\n        if (method[paramsKey].length > 0) {\n          this.raise(Errors.BadGetterArity, {\n            at: this.state.curPosition()\n          });\n          if (this.isThisParam(method[paramsKey][0])) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method[paramsKey].length !== 1) {\n          this.raise(Errors.BadSetterArity, {\n            at: this.state.curPosition()\n          });\n        } else {\n          const firstParameter = method[paramsKey][0];\n          if (this.isThisParam(firstParameter)) {\n            this.raise(TSErrors.AccesorCannotDeclareThisParameter, {\n              at: this.state.curPosition()\n            });\n          }\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(TSErrors.SetAccesorCannotHaveOptionalParameter, {\n              at: this.state.curPosition()\n            });\n          }\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(TSErrors.SetAccesorCannotHaveRestParameter, {\n              at: this.state.curPosition()\n            });\n          }\n        }\n        if (method[returnTypeKey]) {\n          this.raise(TSErrors.SetAccesorCannotHaveReturnType, {\n            at: method[returnTypeKey]\n          });\n        }\n      } else {\n        method.kind = \"method\";\n      }\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n  tsParseTypeMember() {\n    const node = this.startNode();\n    if (this.match(10) || this.match(47)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n    if (this.match(77)) {\n      const id = this.startNode();\n      this.next();\n      if (this.match(10) || this.match(47)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n    this.tsParseModifiers({\n      allowedModifiers: [\"readonly\"],\n      disallowedModifiers: [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"]\n    }, node);\n    const idx = this.tsTryParseIndexSignature(node);\n    if (idx) {\n      return idx;\n    }\n    super.parsePropertyName(node);\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      super.parsePropertyName(node);\n    }\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n  tsIsStartOfMappedType() {\n    this.next();\n    if (this.eat(53)) {\n      return this.isContextual(120);\n    }\n    if (this.isContextual(120)) {\n      this.next();\n    }\n    if (!this.match(0)) {\n      return false;\n    }\n    this.next();\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n    this.next();\n    return this.match(58);\n  }\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(58);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n    if (this.match(53)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(120);\n    } else if (this.eatContextual(120)) {\n      node.readonly = true;\n    }\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(93) ? this.tsParseType() : null;\n    this.expect(3);\n    if (this.match(53)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n      const {\n        type\n      } = elementNode;\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(TSErrors.OptionalTypeBeforeRequired, {\n          at: elementNode\n        });\n      }\n      seenOptionalElement || (seenOptionalElement = type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\");\n      let checkType = type;\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        checkType = elementNode.type;\n      }\n      const isLabeled = checkType === \"TSNamedTupleMember\";\n      (_labeledElements = labeledElements) != null ? _labeledElements : labeledElements = isLabeled;\n      if (labeledElements !== isLabeled) {\n        this.raise(TSErrors.MixedLabeledAndUnlabeledElements, {\n          at: elementNode\n        });\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n  tsParseTupleElementType() {\n    const {\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let type = this.tsParseType();\n    const optional = this.eat(17);\n    const labeled = this.eat(14);\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(TSErrors.InvalidTupleMemberLabel, {\n          at: type\n        });\n        labeledNode.label = type;\n      }\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n    if (rest) {\n      const restNode = this.startNodeAt(startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n    return type;\n  }\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n    this.tsInAllowConditionalTypesContext(() => this.tsFillSignature(19, node));\n    return this.finishNode(node, type);\n  }\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n    node.literal = (() => {\n      switch (this.state.type) {\n        case 132:\n        case 133:\n        case 131:\n        case 85:\n        case 86:\n          return super.parseExprAtom();\n        default:\n          throw this.unexpected();\n      }\n    })();\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = super.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n    if (this.isContextual(114) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 131:\n      case 132:\n      case 133:\n      case 85:\n      case 86:\n        return this.tsParseLiteralTypeNode();\n      case 53:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n          if (nextToken.type !== 132 && nextToken.type !== 133) {\n            throw this.unexpected();\n          }\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n        break;\n      case 78:\n        return this.tsParseThisTypeOrThisTypePredicate();\n      case 87:\n        return this.tsParseTypeQuery();\n      case 83:\n        return this.tsParseImportType();\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n      case 0:\n        return this.tsParseTupleType();\n      case 10:\n        return this.tsParseParenthesizedType();\n      case 25:\n      case 24:\n        return this.tsParseTemplateLiteralType();\n      default:\n        {\n          const {\n            type\n          } = this.state;\n          if (tokenIsIdentifier(type) || type === 88 || type === 84) {\n            const nodeType = type === 88 ? \"TSVoidKeyword\" : type === 84 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n    throw this.unexpected();\n  }\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n    return type;\n  }\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n      default:\n        this.raise(TSErrors.UnexpectedReadonly, {\n          at: node\n        });\n    }\n  }\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(113);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    typeParameter.constraint = this.tsTryParse(() => this.tsParseConstraintForInferType());\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n  tsParseConstraintForInferType() {\n    if (this.eat(81)) {\n      const constraint = this.tsInDisallowConditionalTypesContext(() => this.tsParseType());\n      if (this.state.inDisallowConditionalTypesContext || !this.match(17)) {\n        return constraint;\n      }\n    }\n  }\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(113) ? this.tsParseInferType() : this.tsInAllowConditionalTypesContext(() => this.tsParseArrayTypeOrHigher());\n  }\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 45);\n  }\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 43);\n  }\n  tsIsStartOfFunctionType() {\n    if (this.match(47)) {\n      return true;\n    }\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(78)) {\n      this.next();\n      return true;\n    }\n    if (this.match(5)) {\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        this.parseObjectLike(8, true);\n        return errors.length === previousErrorCount;\n      } catch (_unused) {\n        return false;\n      }\n    }\n    if (this.match(0)) {\n      this.next();\n      const {\n        errors\n      } = this.state;\n      const previousErrorCount = errors.length;\n      try {\n        super.parseBindingList(3, 93, ParseBindingListFlags.ALLOW_EMPTY);\n        return errors.length === previousErrorCount;\n      } catch (_unused2) {\n        return false;\n      }\n    }\n    return false;\n  }\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\n        return true;\n      }\n      if (this.match(11)) {\n        this.next();\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n      if (asserts && this.match(78)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\n  }\n  tsTryParseTypeAnnotation() {\n    return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\n  }\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n    if (this.isContextual(114) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 107) {\n      return false;\n    }\n    const containsEsc = this.state.containsEsc;\n    this.next();\n    if (!tokenIsIdentifier(this.state.type) && !this.match(78)) {\n      return false;\n    }\n    if (containsEsc) {\n      this.raise(Errors.InvalidEscapedReservedWord, {\n        at: this.state.lastTokStartLoc,\n        reservedWord: \"asserts\"\n      });\n    }\n    return true;\n  }\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n    if (this.state.inDisallowConditionalTypesContext || this.hasPrecedingLineBreak() || !this.eat(81)) {\n      return type;\n    }\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsInDisallowConditionalTypesContext(() => this.tsParseNonConditionalType());\n    this.expect(17);\n    node.trueType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    this.expect(14);\n    node.falseType = this.tsInAllowConditionalTypesContext(() => this.tsParseType());\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n  isAbstractConstructorSignature() {\n    return this.isContextual(122) && this.lookahead().type === 77;\n  }\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n    if (this.match(77)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n    return this.tsParseUnionTypeOrHigher();\n  }\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedTypeAssertion, {\n        at: this.state.startLoc\n      });\n    }\n    const node = this.startNode();\n    node.typeAnnotation = this.tsInType(() => {\n      this.next();\n      return this.match(75) ? this.tsParseTypeReference() : this.tsParseType();\n    });\n    this.expect(48);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n  tsParseHeritageClause(token) {\n    const originalStartLoc = this.state.startLoc;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", () => {\n      const node = this.startNode();\n      node.expression = this.tsParseEntityName();\n      if (this.match(47)) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    });\n    if (!delimitedList.length) {\n      this.raise(TSErrors.EmptyHeritageClauseType, {\n        at: originalStartLoc,\n        token\n      });\n    }\n    return delimitedList;\n  }\n  tsParseInterfaceDeclaration(node, properties = {}) {\n    if (this.hasFollowingLineBreak()) return null;\n    this.expectContextual(127);\n    if (properties.declare) node.declare = true;\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkIdentifier(node.id, BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(TSErrors.MissingInterfaceName, {\n        at: this.state.startLoc\n      });\n    }\n    node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\n    if (this.eat(81)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, BIND_TS_TYPE);\n    node.typeAnnotation = this.tsInType(() => {\n      node.typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutModifiers);\n      this.expect(29);\n      if (this.isContextual(112) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n  tsInDisallowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsInAllowConditionalTypesContext(cb) {\n    const oldInDisallowConditionalTypesContext = this.state.inDisallowConditionalTypesContext;\n    this.state.inDisallowConditionalTypesContext = false;\n    try {\n      return cb();\n    } finally {\n      this.state.inDisallowConditionalTypesContext = oldInDisallowConditionalTypesContext;\n    }\n  }\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(131) ? super.parseStringLiteral(this.state.value) : this.parseIdentifier(true);\n    if (this.eat(29)) {\n      node.initializer = super.parseMaybeAssignAllowIn();\n    }\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n  tsParseEnumDeclaration(node, properties = {}) {\n    if (properties.const) node.const = true;\n    if (properties.declare) node.declare = true;\n    this.expectContextual(124);\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, node.const ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(5);\n    super.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n    if (!nested) {\n      this.checkIdentifier(node.id, BIND_TS_NAMESPACE);\n    }\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(110)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(131)) {\n      node.id = super.parseStringLiteral(this.state.value);\n    } else {\n      this.unexpected();\n    }\n    if (this.match(5)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkIdentifier(node.id, BIND_FLAGS_TS_IMPORT);\n    this.expect(29);\n    const moduleReference = this.tsParseModuleReference();\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(TSErrors.ImportAliasHasImportType, {\n        at: moduleReference\n      });\n    }\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n  tsIsExternalModuleReference() {\n    return this.isContextual(117) && this.lookaheadCharCode() === 40;\n  }\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(117);\n    this.expect(10);\n    if (!this.match(131)) {\n      throw this.unexpected();\n    }\n    node.expression = super.parseExprAtom();\n    this.expect(11);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n    let starttype = this.state.type;\n    let kind;\n    if (this.isContextual(99)) {\n      starttype = 74;\n      kind = \"let\";\n    }\n    return this.tsInAmbientContext(() => {\n      if (starttype === 68) {\n        nany.declare = true;\n        return super.parseFunctionStatement(nany, false, false);\n      }\n      if (starttype === 80) {\n        nany.declare = true;\n        return this.parseClass(nany, true, false);\n      }\n      if (starttype === 124) {\n        return this.tsParseEnumDeclaration(nany, {\n          declare: true\n        });\n      }\n      if (starttype === 110) {\n        return this.tsParseAmbientExternalModuleDeclaration(nany);\n      }\n      if (starttype === 75 || starttype === 74) {\n        if (!this.match(75) || !this.isLookaheadContextual(\"enum\")) {\n          nany.declare = true;\n          return this.parseVarStatement(nany, kind || this.state.value, true);\n        }\n        this.expect(75);\n        return this.tsParseEnumDeclaration(nany, {\n          const: true,\n          declare: true\n        });\n      }\n      if (starttype === 127) {\n        const result = this.tsParseInterfaceDeclaration(nany, {\n          declare: true\n        });\n        if (result) return result;\n      }\n      if (tokenIsIdentifier(starttype)) {\n        return this.tsParseDeclaration(nany, this.state.value, true, null);\n      }\n    });\n  }\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true, null);\n  }\n  tsParseExpressionStatement(node, expr, decorators) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n        break;\n      default:\n        return this.tsParseDeclaration(node, expr.name, false, decorators);\n    }\n  }\n  tsParseDeclaration(node, value, next, decorators) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(80) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node, decorators);\n        }\n        break;\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(131)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n        break;\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n        break;\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n        break;\n    }\n  }\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n    return !this.isLineTerminator();\n  }\n  tsTryParseGenericAsyncArrowFunction(startLoc) {\n    if (!this.match(47)) {\n      return undefined;\n    }\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startLoc);\n      node.typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    if (!res) {\n      return undefined;\n    }\n    return super.parseArrowExpression(res, null, true);\n  }\n  tsParseTypeArgumentsInExpression() {\n    if (this.reScan_lt() !== 47) {\n      return undefined;\n    }\n    return this.tsParseTypeArguments();\n  }\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(47);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n    if (node.params.length === 0) {\n      this.raise(TSErrors.EmptyTypeArguments, {\n        at: node\n      });\n    }\n    this.expect(48);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n  parseAssignableListItem(flags, decorators) {\n    const startLoc = this.state.startLoc;\n    const modified = {};\n    this.tsParseModifiers({\n      allowedModifiers: [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]\n    }, modified);\n    const accessibility = modified.accessibility;\n    const override = modified.override;\n    const readonly = modified.readonly;\n    if (!(flags & ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS) && (accessibility || readonly || override)) {\n      this.raise(TSErrors.UnexpectedParameterModifier, {\n        at: startLoc\n      });\n    }\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left, flags);\n    const elt = this.parseMaybeDefault(left.loc.start, left);\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startLoc);\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(TSErrors.UnsupportedParameterPropertyKind, {\n          at: pp\n        });\n      }\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n  isSimpleParameter(node) {\n    return node.type === \"TSParameterProperty\" && super.isSimpleParameter(node.parameter) || super.isSimpleParameter(node);\n  }\n  tsDisallowOptionalPattern(node) {\n    for (const param of node.params) {\n      if (param.type !== \"Identifier\" && param.optional && !this.state.isAmbientContext) {\n        this.raise(TSErrors.PatternIsOptional, {\n          at: param\n        });\n      }\n    }\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    super.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    this.tsDisallowOptionalPattern(node);\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      return this.finishNode(node, bodilessType);\n    }\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(TSErrors.DeclareFunctionHasImplementation, {\n        at: node\n      });\n      if (node.declare) {\n        return super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n      }\n    }\n    this.tsDisallowOptionalPattern(node);\n    return super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkIdentifier(node.id, BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(node);\n    }\n  }\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(TSErrors.UnexpectedTypeAnnotation, {\n          at: node.typeAnnotation\n        });\n      }\n    });\n  }\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n    return node;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(35)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n    let isOptionalCall = false;\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n    if (this.match(47) || this.match(51)) {\n      let missingParenErrorLoc;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startLoc);\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n        const typeArguments = this.tsParseTypeArgumentsInExpression();\n        if (!typeArguments) return;\n        if (isOptionalCall && !this.match(10)) {\n          missingParenErrorLoc = this.state.curPosition();\n          return;\n        }\n        if (tokenIsTemplate(this.state.type)) {\n          const result = super.parseTaggedTemplateExpression(base, startLoc, state);\n          result.typeParameters = typeArguments;\n          return result;\n        }\n        if (!noCalls && this.eat(10)) {\n          const node = this.startNodeAt(startLoc);\n          node.callee = base;\n          node.arguments = this.parseCallExpressionArguments(11, false);\n          this.tsCheckForInvalidTypeCasts(node.arguments);\n          node.typeParameters = typeArguments;\n          if (state.optionalChainMember) {\n            node.optional = isOptionalCall;\n          }\n          return this.finishCallExpression(node, state.optionalChainMember);\n        }\n        const tokenType = this.state.type;\n        if (tokenType === 48 || tokenType === 52 || tokenType !== 10 && tokenCanStartExpression(tokenType) && !this.hasPrecedingLineBreak()) {\n          return;\n        }\n        const node = this.startNodeAt(startLoc);\n        node.expression = base;\n        node.typeParameters = typeArguments;\n        return this.finishNode(node, \"TSInstantiationExpression\");\n      });\n      if (missingParenErrorLoc) {\n        this.unexpected(missingParenErrorLoc, 10);\n      }\n      if (result) {\n        if (result.type === \"TSInstantiationExpression\" && (this.match(16) || this.match(18) && this.lookaheadCharCode() !== 40)) {\n          this.raise(TSErrors.InvalidPropertyAccessAfterInstantiationExpression, {\n            at: this.state.startLoc\n          });\n        }\n        return result;\n      }\n    }\n    return super.parseSubscript(base, startLoc, noCalls, state);\n  }\n  parseNewCallee(node) {\n    var _callee$extra;\n    super.parseNewCallee(node);\n    const {\n      callee\n    } = node;\n    if (callee.type === \"TSInstantiationExpression\" && !((_callee$extra = callee.extra) != null && _callee$extra.parenthesized)) {\n      node.typeParameters = callee.typeParameters;\n      node.callee = callee.expression;\n    }\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    let isSatisfies;\n    if (tokenOperatorPrecedence(58) > minPrec && !this.hasPrecedingLineBreak() && (this.isContextual(93) || (isSatisfies = this.isContextual(118)))) {\n      const node = this.startNodeAt(leftStartLoc);\n      node.expression = left;\n      node.typeAnnotation = this.tsInType(() => {\n        this.next();\n        if (this.match(75)) {\n          if (isSatisfies) {\n            this.raise(Errors.UnexpectedKeyword, {\n              at: this.state.startLoc,\n              keyword: \"const\"\n            });\n          }\n          return this.tsParseTypeReference();\n        }\n        return this.tsParseType();\n      });\n      this.finishNode(node, isSatisfies ? \"TSSatisfiesExpression\" : \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartLoc, minPrec);\n    }\n    return super.parseExprOp(left, leftStartLoc, minPrec);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (!this.state.isAmbientContext) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  checkImportReflection(node) {\n    super.checkImportReflection(node);\n    if (node.module && node.importKind !== \"value\") {\n      this.raise(TSErrors.ImportReflectionHasImportType, {\n        at: node.specifiers[0].loc.start\n      });\n    }\n  }\n  checkDuplicateExports() {}\n  parseImport(node) {\n    node.importKind = \"value\";\n    if (tokenIsIdentifier(this.state.type) || this.match(55) || this.match(5)) {\n      let ahead = this.lookahead();\n      if (this.isContextual(128) && ahead.type !== 12 && ahead.type !== 97 && ahead.type !== 29) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 29) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n    const importNode = super.parseImport(node);\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(TSErrors.TypeImportCannotSpecifyDefaultAndNamed, {\n        at: importNode\n      });\n    }\n    return importNode;\n  }\n  parseExport(node, decorators) {\n    if (this.match(83)) {\n      this.next();\n      if (this.isContextual(128) && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(29)) {\n      const assign = node;\n      assign.expression = super.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(93)) {\n      const decl = node;\n      this.expectContextual(126);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      node.exportKind = \"value\";\n      if (this.isContextual(128)) {\n        const ch = this.lookaheadCharCode();\n        if (ch === 123 || ch === 42) {\n          this.next();\n          node.exportKind = \"type\";\n        }\n      }\n      return super.parseExport(node, decorators);\n    }\n  }\n  isAbstractClass() {\n    return this.isContextual(122) && this.lookahead().type === 80;\n  }\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      return this.parseClass(cls, true, true);\n    }\n    if (this.match(127)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseExportDefaultExpression();\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    const {\n      isAmbientContext\n    } = this.state;\n    const declaration = super.parseVarStatement(node, kind, allowMissingInitializer || isAmbientContext);\n    if (!isAmbientContext) return declaration;\n    for (const {\n      id,\n      init\n    } of declaration.declarations) {\n      if (!init) continue;\n      if (kind !== \"const\" || !!id.typeAnnotation) {\n        this.raise(TSErrors.InitializerNotAllowedInAmbientContext, {\n          at: init\n        });\n      } else if (!isValidAmbientConstInitializer(init, this.hasPlugin(\"estree\"))) {\n        this.raise(TSErrors.ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference, {\n          at: init\n        });\n      }\n    }\n    return declaration;\n  }\n  parseStatementContent(flags, decorators) {\n    if (this.match(75) && this.isLookaheadContextual(\"enum\")) {\n      const node = this.startNode();\n      this.expect(75);\n      return this.tsParseEnumDeclaration(node, {\n        const: true\n      });\n    }\n    if (this.isContextual(124)) {\n      return this.tsParseEnumDeclaration(this.startNode());\n    }\n    if (this.isContextual(127)) {\n      const result = this.tsParseInterfaceDeclaration(this.startNode());\n      if (result) return result;\n    }\n    return super.parseStatementContent(flags, decorators);\n  }\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n      return !!member[modifier];\n    });\n  }\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(104) && this.lookaheadCharCode() === 123;\n  }\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers({\n      allowedModifiers: modifiers,\n      disallowedModifiers: [\"in\", \"out\"],\n      stopOnStartOfClassStaticBlock: true,\n      errorTemplate: TSErrors.InvalidModifierOnTypeParameterPositions\n    }, member);\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(TSErrors.StaticBlockCannotHaveModifier, {\n            at: this.state.curPosition()\n          });\n        }\n        super.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n    if (idx) {\n      classBody.body.push(idx);\n      if (member.abstract) {\n        this.raise(TSErrors.IndexSignatureHasAbstract, {\n          at: member\n        });\n      }\n      if (member.accessibility) {\n        this.raise(TSErrors.IndexSignatureHasAccessibility, {\n          at: member,\n          modifier: member.accessibility\n        });\n      }\n      if (member.declare) {\n        this.raise(TSErrors.IndexSignatureHasDeclare, {\n          at: member\n        });\n      }\n      if (member.override) {\n        this.raise(TSErrors.IndexSignatureHasOverride, {\n          at: member\n        });\n      }\n      return;\n    }\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(TSErrors.NonAbstractClassHasAbstractMethod, {\n        at: member\n      });\n    }\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(TSErrors.OverrideNotInSubClass, {\n          at: member\n        });\n      }\n    }\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasReadonly, {\n        at: methodOrProp\n      });\n    }\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(TSErrors.ClassMethodHasDeclare, {\n        at: methodOrProp\n      });\n    }\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr, decorators) : undefined;\n    return decl || super.parseExpressionStatement(node, expr, decorators);\n  }\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startLoc, refExpressionErrors);\n    }\n    const result = this.tryParse(() => super.parseConditional(expr, startLoc));\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n      return expr;\n    }\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n  parseParenItem(node, startLoc) {\n    node = super.parseParenItem(node, startLoc);\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n    return node;\n  }\n  parseExportDeclaration(node) {\n    if (!this.state.isAmbientContext && this.isContextual(123)) {\n      return this.tsInAmbientContext(() => this.parseExportDeclaration(node));\n    }\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(123);\n    if (isDeclare && (this.isContextual(123) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(TSErrors.ExpectedAmbientAfterExportDeclare, {\n        at: this.state.startLoc\n      });\n    }\n    const isIdentifier = tokenIsIdentifier(this.state.type);\n    const declaration = isIdentifier && this.tsTryParseExportDeclaration() || super.parseExportDeclaration(node);\n    if (!declaration) return null;\n    if (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare) {\n      node.exportKind = \"type\";\n    }\n    if (isDeclare) {\n      this.resetStartLocation(declaration, startLoc);\n      declaration.declare = true;\n    }\n    return declaration;\n  }\n  parseClassId(node, isStatement, optionalId, bindingType) {\n    if ((!isStatement || optionalId) && this.isContextual(111)) {\n      return;\n    }\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseInOutConstModifiers);\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional) {\n      if (this.eat(35)) {\n        node.definite = true;\n      } else if (this.eat(17)) {\n        node.optional = true;\n      }\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (this.state.isAmbientContext && !(node.readonly && !node.typeAnnotation) && this.match(29)) {\n      this.raise(TSErrors.DeclareClassFieldHasInitializer, {\n        at: this.state.startLoc\n      });\n    }\n    if (node.abstract && this.match(29)) {\n      const {\n        key\n      } = node;\n      this.raise(TSErrors.AbstractPropertyHasInitializer, {\n        at: this.state.startLoc,\n        propertyName: key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n      });\n    }\n    return super.parseClassProperty(node);\n  }\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(TSErrors.PrivateElementHasAbstract, {\n        at: node\n      });\n    }\n    if (node.accessibility) {\n      this.raise(TSErrors.PrivateElementHasAccessibility, {\n        at: node,\n        modifier: node.accessibility\n      });\n    }\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n  parseClassAccessorProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n    if (node.optional) {\n      this.raise(TSErrors.AccessorCannotBeOptional, {\n        at: node\n      });\n    }\n    return super.parseClassAccessorProperty(node);\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters && isConstructor) {\n      this.raise(TSErrors.ConstructorHasTypeParameters, {\n        at: typeParameters\n      });\n    }\n    const {\n      declare = false,\n      kind\n    } = method;\n    if (declare && (kind === \"get\" || kind === \"set\")) {\n      this.raise(TSErrors.DeclareAccessor, {\n        at: method,\n        kind\n      });\n    }\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n    if (node.superClass && (this.match(47) || this.match(51))) {\n      node.superTypeParameters = this.tsParseTypeArgumentsInExpression();\n    }\n    if (this.eatContextual(111)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) prop.typeParameters = typeParameters;\n    return super.parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n  }\n  parseFunctionParams(node, isConstructor) {\n    const typeParameters = this.tsTryParseTypeParameters(this.tsParseConstModifier);\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, isConstructor);\n  }\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n    if (decl.id.type === \"Identifier\" && !this.hasPrecedingLineBreak() && this.eat(35)) {\n      decl.definite = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n    let state;\n    let jsx;\n    let typeCast;\n    if (this.hasPlugin(\"jsx\") && (this.match(140) || this.match(47))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(47)) {\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n    if (!state || state === this.state) state = this.state.clone();\n    let typeParameters;\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n      typeParameters = this.tsParseTypeParameters(this.tsParseConstModifier);\n      const expr = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n    if (node.params.length === 1 && !node.params[0].constraint && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(TSErrors.ReservedArrowTypeParam, {\n        at: node\n      });\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    if (!this.hasPlugin(\"jsx\") && this.match(47)) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors, sawUnary);\n    }\n  }\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n    return super.parseArrow(node);\n  }\n  parseAssignableListItemTypes(param, flags) {\n    if (!(flags & ParseBindingListFlags.IS_FUNCTION_PARAMS)) return param;\n    if (this.eat(17)) {\n      param.optional = true;\n    }\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n      case \"TSParameterProperty\":\n        return true;\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"ParenthesizedExpression\":\n        this.toAssignableParenthesizedExpression(node, isLHS);\n        break;\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        if (isLHS) {\n          this.expressionScope.recordArrowParameterBindingError(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        } else {\n          this.raise(TSErrors.UnexpectedTypeCastInParameter, {\n            at: node\n          });\n        }\n        this.toAssignable(node.expression, isLHS);\n        break;\n      case \"AssignmentExpression\":\n        if (!isLHS && node.left.type === \"TSTypeCastExpression\") {\n          node.left = this.typeCastToParameter(node.left);\n        }\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isLHS);\n        break;\n      default:\n        super.toAssignable(node, isLHS);\n    }\n  }\n  checkToRestConversion(node, allowPattern) {\n    switch (node.type) {\n      case \"TSAsExpression\":\n      case \"TSSatisfiesExpression\":\n      case \"TSTypeAssertion\":\n      case \"TSNonNullExpression\":\n        this.checkToRestConversion(node.expression, false);\n        break;\n      default:\n        super.checkToRestConversion(node, allowPattern);\n    }\n  }\n  isValidLVal(type, isUnparenthesizedInAssign, binding) {\n    return getOwn({\n      TSTypeCastExpression: true,\n      TSParameterProperty: \"parameter\",\n      TSNonNullExpression: \"expression\",\n      TSAsExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSSatisfiesExpression: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true],\n      TSTypeAssertion: (binding !== BIND_NONE || !isUnparenthesizedInAssign) && [\"expression\", true]\n    }, type) || super.isValidLVal(type, isUnparenthesizedInAssign, binding);\n  }\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 78:\n        return this.parseIdentifier(true);\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsParseTypeArgumentsInExpression();\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n      this.unexpected(null, 10);\n    }\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n      return false;\n    } else {\n      return super.checkCommaAfterRest(close);\n    }\n  }\n  isClassMethod() {\n    return this.match(47) || super.isClassMethod();\n  }\n  isClassProperty() {\n    return this.match(35) || this.match(14) || super.isClassProperty();\n  }\n  parseMaybeDefault(startLoc, left) {\n    const node = super.parseMaybeDefault(startLoc, left);\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(TSErrors.TypeAnnotationAfterAssign, {\n        at: node.typeAnnotation\n      });\n    }\n    return node;\n  }\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        return this.finishOp(48, 1);\n      }\n      if (code === 60) {\n        return this.finishOp(47, 1);\n      }\n    }\n    return super.getTokenFromCode(code);\n  }\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n    if (type === 47) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 48) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n  reScan_lt() {\n    const {\n      type\n    } = this.state;\n    if (type === 51) {\n      this.state.pos -= 2;\n      this.finishOp(47, 1);\n      return 47;\n    }\n    return type;\n  }\n  toAssignableList(exprList, trailingCommaLoc, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if ((expr == null ? void 0 : expr.type) === \"TSTypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n    super.toAssignableList(exprList, trailingCommaLoc, isLHS);\n  }\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n    return super.shouldParseArrow(params);\n  }\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(47) || this.match(51)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArgumentsInExpression());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n    return param;\n  }\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n  parseClass(node, isStatement, optionalId) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n    try {\n      return super.parseClass(node, isStatement, optionalId);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n  tsParseAbstractDeclaration(node, decorators) {\n    if (this.match(80)) {\n      node.abstract = true;\n      return this.maybeTakeDecorators(decorators, this.parseClass(node, true, false));\n    } else if (this.isContextual(127)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(TSErrors.NonClassMethodPropertyHasAbstractModifer, {\n          at: node\n        });\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 80);\n    }\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope) {\n    const method = super.parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(TSErrors.AbstractMethodHasImplementation, {\n          at: method,\n          methodName: key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`\n        });\n      }\n    }\n    return method;\n  }\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.parse();\n  }\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n    return super.getExpression();\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, isInTypeOnlyImport ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\n  }\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const loc = leftOfAs.loc.start;\n    if (this.isContextual(93)) {\n      const firstAs = this.parseIdentifier();\n      if (this.isContextual(93)) {\n        const secondAs = this.parseIdentifier();\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n      if (isImport) {\n        leftOfAs = this.parseIdentifier(true);\n        if (!this.isContextual(93)) {\n          this.checkReservedWord(leftOfAs.name, leftOfAs.loc.start, true, true);\n        }\n      } else {\n        leftOfAs = this.parseModuleExportName();\n      }\n    }\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports, {\n        at: loc\n      });\n    }\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n    if (canParseAsKeyword && this.eatContextual(93)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n    if (isImport) {\n      this.checkIdentifier(node[rightOfAsKey], hasTypeSpecifier ? BIND_TS_TYPE_IMPORT : BIND_FLAGS_TS_IMPORT);\n    }\n  }\n});\nfunction isPossiblyLiteralEnum(expression) {\n  if (expression.type !== \"MemberExpression\") return false;\n  const {\n    computed,\n    property\n  } = expression;\n  if (computed && property.type !== \"StringLiteral\" && (property.type !== \"TemplateLiteral\" || property.expressions.length > 0)) {\n    return false;\n  }\n  return isUncomputedMemberExpressionChain(expression.object);\n}\nfunction isValidAmbientConstInitializer(expression, estree) {\n  var _expression$extra;\n  const {\n    type\n  } = expression;\n  if ((_expression$extra = expression.extra) != null && _expression$extra.parenthesized) {\n    return false;\n  }\n  if (estree) {\n    if (type === \"Literal\") {\n      const {\n        value\n      } = expression;\n      if (typeof value === \"string\" || typeof value === \"boolean\") {\n        return true;\n      }\n    }\n  } else {\n    if (type === \"StringLiteral\" || type === \"BooleanLiteral\") {\n      return true;\n    }\n  }\n  if (isNumber(expression, estree) || isNegativeNumber(expression, estree)) {\n    return true;\n  }\n  if (type === \"TemplateLiteral\" && expression.expressions.length === 0) {\n    return true;\n  }\n  if (isPossiblyLiteralEnum(expression)) {\n    return true;\n  }\n  return false;\n}\nfunction isNumber(expression, estree) {\n  if (estree) {\n    return expression.type === \"Literal\" && (typeof expression.value === \"number\" || \"bigint\" in expression);\n  } else {\n    return expression.type === \"NumericLiteral\" || expression.type === \"BigIntLiteral\";\n  }\n}\nfunction isNegativeNumber(expression, estree) {\n  if (expression.type === \"UnaryExpression\") {\n    const {\n      operator,\n      argument\n    } = expression;\n    if (operator === \"-\" && isNumber(argument, estree)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUncomputedMemberExpressionChain(expression) {\n  if (expression.type === \"Identifier\") return true;\n  if (expression.type !== \"MemberExpression\") return false;\n  if (expression.computed) return false;\n  return isUncomputedMemberExpressionChain(expression.object);\n}\n\nconst PlaceholderErrors = ParseErrorEnum`placeholders`({\n  ClassNameIsRequired: \"A class name is required.\",\n  UnexpectedSpace: \"Unexpected space in placeholder.\"\n});\nvar placeholders = (superClass => class PlaceholdersParserMixin extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(142)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace();\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace();\n      this.expect(142);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(142, 2);\n    }\n    return super.getTokenFromCode(code);\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(refExpressionErrors);\n  }\n  parseIdentifier(liberal) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(liberal);\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word !== undefined) {\n      super.checkReservedWord(word, startLoc, checkKeywords, isBinding);\n    }\n  }\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom();\n  }\n  isValidLVal(type, isParenthesized, binding) {\n    return type === \"Placeholder\" || super.isValidLVal(type, isParenthesized, binding);\n  }\n  toAssignable(node, isLHS) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n    } else {\n      super.toAssignable(node, isLHS);\n    }\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (super.chStartsBindingIdentifier(ch, pos)) {\n      return true;\n    }\n    const nextToken = this.lookahead();\n    if (nextToken.type === 142) {\n      return true;\n    }\n    return false;\n  }\n  verifyBreakContinue(node, isBreak) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(node, isBreak);\n  }\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(node, expr);\n    }\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = super.parseStatementOrSloppyAnnexBFunctionDeclaration();\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n  parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse) {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(allowDirectives, createNewLexicalScope, afterBlockParse);\n  }\n  parseFunctionId(requireId) {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(requireId);\n  }\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (placeholder) {\n      if (this.match(81) || this.match(142) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        throw this.raise(PlaceholderErrors.ClassNameIsRequired, {\n          at: this.state.startLoc\n        });\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n    super.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || super.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n  parseExport(node, decorators) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(node, decorators);\n    if (!this.isContextual(97) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node, decorators);\n  }\n  isExportDefaultSpecifier() {\n    if (this.match(65)) {\n      const next = this.nextTokenStart();\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(142), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n    return super.isExportDefaultSpecifier();\n  }\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n    return super.maybeParseExportDefaultSpecifier(node);\n  }\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(node);\n    node.specifiers = [];\n    if (!this.isContextual(97) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    node.specifiers.push(this.finishNode(specifier, \"ImportDefaultSpecifier\"));\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n    this.expectContextual(97);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource();\n  }\n  assertNoSpace() {\n    if (this.state.start > this.state.lastTokEndLoc.index) {\n      this.raise(PlaceholderErrors.UnexpectedSpace, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n  }\n});\n\nvar v8intrinsic = (superClass => class V8IntrinsicMixin extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(54)) {\n      const v8IntrinsicStartLoc = this.state.startLoc;\n      const node = this.startNode();\n      this.next();\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName();\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n      this.unexpected(v8IntrinsicStartLoc);\n    }\n  }\n  parseExprAtom(refExpressionErrors) {\n    return this.parseV8Intrinsic() || super.parseExprAtom(refExpressionErrors);\n  }\n});\n\nfunction hasPlugin(plugins, expectedConfig) {\n  const [expectedName, expectedOptions] = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n  const expectedKeys = Object.keys(expectedOptions);\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return plugin[1][option];\n  }\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n    if (decoratorsBeforeExport != null && typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean, if specified.\");\n    }\n    const allowCallParenthesized = getPluginOption(plugins, \"decorators\", \"allowCallParenthesized\");\n    if (allowCallParenthesized != null && typeof allowCallParenthesized !== \"boolean\") {\n      throw new Error(\"'allowCallParenthesized' must be a boolean.\");\n    }\n  }\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\n      syntaxType: \"hash\"\n    }]);\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n  if (hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") != null && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"The 'syntaxType' option of the 'recordAndTuple' plugin must be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowNewTargetOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true,\n  annexB: true\n};\nfunction getOptions(opts) {\n  if (opts && opts.annexB != null && opts.annexB !== false) {\n    throw new Error(\"The `annexB` option can only be set to `false`.\");\n  }\n  const options = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(Errors.RecordNoProto, {\n          at: key\n        });\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProtoLoc === null) {\n            refExpressionErrors.doubleProtoLoc = key.loc.start;\n          }\n        } else {\n          this.raise(Errors.DuplicateProto, {\n            at: key\n          });\n        }\n      }\n      protoRef.used = true;\n    }\n  }\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(137)) {\n      this.unexpected();\n    }\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n  parseExpressionBase(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(12)) {\n      const node = this.startNodeAt(startLoc);\n      node.expressions = [expr];\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$loc;\n    refExpressionErrors.optionalParametersLoc = (_resultError$loc = resultError == null ? void 0 : resultError.loc) != null ? _resultError$loc : this.state.startLoc;\n  }\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(106)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startLoc);\n        }\n        return left;\n      }\n    }\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n    const {\n      type\n    } = this.state;\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startLoc);\n    }\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      if (this.match(29)) {\n        this.toAssignable(left, true);\n        node.left = left;\n        const startIndex = startLoc.index;\n        if (refExpressionErrors.doubleProtoLoc != null && refExpressionErrors.doubleProtoLoc.index >= startIndex) {\n          refExpressionErrors.doubleProtoLoc = null;\n        }\n        if (refExpressionErrors.shorthandAssignLoc != null && refExpressionErrors.shorthandAssignLoc.index >= startIndex) {\n          refExpressionErrors.shorthandAssignLoc = null;\n        }\n        if (refExpressionErrors.privateKeyLoc != null && refExpressionErrors.privateKeyLoc.index >= startIndex) {\n          this.checkDestructuringPrivate(refExpressionErrors);\n          refExpressionErrors.privateKeyLoc = null;\n        }\n      } else {\n        node.left = left;\n      }\n      this.next();\n      node.right = this.parseMaybeAssign();\n      this.checkLVal(left, {\n        in: this.finishNode(node, \"AssignmentExpression\")\n      });\n      return node;\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    return left;\n  }\n  parseMaybeConditional(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseConditional(expr, startLoc, refExpressionErrors);\n  }\n  parseConditional(expr, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(136) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n  parseExprOps(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseExprOp(expr, startLoc, -1);\n  }\n  parseExprOp(left, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      if (minPrec >= tokenOperatorPrecedence(58) || !this.prodParam.hasIn || !this.match(58)) {\n        this.raise(Errors.PrivateInExpectedIn, {\n          at: left,\n          identifierName: value\n        });\n      }\n      this.classScope.usePrivateName(value, left.loc.start);\n    }\n    const op = this.state.type;\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(58))) {\n      let prec = tokenOperatorPrecedence(op);\n      if (prec > minPrec) {\n        if (op === 39) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.checkPipelineAtInfixOperator(left, leftStartLoc);\n        }\n        const node = this.startNodeAt(leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 41 || op === 42;\n        const coalesce = op === 40;\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(42);\n        }\n        this.next();\n        if (op === 39 && this.hasPlugin([\"pipelineOperator\", {\n          proposal: \"minimal\"\n        }])) {\n          if (this.state.type === 96 && this.prodParam.hasAwait) {\n            throw this.raise(Errors.UnexpectedAwaitAfterPipelineBody, {\n              at: this.state.startLoc\n            });\n          }\n        }\n        node.right = this.parseExprOpRightExpr(op, prec);\n        const finishedNode = this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n        if (coalesce && (nextOp === 41 || nextOp === 42) || logical && nextOp === 40) {\n          throw this.raise(Errors.MixingCoalesceWithLogical, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseExprOp(finishedNode, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n  parseExprOpRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case 39:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(106)) {\n                throw this.raise(Errors.PipeBodyIsTighter, {\n                  at: this.state.startLoc\n                });\n              }\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startLoc);\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n  parseExprOpBaseRightExpr(op, prec) {\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n  parseHackPipeBody() {\n    var _body$extra;\n    const {\n      startLoc\n    } = this.state;\n    const body = this.parseMaybeAssign();\n    const requiredParentheses = UnparenthesizedPipeBodyDescriptions.has(body.type);\n    if (requiredParentheses && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(Errors.PipeUnparenthesizedBody, {\n        at: startLoc,\n        type: body.type\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipeTopicUnused, {\n        at: startLoc\n      });\n    }\n    return body;\n  }\n  checkExponentialAfterUnary(node) {\n    if (this.match(57)) {\n      this.raise(Errors.UnexpectedTokenUnaryExponentiation, {\n        at: node.argument\n      });\n    }\n  }\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(96);\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    const update = this.match(34);\n    const node = this.startNode();\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n      if (this.match(72)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(89);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n        if (arg.type === \"Identifier\") {\n          this.raise(Errors.StrictDelete, {\n            at: node\n          });\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(Errors.DeletePrivateField, {\n            at: node\n          });\n        }\n      }\n      if (!update) {\n        if (!sawUnary) {\n          this.checkExponentialAfterUnary(node);\n        }\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(54);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(Errors.AwaitNotInAsyncContext, {\n          at: startLoc\n        });\n        return this.parseAwait(startLoc);\n      }\n    }\n    return expr;\n  }\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      const updateExpressionNode = node;\n      this.checkLVal(updateExpressionNode.argument, {\n        in: this.finishNode(updateExpressionNode, \"UpdateExpression\")\n      });\n      return node;\n    }\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.next();\n      this.checkLVal(expr, {\n        in: expr = this.finishNode(node, \"UpdateExpression\")\n      });\n    }\n    return expr;\n  }\n  parseExprSubscripts(refExpressionErrors) {\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n    return this.parseSubscripts(expr, startLoc);\n  }\n  parseSubscripts(base, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n    do {\n      base = this.parseSubscript(base, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n  parseSubscript(base, startLoc, noCalls, state) {\n    const {\n      type\n    } = this.state;\n    if (!noCalls && type === 15) {\n      return this.parseBind(base, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startLoc, state);\n    }\n    let optional = false;\n    if (type === 18) {\n      if (noCalls) {\n        this.raise(Errors.OptionalChainingNoNew, {\n          at: this.state.startLoc\n        });\n        if (this.lookaheadCharCode() === 40) {\n          state.stop = true;\n          return base;\n        }\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n  parseMember(base, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    node.computed = computed;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(3);\n    } else if (this.match(136)) {\n      if (base.type === \"Super\") {\n        this.raise(Errors.SuperPrivateField, {\n          at: startLoc\n        });\n      }\n      this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n  parseBind(base, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startLoc);\n    node.object = base;\n    this.next();\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startLoc, noCalls);\n  }\n  parseCoverCallAndAsyncArrowHead(base, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    const node = this.startNodeAt(startLoc);\n    node.callee = base;\n    const {\n      maybeAsyncArrow,\n      optionalChainMember\n    } = state;\n    if (maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n    if (optionalChainMember) {\n      node.optional = optional;\n    }\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n    let finishedNode = this.finishCallExpression(node, optionalChainMember);\n    if (maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      finishedNode = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startLoc), finishedNode);\n    } else {\n      if (maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(finishedNode);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return finishedNode;\n  }\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n  parseTaggedTemplateExpression(base, startLoc, state) {\n    const node = this.startNodeAt(startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(Errors.OptionalChainingNoTemplate, {\n        at: startLoc\n      });\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEndLoc.index === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(Errors.ImportCallArity, {\n          at: node,\n          maxArgumentCount: this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? 2 : 1\n        });\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(Errors.ImportCallSpreadArgument, {\n              at: arg\n            });\n          }\n        }\n      }\n    }\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(Errors.ImportCallArgumentTrailingComma, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingCommaLoc);\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n    return node;\n  }\n  parseNoCallExpr() {\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startLoc, true);\n  }\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    let decorators = null;\n    const {\n      type\n    } = this.state;\n    switch (type) {\n      case 79:\n        return this.parseSuper();\n      case 83:\n        node = this.startNode();\n        this.next();\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n        if (!this.match(10)) {\n          this.raise(Errors.UnsupportedImport, {\n            at: this.state.lastTokStartLoc\n          });\n        }\n        return this.finishNode(node, \"Import\");\n      case 78:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n      case 90:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n      case 56:\n      case 31:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n      case 132:\n        return this.parseNumericLiteral(this.state.value);\n      case 133:\n        return this.parseBigIntLiteral(this.state.value);\n      case 134:\n        return this.parseDecimalLiteral(this.state.value);\n      case 131:\n        return this.parseStringLiteral(this.state.value);\n      case 84:\n        return this.parseNullLiteral();\n      case 85:\n        return this.parseBooleanLiteral(true);\n      case 86:\n        return this.parseBooleanLiteral(false);\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n        }\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n        }\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n      case 68:\n        return this.parseFunctionOrFunctionSent();\n      case 26:\n        decorators = this.parseDecorators();\n      case 80:\n        return this.parseClass(this.maybeTakeDecorators(decorators, this.startNode()), false);\n      case 77:\n        return this.parseNewOrNewTarget();\n      case 25:\n      case 24:\n        return this.parseTemplate(false);\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(Errors.UnsupportedBind, {\n              at: callee\n            });\n          }\n        }\n      case 136:\n        {\n          this.raise(Errors.PrivateInExpectedIn, {\n            at: this.state.startLoc,\n            identifierName: this.state.value\n          });\n          return this.parsePrivateName();\n        }\n      case 33:\n        {\n          return this.parseTopicReferenceThenEqualsSign(54, \"%\");\n        }\n      case 32:\n        {\n          return this.parseTopicReferenceThenEqualsSign(44, \"^\");\n        }\n      case 37:\n      case 38:\n        {\n          return this.parseTopicReference(\"hack\");\n        }\n      case 44:\n      case 54:\n      case 27:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          } else {\n            throw this.unexpected();\n          }\n        }\n      case 47:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            break;\n          } else {\n            throw this.unexpected();\n          }\n        }\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(125) && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n            if (type === 68) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseAsyncFunctionExpression(this.startNodeAtNode(id));\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 90) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n    }\n  }\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc = createPositionWithColumnOffset(this.state.endLoc, -1);\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const startLoc = this.state.startLoc;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, startLoc, pipeProposal, tokenType);\n  }\n  finishTopicReference(node, startLoc, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType)) {\n      const nodeType = pipeProposal === \"smart\" ? \"PipelinePrimaryTopicReference\" : \"TopicReference\";\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        this.raise(pipeProposal === \"smart\" ? Errors.PrimaryTopicNotAllowed : Errors.PipeTopicUnbound, {\n          at: startLoc\n        });\n      }\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(Errors.PipeTopicUnconfiguredToken, {\n        at: startLoc,\n        token: tokenLabelName(tokenType)\n      });\n    }\n  }\n  testTopicReferenceConfiguration(pipeProposal, startLoc, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          return this.hasPlugin([\"pipelineOperator\", {\n            topicToken: tokenLabelName(tokenType)\n          }]);\n        }\n      case \"smart\":\n        return tokenType === 27;\n      default:\n        throw this.raise(Errors.PipeTopicRequiresHackPipes, {\n          at: startLoc\n        });\n    }\n  }\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.LineTerminatorBeforeArrow, {\n        at: this.state.curPosition()\n      });\n    }\n    this.expect(19);\n    return this.parseArrowExpression(node, params, true);\n  }\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.SuperNotAllowed, {\n        at: node\n      });\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(Errors.UnexpectedSuper, {\n        at: node\n      });\n    }\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(Errors.UnsupportedSuper, {\n        at: node\n      });\n    }\n    return this.finishNode(node, \"Super\");\n  }\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(createPositionWithColumnOffset(this.state.startLoc, 1));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      if (this.match(102)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(Errors.UnsupportedMetaProperty, {\n        at: node.property,\n        target: meta.name,\n        onlyValidPropertyName: propertyName\n      });\n    }\n    return this.finishNode(node, \"MetaProperty\");\n  }\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n    if (this.isContextual(100)) {\n      if (!this.inModule) {\n        this.raise(Errors.ImportMetaOutsideModule, {\n          at: id\n        });\n      }\n      this.sawUnambiguousESM = true;\n    }\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStartLoc;\n    let optionalCommaStartLoc;\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParametersLoc === null ? null : refExpressionErrors.optionalParametersLoc);\n        if (this.match(11)) {\n          optionalCommaStartLoc = this.state.startLoc;\n          break;\n        }\n      }\n      if (this.match(21)) {\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStartLoc = this.state.startLoc;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartLoc));\n        if (!this.checkCommaAfterRest(41)) {\n          break;\n        }\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startLoc);\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStartLoc);\n    }\n    if (optionalCommaStartLoc) this.unexpected(optionalCommaStartLoc);\n    if (spreadStartLoc) this.unexpected(spreadStartLoc);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n    return this.wrapParenthesis(startLoc, val);\n  }\n  wrapParenthesis(startLoc, expression) {\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(expression, \"parenthesized\", true);\n      this.addExtra(expression, \"parenStart\", startLoc.index);\n      this.takeSurroundingComments(expression, startLoc.index, this.state.lastTokEndLoc.index);\n      return expression;\n    }\n    const parenExpression = this.startNodeAt(startLoc);\n    parenExpression.expression = expression;\n    return this.finishNode(parenExpression, \"ParenthesizedExpression\");\n  }\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n  parseParenItem(node, startLoc) {\n    return node;\n  }\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass && !this.options.allowNewTargetOutsideFunction) {\n        this.raise(Errors.UnexpectedNewTarget, {\n          at: metaProp\n        });\n      }\n      return metaProp;\n    }\n    return this.parseNew(node);\n  }\n  parseNew(node) {\n    this.parseNewCallee(node);\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n    return this.finishNode(node, \"NewExpression\");\n  }\n  parseNewCallee(node) {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(Errors.ImportCallNotNewExpression, {\n        at: node.callee\n      });\n    }\n  }\n  parseTemplateElement(isTagged) {\n    const {\n      start,\n      startLoc,\n      end,\n      value\n    } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(createPositionWithColumnOffset(startLoc, 1));\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(Errors.InvalidEscapeSequenceTemplate, {\n          at: createPositionWithColumnOffset(this.state.firstInvalidTemplateEscapePos, 1)\n        });\n      }\n    }\n    const isTail = this.match(24);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset)\n    };\n    elem.tail = isTail;\n    this.next();\n    const finishedNode = this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(finishedNode, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\n    return finishedNode;\n  }\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          this.addTrailingCommaExtraToNode(node);\n          break;\n        }\n      }\n      let prop;\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(Errors.InvalidRecordProperty, {\n          at: prop\n        });\n      }\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n      node.properties.push(prop);\n    }\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n  addTrailingCommaExtraToNode(node) {\n    this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n    this.addExtra(node, \"trailingCommaLoc\", this.state.lastTokStartLoc, false);\n  }\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(55));\n  }\n  parsePropertyDefinition(refExpressionErrors) {\n    let decorators = [];\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(Errors.UnsupportedPropertyDecorator, {\n          at: this.state.startLoc\n        });\n      }\n      while (this.match(26)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startLoc;\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n    prop.method = false;\n    if (refExpressionErrors) {\n      startLoc = this.state.startLoc;\n    }\n    let isGenerator = this.eat(55);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, refExpressionErrors);\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(55);\n        this.parsePropertyName(prop);\n      }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n        if (this.match(55)) {\n          isGenerator = true;\n          this.raise(Errors.AccessorIsGenerator, {\n            at: this.state.curPosition(),\n            kind: keyName\n          });\n          this.next();\n        }\n        this.parsePropertyName(prop);\n      }\n    }\n    return this.parseObjPropValue(prop, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n  }\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n  checkGetterSetterParams(method) {\n    var _params;\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    if (params.length !== paramCount) {\n      this.raise(method.kind === \"get\" ? Errors.BadGetterArity : Errors.BadSetterArity, {\n        at: method\n      });\n    }\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(Errors.BadSetterRestParameter, {\n        at: method\n      });\n    }\n  }\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      const finishedProp = this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(finishedProp);\n      return finishedProp;\n    }\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n  parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.loc.start, true, false);\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(29)) {\n        const shorthandAssignLoc = this.state.startLoc;\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssignLoc === null) {\n            refExpressionErrors.shorthandAssignLoc = shorthandAssignLoc;\n          }\n        } else {\n          this.raise(Errors.InvalidCoverInitializedName, {\n            at: shorthandAssignLoc\n          });\n        }\n        prop.value = this.parseMaybeDefault(startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n  parseObjPropValue(prop, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n  parsePropertyName(prop, refExpressionErrors) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const {\n        type,\n        value\n      } = this.state;\n      let key;\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case 132:\n            key = this.parseNumericLiteral(value);\n            break;\n          case 131:\n            key = this.parseStringLiteral(value);\n            break;\n          case 133:\n            key = this.parseBigIntLiteral(value);\n            break;\n          case 134:\n            key = this.parseDecimalLiteral(value);\n            break;\n          case 136:\n            {\n              const privateKeyLoc = this.state.startLoc;\n              if (refExpressionErrors != null) {\n                if (refExpressionErrors.privateKeyLoc === null) {\n                  refExpressionErrors.privateKeyLoc = privateKeyLoc;\n                }\n              } else {\n                this.raise(Errors.UnexpectedPrivateField, {\n                  at: privateKeyLoc\n                });\n              }\n              key = this.parsePrivateName();\n              break;\n            }\n          default:\n            throw this.unexpected();\n        }\n      }\n      prop.key = key;\n      if (type !== 136) {\n        prop.computed = false;\n      }\n    }\n    return prop.key;\n  }\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = isAsync;\n  }\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = isGenerator;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, isConstructor);\n    const finishedNode = this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return finishedNode;\n  }\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n  parseArrowExpression(node, params, isAsync, trailingCommaLoc) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    if (!this.match(5) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaLoc);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n  setArrowFunctionParameters(node, params, trailingCommaLoc) {\n    this.toAssignableList(params, trailingCommaLoc, false);\n    node.params = params;\n  }\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    return this.finishNode(node, type);\n  }\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n        if (hasStrictModeDirective && nonSimple) {\n          this.raise(Errors.IllegalLanguageModeDirective, {\n            at: (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.loc.end : node\n          });\n        }\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n        if (this.state.strict && node.id) {\n          this.checkIdentifier(node.id, BIND_OUTSIDE, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n    this.expressionScope.exit();\n  }\n  isSimpleParameter(node) {\n    return node.type === \"Identifier\";\n  }\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (!this.isSimpleParameter(params[i])) return false;\n    }\n    return true;\n  }\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = !allowDuplicates && new Set();\n    const formalParameters = {\n      type: \"FormalParameters\"\n    };\n    for (const param of node.params) {\n      this.checkLVal(param, {\n        in: formalParameters,\n        binding: BIND_VAR,\n        checkClashes,\n        strictModeChanged\n      });\n    }\n  }\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addTrailingCommaExtraToNode(nodeForExtra);\n          }\n          this.next();\n          break;\n        }\n      }\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(Errors.UnexpectedToken, {\n          at: this.state.curPosition(),\n          unexpected: \",\"\n        });\n      }\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(Errors.UnexpectedArgumentPlaceholder, {\n          at: this.state.startLoc\n        });\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n    return elt;\n  }\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(liberal);\n    return this.createIdentifier(node, name);\n  }\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n  parseIdentifierName(liberal) {\n    let name;\n    const {\n      startLoc,\n      type\n    } = this.state;\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(130);\n      }\n    } else {\n      this.checkReservedWord(name, startLoc, tokenIsKeyword, false);\n    }\n    this.next();\n    return name;\n  }\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(Errors.UnexpectedKeyword, {\n        at: startLoc,\n        keyword: word\n      });\n      return;\n    }\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n    if (reservedTest(word, this.inModule)) {\n      this.raise(Errors.UnexpectedReservedWord, {\n        at: startLoc,\n        reservedWord: word\n      });\n      return;\n    } else if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(Errors.YieldBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(Errors.AwaitBindingIdentifier, {\n          at: startLoc\n        });\n        return;\n      }\n      if (this.scope.inStaticBlock) {\n        this.raise(Errors.AwaitBindingIdentifierInStaticBlock, {\n          at: startLoc\n        });\n        return;\n      }\n      this.expressionScope.recordAsyncArrowParametersError({\n        at: startLoc\n      });\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(Errors.ArgumentsInClass, {\n          at: startLoc\n        });\n        return;\n      }\n    }\n  }\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n  parseAwait(startLoc) {\n    const node = this.startNodeAt(startLoc);\n    this.expressionScope.recordParameterInitializerError(Errors.AwaitExpressionFormalParameter, {\n      at: node\n    });\n    if (this.eat(55)) {\n      this.raise(Errors.ObsoleteAwaitStar, {\n        at: node\n      });\n    }\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n  isAmbiguousAwait() {\n    if (this.hasPrecedingLineBreak()) return true;\n    const {\n      type\n    } = this.state;\n    return type === 53 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 101 && !this.state.containsEsc || type === 135 || type === 56 || this.hasPlugin(\"v8intrinsic\") && type === 54;\n  }\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(Errors.YieldInParameter, {\n      at: node\n    });\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(55);\n      switch (this.state.type) {\n        case 13:\n        case 137:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n  checkPipelineAtInfixOperator(left, leftStartLoc) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(Errors.PipelineHeadSequenceExpression, {\n          at: leftStartLoc\n        });\n      }\n    }\n  }\n  parseSmartPipelineBodyInStyle(childExpr, startLoc) {\n    if (this.isSimpleReference(childExpr)) {\n      const bodyNode = this.startNodeAt(startLoc);\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      const bodyNode = this.startNodeAt(startLoc);\n      this.checkSmartPipeTopicBodyEarlyErrors(startLoc);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n  checkSmartPipeTopicBodyEarlyErrors(startLoc) {\n    if (this.match(19)) {\n      throw this.raise(Errors.PipelineBodyNoArrow, {\n        at: this.state.startLoc\n      });\n    }\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(Errors.PipelineTopicUnused, {\n        at: startLoc\n      });\n    }\n  }\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n  withSmartMixTopicForbiddingContext(callback) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n  parseFSharpPipelineBody(prec) {\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    if (!this.match(5)) {\n      this.unexpected(null, 5);\n    }\n    const program = this.startNodeAt(this.state.endLoc);\n    this.next();\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n  parsePropertyNamePrefixOperator(prop) {}\n}\n\nconst loopLabel = {\n    kind: \"loop\"\n  },\n  switchLabel = {\n    kind: \"switch\"\n  };\nvar ParseFunctionFlag = {\n  Expression: 0,\n  Declaration: 1,\n  HangingDeclaration: 2,\n  NullableId: 4,\n  Async: 8\n};\nvar ParseStatementFlag = {\n  StatementOnly: 0,\n  AllowImportExport: 1,\n  AllowDeclaration: 2,\n  AllowFunctionDeclaration: 4,\n  AllowLabeledFunction: 8\n};\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\nfunction babel7CompatTokens(tokens, input) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n    if (typeof type === \"number\") {\n      {\n        if (type === 136) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(i, 1, new Token({\n            type: getExportedToken(27),\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc\n          }), new Token({\n            type: getExportedToken(130),\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end\n          }));\n          i++;\n          continue;\n        }\n        if (tokenIsTemplate(type)) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n          if (input.charCodeAt(start) === 96) {\n            startToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          } else {\n            startToken = new Token({\n              type: getExportedToken(8),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          }\n          let templateValue, templateElementEnd, templateElementEndLoc, endToken;\n          if (type === 24) {\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value === null ? null : value.slice(1, -1);\n            endToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          } else {\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value === null ? null : value.slice(1, -2);\n            endToken = new Token({\n              type: getExportedToken(23),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          }\n          tokens.splice(i, 1, startToken, new Token({\n            type: getExportedToken(20),\n            value: templateValue,\n            start: backquoteEnd,\n            end: templateElementEnd,\n            startLoc: backquoteEndLoc,\n            endLoc: templateElementEndLoc\n          }), endToken);\n          i += 2;\n          continue;\n        }\n      }\n      token.type = getExportedToken(type);\n    }\n  }\n  return tokens;\n}\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) {\n      file.tokens = babel7CompatTokens(this.tokens, this.input);\n    }\n    return this.finishNode(file, \"File\");\n  }\n  parseProgram(program, end = 137, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [localName, at] of Array.from(this.scope.undefinedExports)) {\n        this.raise(Errors.ModuleExportUndefined, {\n          at,\n          localName\n        });\n      }\n    }\n    let finishedProgram;\n    if (end === 137) {\n      finishedProgram = this.finishNode(program, \"Program\");\n    } else {\n      finishedProgram = this.finishNodeAt(program, \"Program\", createPositionWithColumnOffset(this.state.startLoc, -1));\n    }\n    return finishedProgram;\n  }\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n  parseInterpreterDirective() {\n    if (!this.match(28)) {\n      return null;\n    }\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n  isLet() {\n    if (!this.isContextual(99)) {\n      return false;\n    }\n    return this.hasFollowingBindingAtom();\n  }\n  chStartsBindingIdentifier(ch, pos) {\n    if (isIdentifierStart(ch)) {\n      keywordRelationalOperator.lastIndex = pos;\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n      return true;\n    } else if (ch === 92) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  chStartsBindingPattern(ch) {\n    return ch === 91 || ch === 123;\n  }\n  hasFollowingBindingAtom() {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingPattern(nextCh) || this.chStartsBindingIdentifier(nextCh, next);\n  }\n  hasFollowingBindingIdentifier() {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    return this.chStartsBindingIdentifier(nextCh, next);\n  }\n  startsUsingForOf() {\n    const lookahead = this.lookahead();\n    if (lookahead.type === 101 && !lookahead.containsEsc) {\n      return false;\n    } else {\n      this.expectPlugin(\"explicitResourceManagement\");\n      return true;\n    }\n  }\n  parseModuleItem() {\n    return this.parseStatementLike(ParseStatementFlag.AllowImportExport | ParseStatementFlag.AllowDeclaration | ParseStatementFlag.AllowFunctionDeclaration | ParseStatementFlag.AllowLabeledFunction);\n  }\n  parseStatementListItem() {\n    return this.parseStatementLike(ParseStatementFlag.AllowDeclaration | ParseStatementFlag.AllowFunctionDeclaration | (!this.options.annexB || this.state.strict ? 0 : ParseStatementFlag.AllowLabeledFunction));\n  }\n  parseStatementOrSloppyAnnexBFunctionDeclaration(allowLabeledFunction = false) {\n    let flags = ParseStatementFlag.StatementOnly;\n    if (this.options.annexB && !this.state.strict) {\n      flags |= ParseStatementFlag.AllowFunctionDeclaration;\n      if (allowLabeledFunction) {\n        flags |= ParseStatementFlag.AllowLabeledFunction;\n      }\n    }\n    return this.parseStatementLike(flags);\n  }\n  parseStatement() {\n    return this.parseStatementLike(ParseStatementFlag.StatementOnly);\n  }\n  parseStatementLike(flags) {\n    let decorators = null;\n    if (this.match(26)) {\n      decorators = this.parseDecorators(true);\n    }\n    return this.parseStatementContent(flags, decorators);\n  }\n  parseStatementContent(flags, decorators) {\n    const starttype = this.state.type;\n    const node = this.startNode();\n    const allowDeclaration = !!(flags & ParseStatementFlag.AllowDeclaration);\n    const allowFunctionDeclaration = !!(flags & ParseStatementFlag.AllowFunctionDeclaration);\n    const topLevel = flags & ParseStatementFlag.AllowImportExport;\n    switch (starttype) {\n      case 60:\n        return this.parseBreakContinueStatement(node, true);\n      case 63:\n        return this.parseBreakContinueStatement(node, false);\n      case 64:\n        return this.parseDebuggerStatement(node);\n      case 90:\n        return this.parseDoWhileStatement(node);\n      case 91:\n        return this.parseForStatement(node);\n      case 68:\n        if (this.lookaheadCharCode() === 46) break;\n        if (!allowFunctionDeclaration) {\n          this.raise(this.state.strict ? Errors.StrictFunction : this.options.annexB ? Errors.SloppyFunctionAnnexB : Errors.SloppyFunction, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseFunctionStatement(node, false, !allowDeclaration && allowFunctionDeclaration);\n      case 80:\n        if (!allowDeclaration) this.unexpected();\n        return this.parseClass(this.maybeTakeDecorators(decorators, node), true);\n      case 69:\n        return this.parseIfStatement(node);\n      case 70:\n        return this.parseReturnStatement(node);\n      case 71:\n        return this.parseSwitchStatement(node);\n      case 72:\n        return this.parseThrowStatement(node);\n      case 73:\n        return this.parseTryStatement(node);\n      case 105:\n        if (this.hasFollowingLineBreak() || this.state.containsEsc || !this.hasFollowingBindingIdentifier()) {\n          break;\n        }\n        this.expectPlugin(\"explicitResourceManagement\");\n        if (!this.scope.inModule && this.scope.inTopLevel) {\n          this.raise(Errors.UnexpectedUsingDeclaration, {\n            at: this.state.startLoc\n          });\n        } else if (!allowDeclaration) {\n          this.raise(Errors.UnexpectedLexicalDeclaration, {\n            at: this.state.startLoc\n          });\n        }\n        return this.parseVarStatement(node, \"using\");\n      case 99:\n        {\n          if (this.state.containsEsc) {\n            break;\n          }\n          const next = this.nextTokenStart();\n          const nextCh = this.codePointAtPos(next);\n          if (nextCh !== 91) {\n            if (!allowDeclaration && this.hasFollowingLineBreak()) break;\n            if (!this.chStartsBindingIdentifier(nextCh, next) && nextCh !== 123) {\n              break;\n            }\n          }\n        }\n      case 75:\n        {\n          if (!allowDeclaration) {\n            this.raise(Errors.UnexpectedLexicalDeclaration, {\n              at: this.state.startLoc\n            });\n          }\n        }\n      case 74:\n        {\n          const kind = this.state.value;\n          return this.parseVarStatement(node, kind);\n        }\n      case 92:\n        return this.parseWhileStatement(node);\n      case 76:\n        return this.parseWithStatement(node);\n      case 5:\n        return this.parseBlock();\n      case 13:\n        return this.parseEmptyStatement(node);\n      case 83:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n      case 82:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(Errors.UnexpectedImportExport, {\n              at: this.state.startLoc\n            });\n          }\n          this.next();\n          let result;\n          if (starttype === 83) {\n            result = this.parseImport(node);\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node, decorators);\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n          this.assertModuleNodeAllowed(result);\n          return result;\n        }\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (!allowDeclaration) {\n              this.raise(Errors.AsyncFunctionInSingleStatementContext, {\n                at: this.state.startLoc\n              });\n            }\n            this.next();\n            return this.parseFunctionStatement(node, true, !allowDeclaration && allowFunctionDeclaration);\n          }\n        }\n    }\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, flags);\n    } else {\n      return this.parseExpressionStatement(node, expr, decorators);\n    }\n  }\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(Errors.ImportOutsideModule, {\n        at: node\n      });\n    }\n  }\n  decoratorsEnabledBeforeExport() {\n    if (this.hasPlugin(\"decorators-legacy\")) return true;\n    return this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== false;\n  }\n  maybeTakeDecorators(maybeDecorators, classNode, exportNode) {\n    if (maybeDecorators) {\n      if (classNode.decorators && classNode.decorators.length > 0) {\n        if (typeof this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") !== \"boolean\") {\n          this.raise(Errors.DecoratorsBeforeAfterExport, {\n            at: classNode.decorators[0]\n          });\n        }\n        classNode.decorators.unshift(...maybeDecorators);\n      } else {\n        classNode.decorators = maybeDecorators;\n      }\n      this.resetStartLocationFromNode(classNode, maybeDecorators[0]);\n      if (exportNode) this.resetStartLocationFromNode(exportNode, classNode);\n    }\n    return classNode;\n  }\n  canHaveLeadingDecorator() {\n    return this.match(80);\n  }\n  parseDecorators(allowExport) {\n    const decorators = [];\n    do {\n      decorators.push(this.parseDecorator());\n    } while (this.match(26));\n    if (this.match(82)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n      if (!this.decoratorsEnabledBeforeExport()) {\n        this.raise(Errors.DecoratorExportClass, {\n          at: this.state.startLoc\n        });\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(Errors.UnexpectedLeadingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n    return decorators;\n  }\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n    const node = this.startNode();\n    this.next();\n    if (this.hasPlugin(\"decorators\")) {\n      const startLoc = this.state.startLoc;\n      let expr;\n      if (this.match(10)) {\n        const startLoc = this.state.startLoc;\n        this.next();\n        expr = this.parseExpression();\n        this.expect(11);\n        expr = this.wrapParenthesis(startLoc, expr);\n        const paramsStartLoc = this.state.startLoc;\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        if (this.getPluginOption(\"decorators\", \"allowCallParenthesized\") === false && node.expression !== expr) {\n          this.raise(Errors.DecoratorArgumentsOutsideParentheses, {\n            at: paramsStartLoc\n          });\n        }\n      } else {\n        expr = this.parseIdentifier(false);\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startLoc);\n          node.object = expr;\n          if (this.match(136)) {\n            this.classScope.usePrivateName(this.state.value, this.state.startLoc);\n            node.property = this.parsePrivateName();\n          } else {\n            node.property = this.parseIdentifier(true);\n          }\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n      }\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n    return expr;\n  }\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n  verifyBreakContinue(node, isBreak) {\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      const type = isBreak ? \"BreakStatement\" : \"ContinueStatement\";\n      this.raise(Errors.IllegalBreakContinue, {\n        at: node,\n        type\n      });\n    }\n  }\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n  parseDoWhileStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    this.expect(92);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = null;\n    if (this.isAwaitAllowed() && this.eatContextual(96)) {\n      awaitAt = this.state.lastTokStartLoc;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(10);\n    if (this.match(13)) {\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n    const startsWithLet = this.isContextual(99);\n    const startsWithUsing = this.isContextual(105) && !this.hasFollowingLineBreak();\n    const isLetOrUsing = startsWithLet && this.hasFollowingBindingAtom() || startsWithUsing && this.hasFollowingBindingIdentifier() && this.startsUsingForOf();\n    if (this.match(74) || this.match(75) || isLetOrUsing) {\n      const initNode = this.startNode();\n      const kind = this.state.value;\n      this.next();\n      this.parseVar(initNode, true, kind);\n      const init = this.finishNode(initNode, \"VariableDeclaration\");\n      const isForIn = this.match(58);\n      if (isForIn && startsWithUsing) {\n        this.raise(Errors.ForInUsing, {\n          at: init\n        });\n      }\n      if ((isForIn || this.isContextual(101)) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt !== null) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n    const startsWithAsync = this.isContextual(95);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(101);\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(Errors.ForOfLet, {\n          at: init\n        });\n      }\n      if (awaitAt === null && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(Errors.ForOfAsync, {\n          at: init\n        });\n      }\n    }\n    if (isForOf || this.match(58)) {\n      this.checkDestructuringPrivate(refExpressionErrors);\n      this.toAssignable(init, true);\n      const type = isForOf ? \"ForOfStatement\" : \"ForInStatement\";\n      this.checkLVal(init, {\n        in: {\n          type\n        }\n      });\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt !== null) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n  parseFunctionStatement(node, isAsync, isHangingDeclaration) {\n    this.next();\n    return this.parseFunction(node, ParseFunctionFlag.Declaration | (isHangingDeclaration ? ParseFunctionFlag.HangingDeclaration : 0) | (isAsync ? ParseFunctionFlag.Async : 0));\n  }\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatementOrSloppyAnnexBFunctionDeclaration();\n    node.alternate = this.eat(66) ? this.parseStatementOrSloppyAnnexBFunctionDeclaration() : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(Errors.IllegalReturn, {\n        at: this.state.startLoc\n      });\n    }\n    this.next();\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(61) || this.match(65)) {\n        const isCase = this.match(61);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(Errors.MultipleDefaultsInSwitch, {\n              at: this.state.lastTokStartLoc\n            });\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatementListItem());\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n  parseThrowStatement(node) {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(Errors.NewlineAfterThrow, {\n        at: this.state.lastTokEndLoc\n      });\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    this.scope.enter(this.options.annexB && param.type === \"Identifier\" ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, {\n      in: {\n        type: \"CatchClause\"\n      },\n      binding: BIND_CATCH_PARAM\n    });\n    return param;\n  }\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.match(62)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(67) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer) {\n      this.raise(Errors.NoCatchOrFinally, {\n        at: node\n      });\n    }\n    return this.finishNode(node, \"TryStatement\");\n  }\n  parseVarStatement(node, kind, allowMissingInitializer = false) {\n    this.next();\n    this.parseVar(node, false, kind, allowMissingInitializer);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(Errors.StrictWith, {\n        at: this.state.startLoc\n      });\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    return this.finishNode(node, \"WithStatement\");\n  }\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n  parseLabeledStatement(node, maybeName, expr, flags) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(Errors.LabelRedeclaration, {\n          at: expr,\n          labelName: maybeName\n        });\n      }\n    }\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(71) ? \"switch\" : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = flags & ParseStatementFlag.AllowLabeledFunction ? this.parseStatementOrSloppyAnnexBFunctionDeclaration(true) : this.parseStatement();\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n  parseExpressionStatement(node, expr, decorators) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(5);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n    while (!this.match(end)) {\n      const stmt = topLevel ? this.parseModuleItem() : this.parseStatementListItem();\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n          continue;\n        }\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n    this.next();\n  }\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(58);\n    this.next();\n    if (isForIn) {\n      if (awaitAt !== null) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt !== null;\n    }\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || !this.options.annexB || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(Errors.ForInOfLoopInitializer, {\n        at: init,\n        type: isForIn ? \"ForInStatement\" : \"ForOfStatement\"\n      });\n    }\n    if (init.type === \"AssignmentPattern\") {\n      this.raise(Errors.InvalidLhs, {\n        at: init,\n        ancestor: {\n          type: \"ForStatement\"\n        }\n      });\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement());\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n  parseVar(node, isFor, kind, allowMissingInitializer = false) {\n    const declarations = node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      decl.init = !this.eat(29) ? null : isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      if (decl.init === null && !allowMissingInitializer) {\n        if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(58) || this.isContextual(101)))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"destructuring\"\n          });\n        } else if (kind === \"const\" && !(this.match(58) || this.isContextual(101))) {\n          this.raise(Errors.DeclarationMissingInitializer, {\n            at: this.state.lastTokEndLoc,\n            kind: \"const\"\n          });\n        }\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n    return node;\n  }\n  parseVarId(decl, kind) {\n    if (kind === \"using\" && !this.inModule && this.match(96)) {\n      this.raise(Errors.AwaitInUsingBinding, {\n        at: this.state.startLoc\n      });\n    }\n    const id = this.parseBindingAtom();\n    this.checkLVal(id, {\n      in: {\n        type: \"VariableDeclarator\"\n      },\n      binding: kind === \"var\" ? BIND_VAR : BIND_LEXICAL\n    });\n    decl.id = id;\n  }\n  parseAsyncFunctionExpression(node) {\n    return this.parseFunction(node, ParseFunctionFlag.Async);\n  }\n  parseFunction(node, flags = ParseFunctionFlag.Expression) {\n    const hangingDeclaration = flags & ParseFunctionFlag.HangingDeclaration;\n    const isDeclaration = !!(flags & ParseFunctionFlag.Declaration);\n    const requireId = isDeclaration && !(flags & ParseFunctionFlag.NullableId);\n    const isAsync = !!(flags & ParseFunctionFlag.Async);\n    this.initFunction(node, isAsync);\n    if (this.match(55)) {\n      if (hangingDeclaration) {\n        this.raise(Errors.GeneratorInSingleStatementContext, {\n          at: this.state.startLoc\n        });\n      }\n      this.next();\n      node.generator = true;\n    }\n    if (isDeclaration) {\n      node.id = this.parseFunctionId(requireId);\n    }\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    if (!isDeclaration) {\n      node.id = this.parseFunctionId();\n    }\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isDeclaration ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n    if (isDeclaration && !hangingDeclaration) {\n      this.registerFunctionStatementId(node);\n    }\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n  parseFunctionParams(node, isConstructor) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, ParseBindingListFlags.IS_FUNCTION_PARAMS | (isConstructor ? ParseBindingListFlags.IS_CONSTRUCTOR_PARAMS : 0));\n    this.expressionScope.exit();\n  }\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, !this.options.annexB || this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.loc.start);\n  }\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n  isClassProperty() {\n    return this.match(29) || this.match(13) || this.match(8);\n  }\n  isClassMethod() {\n    return this.match(10);\n  }\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(Errors.DecoratorSemicolon, {\n              at: this.state.lastTokEndLoc\n            });\n          }\n          continue;\n        }\n        if (this.match(26)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n        const member = this.startNode();\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n        this.parseClassMember(classBody, member, state);\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(Errors.DecoratorConstructor, {\n            at: member\n          });\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n    if (decorators.length) {\n      throw this.raise(Errors.TrailingDecorator, {\n        at: this.state.startLoc\n      });\n    }\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(104);\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const accessorProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n    if (this.eat(55)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(136);\n      this.parseClassElementName(method);\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(Errors.ConstructorIsGenerator, {\n          at: publicMethod.key\n        });\n      }\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(136);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStartLoc = this.state.startLoc;\n    this.parsePostMemberNameModifiers(publicMember);\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(Errors.DuplicateConstructor, {\n            at: key\n          });\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(Errors.OverrideOnConstructor, {\n            at: key\n          });\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(55);\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStartLoc);\n      }\n      method.kind = \"method\";\n      const isPrivate = this.match(136);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAsync, {\n            at: publicMethod.key\n          });\n        }\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(55) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(136);\n      this.parseClassElementName(publicMethod);\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(Errors.ConstructorIsAccessor, {\n            at: publicMethod.key\n          });\n        }\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n      this.checkGetterSetterParams(publicMethod);\n    } else if (isContextual && key.name === \"accessor\" && !this.isLineTerminator()) {\n      this.expectPlugin(\"decoratorAutoAccessors\");\n      this.resetPreviousNodeTrailingComments(key);\n      const isPrivate = this.match(136);\n      this.parseClassElementName(publicProp);\n      this.pushClassAccessorProperty(classBody, accessorProp, isPrivate);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n  parseClassElementName(member) {\n    const {\n      type,\n      value\n    } = this.state;\n    if ((type === 130 || type === 131) && member.static && value === \"prototype\") {\n      this.raise(Errors.StaticPrototype, {\n        at: this.state.startLoc\n      });\n    }\n    if (type === 136) {\n      if (value === \"constructor\") {\n        this.raise(Errors.ConstructorClassPrivateField, {\n          at: this.state.startLoc\n        });\n      }\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n    return this.parsePropertyName(member);\n  }\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(Errors.DecoratorStaticBlock, {\n        at: member\n      });\n    }\n  }\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(Errors.ConstructorClassField, {\n        at: prop.key\n      });\n    }\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\n  }\n  pushClassAccessorProperty(classBody, prop, isPrivate) {\n    if (!isPrivate && !prop.computed) {\n      const key = prop.key;\n      if (key.name === \"constructor\" || key.value === \"constructor\") {\n        this.raise(Errors.ConstructorClassField, {\n          at: key\n        });\n      }\n    }\n    const node = this.parseClassAccessorProperty(prop);\n    classBody.body.push(node);\n    if (isPrivate) {\n      this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.loc.start);\n    }\n  }\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.loc.start);\n  }\n  parsePostMemberNameModifiers(methodOrProp) {}\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n  parseClassAccessorProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassAccessorProperty\");\n  }\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.declareNameFromIdentifier(node.id, bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        throw this.raise(Errors.MissingClassName, {\n          at: this.state.startLoc\n        });\n      }\n    }\n  }\n  parseClassSuper(node) {\n    node.superClass = this.eat(81) ? this.parseExprSubscripts() : null;\n  }\n  parseExport(node, decorators) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) {\n      throw this.unexpected(null, 5);\n    }\n    if (hasNamespace && parseAfterNamespace) {\n      throw this.unexpected(null, 97);\n    }\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      var _node2$declaration;\n      const node2 = node;\n      this.checkExport(node2, true, false, !!node2.source);\n      if (((_node2$declaration = node2.declaration) == null ? void 0 : _node2$declaration.type) === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, node2.declaration, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      return this.finishNode(node2, \"ExportNamedDeclaration\");\n    }\n    if (this.eat(65)) {\n      const node2 = node;\n      const decl = this.parseExportDefaultExpression();\n      node2.declaration = decl;\n      if (decl.type === \"ClassDeclaration\") {\n        this.maybeTakeDecorators(decorators, decl, node2);\n      } else if (decorators) {\n        throw this.raise(Errors.UnsupportedDecoratorExport, {\n          at: node\n        });\n      }\n      this.checkExport(node2, true, true);\n      return this.finishNode(node2, \"ExportDefaultDeclaration\");\n    }\n    throw this.unexpected(null, 5);\n  }\n  eatExportStar(node) {\n    return this.eat(55);\n  }\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(93)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      return true;\n    }\n    return false;\n  }\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n  isAsyncFunction() {\n    if (!this.isContextual(95)) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    if (this.match(68)) {\n      this.next();\n      return this.parseFunction(expr, ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId);\n    } else if (this.isAsyncFunction()) {\n      this.next();\n      this.next();\n      return this.parseFunction(expr, ParseFunctionFlag.Declaration | ParseFunctionFlag.NullableId | ParseFunctionFlag.Async);\n    }\n    if (this.match(80)) {\n      return this.parseClass(expr, true, true);\n    }\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\n        this.raise(Errors.DecoratorBeforeExport, {\n          at: this.state.startLoc\n        });\n      }\n      return this.parseClass(this.maybeTakeDecorators(this.parseDecorators(false), this.startNode()), true, true);\n    }\n    if (this.match(75) || this.match(74) || this.isLet()) {\n      throw this.raise(Errors.UnsupportedDefaultExport, {\n        at: this.state.startLoc\n      });\n    }\n    const res = this.parseMaybeAssignAllowIn();\n    this.semicolon();\n    return res;\n  }\n  parseExportDeclaration(node) {\n    if (this.match(80)) {\n      const node = this.parseClass(this.startNode(), true, false);\n      return node;\n    }\n    return this.parseStatementListItem();\n  }\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n    if (tokenIsIdentifier(type)) {\n      if (type === 95 && !this.state.containsEsc || type === 99) {\n        return false;\n      }\n      if ((type === 128 || type === 127) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n        if (tokenIsIdentifier(nextType) && nextType !== 97 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(65)) {\n      return false;\n    }\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n    if (this.match(65) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n    return false;\n  }\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(97)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n        this.checkJSONModuleImport(node);\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n    this.semicolon();\n  }\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n    if (type === 26) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\") === true) {\n          this.raise(Errors.DecoratorBeforeExport, {\n            at: this.state.startLoc\n          });\n        }\n        return true;\n      }\n    }\n    return type === 74 || type === 75 || type === 68 || type === 80 || this.isLet() || this.isAsyncFunction();\n  }\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n          const declaration = node.declaration;\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(Errors.ExportDefaultFromAsIdentifier, {\n              at: declaration\n            });\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportName);\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(Errors.ExportBindingIsString, {\n                at: specifier,\n                localName: local.value,\n                exportName\n              });\n            } else {\n              this.checkReservedWord(local.name, local.loc.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n  }\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n  checkDuplicateExports(node, exportName) {\n    if (this.exportedIdentifiers.has(exportName)) {\n      if (exportName === \"default\") {\n        this.raise(Errors.DuplicateDefaultExport, {\n          at: node\n        });\n      } else {\n        this.raise(Errors.DuplicateExport, {\n          at: node,\n          exportName\n        });\n      }\n    }\n    this.exportedIdentifiers.add(exportName);\n  }\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const isMaybeTypeOnly = this.isContextual(128);\n      const isString = this.match(131);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n    return nodes;\n  }\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(93)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n  parseModuleExportName() {\n    if (this.match(131)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(Errors.ModuleExportNameHasLoneSurrogate, {\n          at: result,\n          surrogateCharCode: surrogate[0].charCodeAt(0)\n        });\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n  isJSONModuleImport(node) {\n    if (node.assertions != null) {\n      return node.assertions.some(({\n        key,\n        value\n      }) => {\n        return value.value === \"json\" && (key.type === \"Identifier\" ? key.name === \"type\" : key.value === \"type\");\n      });\n    }\n    return false;\n  }\n  checkImportReflection(node) {\n    if (node.module) {\n      var _node$assertions;\n      if (node.specifiers.length !== 1 || node.specifiers[0].type !== \"ImportDefaultSpecifier\") {\n        this.raise(Errors.ImportReflectionNotBinding, {\n          at: node.specifiers[0].loc.start\n        });\n      }\n      if (((_node$assertions = node.assertions) == null ? void 0 : _node$assertions.length) > 0) {\n        this.raise(Errors.ImportReflectionHasAssertion, {\n          at: node.specifiers[0].loc.start\n        });\n      }\n    }\n  }\n  checkJSONModuleImport(node) {\n    if (this.isJSONModuleImport(node) && node.type !== \"ExportAllDeclaration\") {\n      const {\n        specifiers\n      } = node;\n      if (specifiers != null) {\n        const nonDefaultNamedSpecifier = specifiers.find(specifier => {\n          let imported;\n          if (specifier.type === \"ExportSpecifier\") {\n            imported = specifier.local;\n          } else if (specifier.type === \"ImportSpecifier\") {\n            imported = specifier.imported;\n          }\n          if (imported !== undefined) {\n            return imported.type === \"Identifier\" ? imported.name !== \"default\" : imported.value !== \"default\";\n          }\n        });\n        if (nonDefaultNamedSpecifier !== undefined) {\n          this.raise(Errors.ImportJSONBindingNotDefault, {\n            at: nonDefaultNamedSpecifier.loc.start\n          });\n        }\n      }\n    }\n  }\n  parseMaybeImportReflection(node) {\n    let isImportReflection = false;\n    if (this.isContextual(125)) {\n      const lookahead = this.lookahead();\n      const nextType = lookahead.type;\n      if (tokenIsIdentifier(nextType)) {\n        if (nextType !== 97) {\n          isImportReflection = true;\n        } else {\n          const nextNextTokenFirstChar = this.input.charCodeAt(this.nextTokenStartSince(lookahead.end));\n          if (nextNextTokenFirstChar === 102) {\n            isImportReflection = true;\n          }\n        }\n      } else if (nextType !== 12) {\n        isImportReflection = true;\n      }\n    }\n    if (isImportReflection) {\n      this.expectPlugin(\"importReflection\");\n      this.next();\n      node.module = true;\n    } else if (this.hasPlugin(\"importReflection\")) {\n      node.module = false;\n    }\n  }\n  parseImport(node) {\n    node.specifiers = [];\n    if (!this.match(131)) {\n      this.parseMaybeImportReflection(node);\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(12);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(97);\n    }\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n    this.checkImportReflection(node);\n    this.checkJSONModuleImport(node);\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n  parseImportSource() {\n    if (!this.match(131)) this.unexpected();\n    return this.parseExprAtom();\n  }\n  shouldParseDefaultImport(node) {\n    return tokenIsIdentifier(this.state.type);\n  }\n  parseImportSpecifierLocal(node, specifier, type) {\n    specifier.local = this.parseIdentifier();\n    node.specifiers.push(this.finishImportSpecifier(specifier, type));\n  }\n  finishImportSpecifier(specifier, type, bindingType = BIND_LEXICAL) {\n    this.checkLVal(specifier.local, {\n      in: {\n        type\n      },\n      binding: bindingType\n    });\n    return this.finishNode(specifier, type);\n  }\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n    do {\n      if (this.match(8)) {\n        break;\n      }\n      const node = this.startNode();\n      const keyName = this.state.value;\n      if (attrNames.has(keyName)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: this.state.startLoc,\n          key: keyName\n        });\n      }\n      attrNames.add(keyName);\n      if (this.match(131)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(14);\n      if (!this.match(131)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      attrs.push(this.finishNode(node, \"ImportAttribute\"));\n    } while (this.eat(12));\n    return attrs;\n  }\n  maybeParseModuleAttributes() {\n    if (this.match(76) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n      if (node.key.name !== \"type\") {\n        this.raise(Errors.ModuleAttributeDifferentFromType, {\n          at: node.key\n        });\n      }\n      if (attributes.has(node.key.name)) {\n        this.raise(Errors.ModuleAttributesWithDuplicateKeys, {\n          at: node.key,\n          key: node.key.name\n        });\n      }\n      attributes.add(node.key.name);\n      this.expect(14);\n      if (!this.match(131)) {\n        throw this.raise(Errors.ModuleAttributeInvalidValue, {\n          at: this.state.startLoc\n        });\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n    return attrs;\n  }\n  maybeParseImportAssertions() {\n    if (this.isContextual(94) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    this.eat(5);\n    const attrs = this.parseAssertEntries();\n    this.eat(8);\n    return attrs;\n  }\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(55)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(93);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\");\n      return true;\n    }\n    return false;\n  }\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(Errors.DestructureNamedImport, {\n            at: this.state.startLoc\n          });\n        }\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n      const specifier = this.startNode();\n      const importedIsString = this.match(131);\n      const isMaybeTypeOnly = this.isContextual(128);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly, undefined);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly, bindingType) {\n    if (this.eatContextual(93)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n      if (importedIsString) {\n        throw this.raise(Errors.ImportBindingIsString, {\n          at: specifier,\n          importName: imported.value\n        });\n      }\n      this.checkReservedWord(imported.name, specifier.loc.start, true, true);\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n    return this.finishImportSpecifier(specifier, \"ImportSpecifier\", bindingType);\n  }\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n  return tokenTypes;\n}\nconst tokTypes = generateExportedTokenTypes(tt);\nfunction getParser(options, input) {\n  let cls = Parser;\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n  return new cls(options, input);\n}\nconst parserClassCache = {};\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = tokTypes;\n//# sourceMappingURL=index.js.map\n"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","defineProperty","exports","value","Position","constructor","line","col","index","this","column","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset","ParseErrorCode","SyntaxError","SourceTypeModuleError","reflect","last","get","reduce","object","set","item","instantiate","properties","descriptors","map","filter","descriptor","enumerable","assign","split","instance","configurable","ModuleErrors","ImportMetaOutsideModule","message","code","ImportOutsideModule","NodeDescriptions","ArrayPattern","AssignmentExpression","AssignmentPattern","ArrowFunctionExpression","ConditionalExpression","CatchClause","ForOfStatement","ForInStatement","ForStatement","FormalParameters","Identifier","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","ObjectPattern","ParenthesizedExpression","RestElement","UpdateExpression","true","false","VariableDeclarator","YieldExpression","toNodeDescription","type","prefix","String","StandardErrors","AccessorIsGenerator","kind","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitInUsingBinding","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorArgumentsOutsideParentheses","DecoratorBeforeExport","DecoratorsBeforeAfterExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","exportName","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","localName","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForInUsing","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","importName","ImportCallArgumentTrailingComma","ImportCallArity","maxArgumentCount","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportJSONBindingNotDefault","ImportReflectionHasAssertion","ImportReflectionNotBinding","IncompatibleRegExpUVFlags","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","radix","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","reservedWord","InvalidIdentifier","InvalidLhs","ancestor","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","unexpected","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","labelName","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingPlugin","missingPlugin","name","JSON","stringify","join","MissingOneOfPlugins","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","surrogateCharCode","toString","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","SloppyFunctionAnnexB","StaticPrototype","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","keyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","expected","UnexpectedTokenUnaryExponentiation","UnexpectedUsingDeclaration","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","onlyValidPropertyName","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","UsingDeclarationHasBindingPattern","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","UnparenthesizedPipeBodyDescriptions","Set","PipelineOperatorErrors","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","token","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","_excluded$1","_excluded2$1","toParseErrorConstructor","_ref","toMessage","loc","details","clone","overrides","pos","ParseErrorEnum","argument","syntaxPlugin","Array","isArray","parseErrorTemplates","ParseErrorConstructors","reasonCode","template","_ref2","rest","Errors","StrictDelete","StrictEvalArguments","referenceName","StrictEvalArgumentsBinding","bindingName","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","toUnenumerable","toESTreeLocation","node","TokContext","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","ExportedTokenType","label","conf","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","options","createToken","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","push","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_using","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_satisfies","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","bigint","decimal","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenCanStartExpression","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsKeyword","tokenLabelName","tokenOperatorPrecedence","tokenIsTemplate","getExportedToken","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","has","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_FLAGS_TS_IMPORT","BIND_FLAGS_NO_LET_IN_LEXICAL","BIND_LEXICAL","BIND_KIND_VALUE","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","parser","scopeStack","undefinedExports","inTopLevel","currentScope","inFunction","currentVarScopeFlags","allowSuper","currentThisScopeFlags","allowDirectSuper","inClass","inClassAndNotInNonArrowFunction","inStaticBlock","inNonArrowFunction","treatFunctionsAsVar","treatFunctionsAsVarInScope","createScope","enter","exit","scope","declareName","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","raise","values","next","checkLocalExport","id","topLevelScope","FlowScope","args","super","declareFunctions","FlowScopeHandler","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","pluginConfig","plugins","pluginName","pluginOptions","actualOptions","getPluginOption","plugin","_this$plugins$get","setTrailingComments","comments","undefined","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","addComment","comment","state","processComment","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","setLeadingComments","commentStart","input","charCodeAt","arguments","params","specifiers","finalizeRemainingComments","resetPreviousNodeTrailingComments","takeSurroundingComments","lineBreak","lineBreakG","isNewLine","skipWhiteSpace","skipWhiteSpaceToLineBreak","isWhitespace","State","strict","curLine","lineStart","startLoc","endLoc","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","lastTokEndLoc","lastTokStartLoc","lastTokStart","canStartJSXElement","containsEsc","firstInvalidTemplateEscapePos","strictErrors","tokensLength","init","strictMode","sourceType","startLine","startColumn","curPosition","skipArrays","val","slice","_isDigit","forbiddenNumericSeparatorSiblings","decBinOct","hex","isAllowedNumericSeparatorSibling","bin","ch","oct","dec","readStringContents","initialPos","initialLineStart","initialCurLine","out","firstInvalidLoc","chunkStart","unterminated","isStringEnd","res","readEscapedChar","str","containsInvalid","inTemplate","throwOnInvalid","readHexChar","readCodePoint","fromCodePoint","strictNumericEscape","startPos","octalStr","match","octal","parseInt","len","forceLen","n","readInt","invalidEscapeSequence","allowNumSeparator","bailOnError","forbiddenSiblings","isAllowedSibling","invalid","total","e","Infinity","invalidDigit","prev","Number","isNaN","unexpectedNumericSeparator","numericSeparatorInEscapeSequence","invalidCodePoint","_excluded","_excluded2","buildPosition","VALID_REGEX_FLAGS","Token","Tokenizer","isLookahead","tokens","errorHandlers_readInt","errorRecovery","errorBuilder","errorHandlers_readCodePoint","errorHandlers_readStringContents_string","recordStrictModeErrors","errorHandlers_readStringContents_template","pushToken","checkKeywordEscapes","nextToken","eat","createLookaheadState","curContext","lookahead","old","curr","nextTokenStart","nextTokenStartSince","lastIndex","lookaheadCharCode","codePointAtPos","cp","trail","setStrict","forEach","toParseError","clear","skipSpace","finishToken","getTokenFromCode","skipBlockComment","skipLineComment","startSkip","spaceStart","loop","attachComment","annexB","commentWhitespace","prevType","replaceToken","readToken_numberSign","readToken_interpreter","nextPos","expectPlugin","readWord1","finishOp","readToken_dot","readNumber","readToken_slash","readToken_mult_modulo","width","readToken_pipe_amp","readToken_caret","proposal","topicToken","codePointAt","readToken_atSign","readToken_plus_min","readToken_lt","readToken_gt","size","readToken_eq_excl","readToken_question","next2","readTemplateToken","readRadixNumber","readString","readWord","readRegexp","escaped","content","mods","char","includes","pattern","isBigInt","replace","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","parseFloat","quote","readTemplateContinuation","opening","firstCode","escStart","identifierCheck","esc","raiseProperties","error","raiseOverwrite","expectOnePlugin","pluginNames","some","ClassScope","privateNames","loneAccessors","undefinedPrivateNames","ClassScopeHandler","stack","current","oldClassScope","from","declarePrivateName","elementType","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","usePrivateName","classScope","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","declarationErrors","recordDeclarationError","ParsingErrorClass","clearDeclarationError","iterateErrors","iterator","ExpressionScopeHandler","recordParameterInitializerError","origin","recordArrowParameterBindingError","recordAsyncArrowParametersError","validateAsPattern","newExpressionScope","PARAM_YIELD","PARAM_AWAIT","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","functionFlags","isAsync","isGenerator","UtilParser","addExtra","extra","isContextual","isUnparsedContextual","nameStart","nameEnd","nextCh","isLookaheadContextual","eatContextual","expectContextual","canInsertSemicolon","hasPrecedingLineBreak","hasFollowingLineBreak","isLineTerminator","semicolon","allowAsi","expect","tryParse","fn","oldState","abortSignal","failState","thrown","aborted","checkExpressionErrors","refExpressionErrors","andThrow","shorthandAssignLoc","doubleProtoLoc","privateKeyLoc","optionalParametersLoc","isLiteralPropertyName","isPrivateName","getPrivateNameSV","hasPropertyAsPrivateName","property","isObjectProperty","isObjectMethod","initializeScopes","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","checkDestructuringPrivate","ExpressionErrors","Node","ranges","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","clonePlaceholder","raw","__clone","newNode","NodeUtils","startNode","startNodeAt","startNodeAtNode","finishNode","finishNodeAt","resetStartLocation","resetEndLocation","resetStartLocationFromNode","locationNode","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","reservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","memberName","enumName","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","invalidEnumType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","explicitType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","suggestion","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportReflectionHasImportType","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","unsupportedExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","__proto__","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","openingTagName","MissingClosingTagFragment","UnexpectedSequenceExpression","HTMLEntity","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","Error","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","importsStack","hasImport","allowShadow","unwrapParenthesizedExpression","expression","ParseBindingListFlags","LValParser","toAssignable","isLHS","_node$extra","_node$extra3","parenthesized","_node$extra2","isLast","toAssignableObjectExpressionProp","trailingCommaLoc","toAssignableList","operator","left","arg","checkToRestConversion","exprList","elt","isAssignable","isBinding","every","element","toReferencedList","isParenthesizedExpr","toReferencedListDeep","expr","parseSpread","parseMaybeAssignAllowIn","parseRestBinding","parseBindingAtom","parseBindingList","parseObjectLike","parseIdentifier","close","closeCharCode","allowEmpty","elts","first","parseAssignableListItemTypes","checkCommaAfterRest","decorators","parseDecorator","parseAssignableListItem","parseBindingRestProperty","parseBindingProperty","parsePrivateName","parsePropertyName","method","parseObjPropValue","parseMaybeDefault","param","_left","right","isValidLVal","isUnparenthesizedInAssign","binding","ObjectProperty","hasOwnProperty","call","checkLVal","in","checkClashes","strictModeChanged","hasParenthesizedAncestor","_expression$extra","checkIdentifier","validity","ParseErrorClass","isParenthesizedExpression","nextAncestor","child","concat","declareNameFromIdentifier","identifier","allowPattern","assert","x","TSErrors","AbstractMethodHasImplementation","methodName","AbstractPropertyHasInitializer","propertyName","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","AccessorCannotBeOptional","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstInitiailizerMustBeStringOrNumericLiteralOrLiteralEnumReference","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","modifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","modifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InitializerNotAllowedInAmbientContext","InvalidModifierOnTypeMember","InvalidModifierOnTypeParameter","InvalidModifierOnTypeParameterPositions","InvalidModifiersOrder","orderedModifiers","InvalidPropertyAccessAfterInstantiationExpression","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","SingleTypeParameterWithoutTrailingComma","typeParameterName","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","tsIsVarianceAnnotations","isPossiblyLiteralEnum","computed","expressions","isUncomputedMemberExpressionChain","isValidAmbientConstInitializer","estree","isNumber","isNegativeNumber","PlaceholderErrors","ClassNameIsRequired","UnexpectedSpace","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","p","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","superClass","parse","file","parseRegExpLiteral","regex","estreeParseLiteral","parseBigIntLiteral","bigInt","BigInt","_unused","parseDecimalLiteral","parseLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directive","expressionValue","stmt","rawValue","initFunction","checkDeclaration","getObjectOrClassMethodParams","isValidDirective","_stmt$expression$extr","parseBlockBody","allowDirectives","topLevel","afterBlockParse","directiveStatements","directives","d","body","pushClassMethod","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","parseFunctionBody","allowExpression","isMethod","inClassScope","funcNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","isPattern","isAccessor","shorthand","parseObjectProperty","finishCallExpression","unfinished","optional","callee","_node$arguments$","attributes","toReferencedArguments","parseExport","exportStartLoc","exported","_declaration$decorato","declaration","parseSubscript","base","noCalls","optionalChainMember","substring","stop","chain","jsx","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","codePoint","count","desc","entity","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","jsxParseAttributeValue","setContext","jsxParseExpressionContainer","parseExprAtom","jsxParseEmptyExpression","jsxParseSpreadChild","parseExpression","previousContext","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","contents","openingFragment","closingFragment","jsxParseElement","newContext","flow","flowPragma","shouldParseTypes","shouldParseEnums","matches","exec","flowParseTypeInitialiser","tok","oldInType","flowParseType","flowParsePredicate","moduloLoc","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","returnType","typeAnnotation","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","bodyNode","parseImport","hasModuleExport","bodyElement","isEsModuleType","default","isLet","exportKind","flowParseTypeAnnotation","finished","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","liberal","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStartLoc","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","oldNoAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","static","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStartLoc","inexactStartLoc","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","allowExpressionBody","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","parseStatementLike","flowParseEnumDeclaration","parseExpressionStatement","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","setOptionalParametersError","originalNoArrowAt","consequent","failed","tryParseConditionalConsequent","valid","getArrowLikeExpressions","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","SCOPE_FUNCTION","checkParams","result","parseParenItem","typeCastNode","assertModuleNodeAllowed","decl","parseExportDeclaration","declarationNode","parseExportSpecifiers","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","parseClassId","isStatement","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","isIteratorStart","_expr$extra","parseArrayLike","canBePattern","isTuple","isParenthesized","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","parseClassSuper","superTypeParameters","implemented","checkGetterSetterParams","parsePropertyNamePrefixOperator","shouldParseDefaultImport","checkImportReflection","module","parseImportSpecifierLocal","specifier","local","finishImportSpecifier","maybeParseDefaultImportSpecifier","parseImportSpecifier","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","as_ident","specifierIsTypeImport","checkReservedWord","parseFunctionParams","parseVarId","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","afterLeftParse","_jsx","currentContext","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","maybeUnwrapTypeCastExpression","async","parseArrow","shouldParseArrow","setArrowFunctionParameters","allowDuplicates","isArrowFunction","parseParenAndDistinguishExpression","canBeArrow","parseSubscripts","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewCallee","targs","parseArrowExpression","parseTopLevel","program","fileNode","skipFlowComment","hasFlowCommentCompletion","commentSkip","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorInvalidMemberInitializer","enumContext","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","literal","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","toUpperCase","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","boolsLen","numsLen","strsLen","defaultedLen","afterNext","typescript","tsParseInOutModifiers","tsParseModifiers","bind","allowedModifiers","disallowedModifiers","errorTemplate","tsParseConstModifier","tsParseInOutConstModifiers","tsIsIdentifier","tsTokenCanFollowModifier","tsNextTokenCanFollowModifier","tsParseModifier","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","modified","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","refTrailingCommaPos","nonNull","tsParseDelimitedListWorker","expectSuccess","trailingCommaPos","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseModifiers","tsParseTypeParameterName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsFillSignature","returnToken","signature","returnTokenRequired","returnTypeKey","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","tsParseTypeMemberSemicolon","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","parameters","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","paramsKey","firstParameter","tsParseTypeMember","idx","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","checkType","isLabeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsInAllowConditionalTypesContext","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplate","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","parseMaybeUnary","nodeType","keywordTypeFromName","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","tsParseConstraintForInferType","tsInDisallowConditionalTypesContext","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","previousErrorCount","_unused2","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsParseHeritageClause","originalStartLoc","delimitedList","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","cb","oldContext","oldInDisallowConditionalTypesContext","tsNextThenParseType","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","BIND_TS_ENUM","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","tsParseAmbientExternalModuleDeclaration","global","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","tsTryParseAndCatch","tsTryParseDeclare","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","parseVarStatement","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsParseTypeArgumentsInExpression","reScan_lt","tsIsDeclarationStart","override","pp","parameter","isSimpleParameter","tsDisallowOptionalPattern","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","isOptionalCall","missingParenErrorLoc","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","tokenType","_callee$extra","parseExprOp","leftStartLoc","minPrec","isSatisfies","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","cls","allowMissingInitializer","declarations","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","parseClassPropertyAnnotation","definite","parseClassAccessorProperty","declareClassPrivateMethodInScope","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","reportReservedArrowTypeParam","trailingComma","sawUnary","toAssignableParenthesizedExpression","TSTypeCastExpression","TSParameterProperty","TSNonNullExpression","TSAsExpression","TSSatisfiesExpression","TSTypeAssertion","parseMaybeDecoratorArguments","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","maybeTakeDecorators","shouldParseAsAmbientContext","getExpression","parseExportSpecifier","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","leftOfAsKey","rightOfAsKey","rightOfAs","leftOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","v8intrinsic","parseV8Intrinsic","v8IntrinsicStartLoc","parseIdentifierName","placeholders","parsePlaceholder","assertNoSpace","finishPlaceholder","isFinished","chStartsBindingIdentifier","verifyBreakContinue","isBreak","parseStatementOrSloppyAnnexBFunctionDeclaration","parseBlock","createNewLexicalScope","parseFunctionId","requireId","oldStrict","parseClassBody","startsWith","maybeParseExportDefaultSpecifier","checkExport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowNewTargetOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","_resultError$loc","parseYield","ownExpressionErrors","parseMaybeConditional","startIndex","parseExprOps","parseMaybeUnaryOrPrivate","op","prec","checkPipelineAtInfixOperator","logical","coalesce","parseExprOpRightExpr","finishedNode","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","topicReferenceWasUsedInCurrentContext","checkExponentialAfterUnary","isAwait","isAwaitAllowed","parseAwait","update","isDelete","parseUpdate","isAmbiguousAwait","updateExpressionNode","parseExprSubscripts","maybeAsyncArrow","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","addTrailingCommaExtraToNode","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","parseTopicReference","pipeProposal","lookaheadCh","parseModuleExpression","parseAsyncFunctionExpression","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","meta","parseMetaProperty","parseFunction","innerStartLoc","spreadStartLoc","optionalCommaStartLoc","spreadNodeStartLoc","innerEndLoc","arrowNode","wrapParenthesis","parenExpression","metaProp","parseNew","parseExprList","parseTemplateElement","isTagged","elemStart","elem","isTail","endOffset","elemEnd","cooked","tail","curElt","quasis","propHash","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","_params","finishedProp","generator","isExpression","hasStrictModeDirective","nonSimple","isSimpleParamList","formalParameters","canBeReservedWord","isKeyword","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","withSmartMixTopicForbiddingContext","outerContextSoloAwaitState","ret","revertScopes","parseProgram","loopLabel","switchLabel","ParseFunctionFlag","ParseStatementFlag","loneSurrogate","keywordRelationalOperator","StatementParser","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","babel7CompatTokens","interpreter","parseInterpreterDirective","finishedProgram","stmtToDirective","directiveLiteral","hasFollowingBindingAtom","endCh","chStartsBindingPattern","hasFollowingBindingIdentifier","startsUsingForOf","parseModuleItem","parseStatementListItem","allowLabeledFunction","parseStatement","allowDeclaration","allowFunctionDeclaration","parseBreakContinueStatement","parseDebuggerStatement","parseDoWhileStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","isAsyncFunction","maybeName","parseLabeledStatement","decoratorsEnabledBeforeExport","maybeDecorators","classNode","exportNode","allowExport","paramsStartLoc","lab","parseHeaderExpression","awaitAt","parseFor","startsWithLet","startsWithUsing","isLetOrUsing","initNode","parseVar","isForIn","parseForIn","startsWithAsync","isForOf","isHangingDeclaration","discriminant","cases","cur","sawDefault","isCase","block","handler","clause","finalizer","statementStart","parsedNonDirective","await","isFor","hangingDeclaration","isDeclaration","hadConstructor","publicMethod","privateMethod","publicProp","privateProp","accessorProp","publicMember","parseClassElementName","isPrivate","maybeQuestionTokenStartLoc","pushClassPrivateProperty","pushClassProperty","pushClassAccessorProperty","_member$decorators","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","_node2$declaration","isTypeExport","assertions","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkJSONModuleImport","checkNames","isDefault","isFrom","_declaration$extra","nodes","surrogate","isJSONModuleImport","_node$assertions","nonDefaultNamedSpecifier","parseMaybeImportReflection","isImportReflection","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","importSpecifier","Parser","opts","getOptions","pluginMap","pluginsMap","tokTypes","internalTokenTypes","generateExportedTokenTypes","getParser","decoratorsBeforeExport","allowCallParenthesized","proposalList","tupleSyntaxIsHash","syntaxType","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","ast","moduleError"],"sourceRoot":""}